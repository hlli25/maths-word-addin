{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/core/centralized-config.ts","webpack://office-addin-taskpane/./src/core/equation-builder.ts","webpack://office-addin-taskpane/./src/core/latex-converter.ts","webpack://office-addin-taskpane/./src/core/context-manager.ts","webpack://office-addin-taskpane/./src/core/font-measurement.ts","webpack://office-addin-taskpane/./src/ui/display-renderer.ts","webpack://office-addin-taskpane/./src/ui/input-handler.ts","webpack://office-addin-taskpane/./src/ui/tab-controller.ts","webpack://office-addin-taskpane/./src/integration/mathjax-service.ts","webpack://office-addin-taskpane/./src/integration/office-service.ts","webpack://office-addin-taskpane/./src/integration/svg-processor.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","// Centralized configuration for all mathematical symbols and operators\r\n\r\n// Comprehensive function configuration\r\ninterface FunctionConfig {\r\n  structureType: \"simple\" | \"functionsub\" | \"functionlim\" | \"function\";\r\n  hasBuiltinLatex?: boolean; // whether it has a built-in LaTeX command like \\sin\r\n}\r\n\r\nexport const FUNCTION_CONFIG: { [key: string]: FunctionConfig } = {\r\n  // Basic trigonometric functions\r\n  \"sin\": { structureType: \"simple\", hasBuiltinLatex: true },\r\n  \"cos\": { structureType: \"simple\", hasBuiltinLatex: true },\r\n  \"tan\": { structureType: \"simple\", hasBuiltinLatex: true },\r\n  \"sec\": { structureType: \"simple\", hasBuiltinLatex: true },\r\n  \"csc\": { structureType: \"simple\", hasBuiltinLatex: true },\r\n  \"cot\": { structureType: \"simple\", hasBuiltinLatex: true },\r\n  // Inverse trigonometric functions (no built-in LaTeX)\r\n  \"asin\": { structureType: \"simple\" },\r\n  \"acos\": { structureType: \"simple\" },\r\n  \"atan\": { structureType: \"simple\" },\r\n  // Hyperbolic functions\r\n  \"sinh\": { structureType: \"simple\", hasBuiltinLatex: true },\r\n  \"cosh\": { structureType: \"simple\", hasBuiltinLatex: true },\r\n  \"tanh\": { structureType: \"simple\", hasBuiltinLatex: true },\r\n  // Inverse hyperbolic functions (no built-in LaTeX)\r\n  \"asinh\": { structureType: \"simple\" },\r\n  \"acosh\": { structureType: \"simple\" },\r\n  \"atanh\": { structureType: \"simple\" },\r\n  // Logarithmic functions\r\n  \"log\": { structureType: \"simple\", hasBuiltinLatex: true },\r\n  \"logn\": { structureType: \"functionsub\" }, // log with subscript base\r\n  \"ln\": { structureType: \"simple\", hasBuiltinLatex: true },\r\n  // Limit operators\r\n  \"max\": { structureType: \"functionlim\", hasBuiltinLatex: true },\r\n  \"min\": { structureType: \"functionlim\", hasBuiltinLatex: true },\r\n  \"lim\": { structureType: \"functionlim\", hasBuiltinLatex: true },\r\n  \"argmax\": { structureType: \"functionlim\" },\r\n  \"argmin\": { structureType: \"functionlim\" },\r\n  // General function types for user-defined functions\r\n  \"function\": { structureType: \"function\" },\r\n  \"functionsub\": { structureType: \"functionsub\" },\r\n  \"functionlim\": { structureType: \"functionlim\" }\r\n};\r\n\r\n// Derived arrays for backward compatibility\r\nexport const FUNCTION_TYPE_MAP: { [key: string]: string } = Object.entries(FUNCTION_CONFIG).reduce(\r\n  (acc, [name, config]) => {\r\n    acc[name] = config.structureType;\r\n    return acc;\r\n  },\r\n  {} as { [key: string]: string }\r\n);\r\n\r\nexport const FUNCTION_NAMES = Object.keys(FUNCTION_CONFIG).filter(name => \r\n  ![\"function\", \"functionsub\", \"functionlim\"].includes(name)\r\n);\r\n\r\nexport const BUILTIN_FUNCTION_COMMANDS = Object.entries(FUNCTION_CONFIG)\r\n  .filter(([_, config]) => config.hasBuiltinLatex)\r\n  .map(([name, _]) => `\\\\${name}`);\r\n\r\n// Symbol information with Unicode mapping and default styling\r\nexport interface SymbolInfo {\r\n  unicode: string;\r\n  defaultItalic: boolean; // true = italic by default (variables), false = upright by default (operators)\r\n  isLargeOperator?: boolean; // true if it is a large operator (sum, prod, etc.)\r\n  dataAttribute?: string; // data-operator attribute value for CSS targeting\r\n  needsInlineScaling?: boolean; // true if operator needs CSS scaling in inline mode\r\n}\r\n\r\n// Symbol mappings with styling information\r\nexport const SYMBOL_CONFIG: { [key: string]: SymbolInfo } = {\r\n  // Greek lowercase letters (italic by default)\r\n  \"\\\\alpha\": { unicode: \"α\", defaultItalic: true },\r\n  \"\\\\beta\": { unicode: \"β\", defaultItalic: true },\r\n  \"\\\\gamma\": { unicode: \"γ\", defaultItalic: true },\r\n  \"\\\\delta\": { unicode: \"δ\", defaultItalic: true },\r\n  \"\\\\epsilon\": { unicode: \"ε\", defaultItalic: true },\r\n  \"\\\\varepsilon\": { unicode: \"ε\", defaultItalic: true },\r\n  \"\\\\zeta\": { unicode: \"ζ\", defaultItalic: true },\r\n  \"\\\\eta\": { unicode: \"η\", defaultItalic: true },\r\n  \"\\\\theta\": { unicode: \"θ\", defaultItalic: true },\r\n  \"\\\\vartheta\": { unicode: \"ϑ\", defaultItalic: true },\r\n  \"\\\\iota\": { unicode: \"ι\", defaultItalic: true },\r\n  \"\\\\kappa\": { unicode: \"κ\", defaultItalic: true },\r\n  \"\\\\lambda\": { unicode: \"λ\", defaultItalic: true },\r\n  \"\\\\mu\": { unicode: \"μ\", defaultItalic: true },\r\n  \"\\\\nu\": { unicode: \"ν\", defaultItalic: true },\r\n  \"\\\\xi\": { unicode: \"ξ\", defaultItalic: true },\r\n  \"\\\\omicron\": { unicode: \"ο\", defaultItalic: true },\r\n  \"\\\\pi\": { unicode: \"π\", defaultItalic: true },\r\n  \"\\\\varpi\": { unicode: \"ϖ\", defaultItalic: true },\r\n  \"\\\\rho\": { unicode: \"ρ\", defaultItalic: true },\r\n  \"\\\\varrho\": { unicode: \"ϱ\", defaultItalic: true },\r\n  \"\\\\sigma\": { unicode: \"σ\", defaultItalic: true },\r\n  \"\\\\varsigma\": { unicode: \"ς\", defaultItalic: true },\r\n  \"\\\\tau\": { unicode: \"τ\", defaultItalic: true },\r\n  \"\\\\upsilon\": { unicode: \"υ\", defaultItalic: true },\r\n  \"\\\\phi\": { unicode: \"φ\", defaultItalic: true },\r\n  \"\\\\varphi\": { unicode: \"φ\", defaultItalic: true },\r\n  \"\\\\chi\": { unicode: \"χ\", defaultItalic: true },\r\n  \"\\\\psi\": { unicode: \"ψ\", defaultItalic: true },\r\n  \"\\\\omega\": { unicode: \"ω\", defaultItalic: true },\r\n\r\n  // Greek uppercase letters (upright by default)\r\n  \"\\\\Gamma\": { unicode: \"Γ\", defaultItalic: false },\r\n  \"\\\\Delta\": { unicode: \"Δ\", defaultItalic: false },\r\n  \"\\\\Theta\": { unicode: \"Θ\", defaultItalic: false },\r\n  \"\\\\Lambda\": { unicode: \"Λ\", defaultItalic: false },\r\n  \"\\\\Pi\": { unicode: \"Π\", defaultItalic: false },\r\n  \"\\\\Sigma\": { unicode: \"Σ\", defaultItalic: false },\r\n  \"\\\\Upsilon\": { unicode: \"Υ\", defaultItalic: false },\r\n  \"\\\\Phi\": { unicode: \"Φ\", defaultItalic: false },\r\n  \"\\\\Chi\": { unicode: \"Χ\", defaultItalic: false },\r\n  \"\\\\Psi\": { unicode: \"Ψ\", defaultItalic: false },\r\n  \"\\\\Omega\": { unicode: \"Ω\", defaultItalic: false },\r\n\r\n  // Calculus symbols\r\n  \"\\\\partial\": { unicode: \"∂\", defaultItalic: true },\r\n  \"\\\\nabla\": { unicode: \"∇\", defaultItalic: false },\r\n  \"\\\\infty\": { unicode: \"∞\", defaultItalic: false },\r\n\r\n  // Arithmetic operators (upright by default)\r\n  \"\\\\times\": { unicode: \"×\", defaultItalic: false },\r\n  \"\\\\divsymbol\": { unicode: \"÷\", defaultItalic: false }, // Division symbol (Physics package - MathJax 3.0)\r\n  \"\\\\pm\": { unicode: \"±\", defaultItalic: false },\r\n  \"\\\\mp\": { unicode: \"∓\", defaultItalic: false },\r\n  \"\\\\cdot\": { unicode: \"·\", defaultItalic: false },\r\n  \"\\\\ast\": { unicode: \"∗\", defaultItalic: false },\r\n  \"\\\\star\": { unicode: \"⋆\", defaultItalic: false },\r\n  \"\\\\circ\": { unicode: \"∘\", defaultItalic: false },\r\n  \"\\\\bullet\": { unicode: \"•\", defaultItalic: false },\r\n\r\n  // Comparison and relations (upright by default)\r\n  \"=\": { unicode: \"=\", defaultItalic: false },\r\n  \"<\": { unicode: \"<\", defaultItalic: false },\r\n  \">\": { unicode: \">\", defaultItalic: false },\r\n  \"+\": { unicode: \"+\", defaultItalic: false },\r\n  \"-\": { unicode: \"-\", defaultItalic: false },\r\n  \"\\\\neq\": { unicode: \"≠\", defaultItalic: false },\r\n  \"\\\\sim\": { unicode: \"∼\", defaultItalic: false },\r\n  \"\\\\simeq\": { unicode: \"≃\", defaultItalic: false },\r\n  \"\\\\approx\": { unicode: \"≈\", defaultItalic: false },\r\n  \"\\\\equiv\": { unicode: \"≡\", defaultItalic: false },\r\n  \"\\\\cong\": { unicode: \"≅\", defaultItalic: false },\r\n  \"\\\\ncong\": { unicode: \"≇\", defaultItalic: false },\r\n  \"\\\\propto\": { unicode: \"∝\", defaultItalic: false },\r\n  \"\\\\leq\": { unicode: \"≤\", defaultItalic: false },\r\n  \"\\\\geq\": { unicode: \"≥\", defaultItalic: false },\r\n  \"\\\\nless\": { unicode: \"≮\", defaultItalic: false },\r\n  \"\\\\ngtr\": { unicode: \"≯\", defaultItalic: false },\r\n  \"\\\\nleq\": { unicode: \"≰\", defaultItalic: false },\r\n  \"\\\\ngeq\": { unicode: \"≱\", defaultItalic: false },\r\n  \"\\\\prec\": { unicode: \"≺\", defaultItalic: false },\r\n  \"\\\\succ\": { unicode: \"≻\", defaultItalic: false },\r\n  \"\\\\preceq\": { unicode: \"⪯\", defaultItalic: false },\r\n  \"\\\\succeq\": { unicode: \"⪰\", defaultItalic: false },\r\n  \"\\\\ll\": { unicode: \"≪\", defaultItalic: false },\r\n  \"\\\\gg\": { unicode: \"≫\", defaultItalic: false },\r\n\r\n  // Set operations (upright by default)\r\n  \"\\\\cap\": { unicode: \"∩\", defaultItalic: false },\r\n  \"\\\\cup\": { unicode: \"∪\", defaultItalic: false },\r\n  \"\\\\setminus\": { unicode: \"∖\", defaultItalic: false },\r\n  \"\\\\in\": { unicode: \"∈\", defaultItalic: false },\r\n  \"\\\\ni\": { unicode: \"∋\", defaultItalic: false },\r\n  \"\\\\notin\": { unicode: \"∉\", defaultItalic: false },\r\n  \"\\\\subset\": { unicode: \"⊂\", defaultItalic: false },\r\n  \"\\\\supset\": { unicode: \"⊃\", defaultItalic: false },\r\n  \"\\\\subseteq\": { unicode: \"⊆\", defaultItalic: false },\r\n  \"\\\\supseteq\": { unicode: \"⊇\", defaultItalic: false },\r\n  \"\\\\nsubseteq\": { unicode: \"⊈\", defaultItalic: false },\r\n  \"\\\\nsupseteq\": { unicode: \"⊉\", defaultItalic: false },\r\n  \"\\\\subsetneq\": { unicode: \"⊊\", defaultItalic: false },\r\n  \"\\\\supsetneq\": { unicode: \"⊋\", defaultItalic: false },\r\n\r\n  // Binary operators (upright by default)\r\n  \"\\\\oplus\": { unicode: \"⊕\", defaultItalic: false },\r\n  \"\\\\ominus\": { unicode: \"⊖\", defaultItalic: false },\r\n  \"\\\\otimes\": { unicode: \"⊗\", defaultItalic: false },\r\n  \"\\\\oslash\": { unicode: \"⊘\", defaultItalic: false },\r\n  \"\\\\odot\": { unicode: \"⊙\", defaultItalic: false },\r\n  \"\\\\triangleleft\": { unicode: \"◁\", defaultItalic: false },\r\n  \"\\\\triangleright\": { unicode: \"▷\", defaultItalic: false },\r\n  \"\\\\wr\": { unicode: \"≀\", defaultItalic: false },\r\n\r\n  // Logic operators (upright by default)\r\n  \"\\\\wedge\": { unicode: \"∧\", defaultItalic: false },\r\n  \"\\\\vee\": { unicode: \"∨\", defaultItalic: false },\r\n  \"\\\\vdash\": { unicode: \"⊢\", defaultItalic: false },\r\n  \"\\\\models\": { unicode: \"⊨\", defaultItalic: false },\r\n  \"\\\\top\": { unicode: \"⊤\", defaultItalic: false },\r\n  \"\\\\bot\": { unicode: \"⊥\", defaultItalic: false },\r\n\r\n  // Arrow symbols (upright by default)\r\n  \"\\\\rightarrow\": { unicode: \"→\", defaultItalic: false },\r\n  \"\\\\leftarrow\": { unicode: \"←\", defaultItalic: false },\r\n  \"\\\\uparrow\": { unicode: \"↑\", defaultItalic: false },\r\n  \"\\\\downarrow\": { unicode: \"↓\", defaultItalic: false },\r\n  \"\\\\leftrightarrow\": { unicode: \"↔\", defaultItalic: false },\r\n  \"\\\\updownarrow\": { unicode: \"↕\", defaultItalic: false },\r\n  \"\\\\nearrow\": { unicode: \"↗\", defaultItalic: false },\r\n  \"\\\\searrow\": { unicode: \"↘\", defaultItalic: false },\r\n  \"\\\\Rightarrow\": { unicode: \"⇒\", defaultItalic: false },\r\n  \"\\\\Leftarrow\": { unicode: \"⇐\", defaultItalic: false },\r\n  \"\\\\Uparrow\": { unicode: \"⇑\", defaultItalic: false },\r\n  \"\\\\Downarrow\": { unicode: \"⇓\", defaultItalic: false },\r\n  \"\\\\Leftrightarrow\": { unicode: \"⇔\", defaultItalic: false },\r\n  \"\\\\Updownarrow\": { unicode: \"⇕\", defaultItalic: false },\r\n  \"\\\\longrightarrow\": { unicode: \"⟶\", defaultItalic: false },\r\n  \"\\\\longleftarrow\": { unicode: \"⟵\", defaultItalic: false },\r\n  \"\\\\longleftrightarrow\": { unicode: \"⟷\", defaultItalic: false },\r\n  \"\\\\Longrightarrow\": { unicode: \"⟹\", defaultItalic: false },\r\n  \"\\\\Longleftarrow\": { unicode: \"⟸\", defaultItalic: false },\r\n  \"\\\\Longleftrightarrow\": { unicode: \"⟺\", defaultItalic: false },\r\n  \"\\\\circlearrowleft\": { unicode: \"↺\", defaultItalic: false },\r\n  \"\\\\circlearrowright\": { unicode: \"↻\", defaultItalic: false },\r\n  \"\\\\curvearrowleft\": { unicode: \"↶\", defaultItalic: false },\r\n  \"\\\\curvearrowright\": { unicode: \"↷\", defaultItalic: false },\r\n  \"\\\\hookleftarrow\": { unicode: \"↩\", defaultItalic: false },\r\n  \"\\\\hookrightarrow\": { unicode: \"↪\", defaultItalic: false },\r\n\r\n  // Miscellaneous symbols (upright by default)\r\n  \"\\\\bowtie\": { unicode: \"⋈\", defaultItalic: false },\r\n  \"\\\\diamond\": { unicode: \"⋄\", defaultItalic: false },\r\n  \"\\\\asymp\": { unicode: \"≍\", defaultItalic: false },\r\n  \"\\\\triangleq\": { unicode: \"≜\", defaultItalic: false },\r\n  \"\\\\therefore\": { unicode: \"∴\", defaultItalic: false },\r\n  \"\\\\because\": { unicode: \"∵\", defaultItalic: false },\r\n\r\n  // Logic symbols (upright by default)\r\n  \"\\\\forall\": { unicode: \"∀\", defaultItalic: false },\r\n  \"\\\\exists\": { unicode: \"∃\", defaultItalic: false },\r\n  \"\\\\nexists\": { unicode: \"∄\", defaultItalic: false },\r\n  \"\\\\emptyset\": { unicode: \"∅\", defaultItalic: false },\r\n  \"\\\\varnothing\": { unicode: \"∅\", defaultItalic: false },\r\n\r\n  // Letter-like symbols (upright by default)\r\n  \"\\\\mathbb{R}\": { unicode: \"ℝ\", defaultItalic: false },\r\n  \"\\\\mathbb{Z}\": { unicode: \"ℤ\", defaultItalic: false },\r\n  \"\\\\mathbb{Q}\": { unicode: \"ℚ\", defaultItalic: false },\r\n  \"\\\\mathbb{N}\": { unicode: \"ℕ\", defaultItalic: false },\r\n  \"\\\\mathbb{C}\": { unicode: \"ℂ\", defaultItalic: false },\r\n  \"\\\\mathbb{H}\": { unicode: \"ℍ\", defaultItalic: false },\r\n  \"\\\\mathbb{P}\": { unicode: \"ℙ\", defaultItalic: false },\r\n  \"\\\\wp\": { unicode: \"℘\", defaultItalic: false },\r\n  \"\\\\aleph\": { unicode: \"ℵ\", defaultItalic: false },\r\n  \"\\\\beth\": { unicode: \"ℶ\", defaultItalic: false },\r\n  \"\\\\gimel\": { unicode: \"ℷ\", defaultItalic: false },\r\n  \"\\\\daleth\": { unicode: \"ℸ\", defaultItalic: false },\r\n\r\n  // Geometry symbols (upright by default)\r\n  \"\\\\angle\": { unicode: \"∠\", defaultItalic: false },\r\n  \"\\\\measuredangle\": { unicode: \"∡\", defaultItalic: false },\r\n  \"\\\\sphericalangle\": { unicode: \"∢\", defaultItalic: false },\r\n  \"\\\\parallel\": { unicode: \"∥\", defaultItalic: false },\r\n  \"\\\\nparallel\": { unicode: \"∦\", defaultItalic: false },\r\n  \"\\\\triangle\": { unicode: \"△\", defaultItalic: false },\r\n  \"\\\\square\": { unicode: \"□\", defaultItalic: false },\r\n  \"\\\\blacksquare\": { unicode: \"■\", defaultItalic: false },\r\n  \"\\\\lozenge\": { unicode: \"◊\", defaultItalic: false },\r\n  \"\\\\blacklozenge\": { unicode: \"⧫\", defaultItalic: false },\r\n  \"\\\\bigcirc\": { unicode: \"○\", defaultItalic: false },\r\n  \"\\\\degree\": { unicode: \"°\", defaultItalic: false },\r\n\r\n  // Large operators (upright by default)\r\n  \"\\\\sum\": {\r\n    unicode: \"∑\",\r\n    defaultItalic: false,\r\n    isLargeOperator: true,\r\n    dataAttribute: \"sum\",\r\n    needsInlineScaling: true,\r\n  },\r\n  \"\\\\prod\": {\r\n    unicode: \"∏\",\r\n    defaultItalic: false,\r\n    isLargeOperator: true,\r\n    dataAttribute: \"prod\",\r\n    needsInlineScaling: true,\r\n  },\r\n  \"\\\\coprod\": {\r\n    unicode: \"∐\",\r\n    defaultItalic: false,\r\n    isLargeOperator: true,\r\n    dataAttribute: \"coprod\",\r\n    needsInlineScaling: true,\r\n  },\r\n  \"\\\\bigcup\": {\r\n    unicode: \"⋃\",\r\n    defaultItalic: false,\r\n    isLargeOperator: true,\r\n    dataAttribute: \"bigcup\",\r\n    needsInlineScaling: true,\r\n  },\r\n  \"\\\\bigcap\": {\r\n    unicode: \"⋂\",\r\n    defaultItalic: false,\r\n    isLargeOperator: true,\r\n    dataAttribute: \"bigcap\",\r\n    needsInlineScaling: true,\r\n  },\r\n  \"\\\\bigvee\": {\r\n    unicode: \"⋁\",\r\n    defaultItalic: false,\r\n    isLargeOperator: true,\r\n    dataAttribute: \"bigvee\",\r\n    needsInlineScaling: true,\r\n  },\r\n  \"\\\\bigwedge\": {\r\n    unicode: \"⋀\",\r\n    defaultItalic: false,\r\n    isLargeOperator: true,\r\n    dataAttribute: \"bigwedge\",\r\n    needsInlineScaling: true,\r\n  },\r\n  \"\\\\bigoplus\": {\r\n    unicode: \"⨁\",\r\n    defaultItalic: false,\r\n    isLargeOperator: true,\r\n    dataAttribute: \"bigoplus\",\r\n    needsInlineScaling: true,\r\n  },\r\n  \"\\\\bigotimes\": {\r\n    unicode: \"⨂\",\r\n    defaultItalic: false,\r\n    isLargeOperator: true,\r\n    dataAttribute: \"bigotimes\",\r\n    needsInlineScaling: true,\r\n  },\r\n  \"\\\\bigodot\": {\r\n    unicode: \"⨀\",\r\n    defaultItalic: false,\r\n    isLargeOperator: true,\r\n    dataAttribute: \"bigodot\",\r\n    needsInlineScaling: true,\r\n  },\r\n  \"\\\\biguplus\": {\r\n    unicode: \"⨄\",\r\n    defaultItalic: false,\r\n    isLargeOperator: true,\r\n    dataAttribute: \"biguplus\",\r\n    needsInlineScaling: true,\r\n  },\r\n  \"\\\\int\": {\r\n    unicode: \"∫\",\r\n    defaultItalic: false,\r\n    isLargeOperator: true,\r\n    dataAttribute: \"int\",\r\n    // No inline scaling needed\r\n  },\r\n  \"\\\\oint\": {\r\n    unicode: \"∮\",\r\n    defaultItalic: false,\r\n    isLargeOperator: true,\r\n    dataAttribute: \"oint\",\r\n    // No inline scaling needed\r\n  },\r\n};\r\n\r\n// Map LaTeX commands to Unicode symbols for easy lookup\r\nconst configMappings = Object.entries(SYMBOL_CONFIG).reduce(\r\n  (acc, [latex, info]) => {\r\n    acc[latex] = info.unicode;\r\n    return acc;\r\n  },\r\n  {} as { [key: string]: string }\r\n);\r\n\r\nexport const LATEX_TO_UNICODE: { [key: string]: string } = configMappings;\r\n\r\n// Function to get symbol info with default styling\r\nexport function getSymbolInfo(latex: string): SymbolInfo | undefined {\r\n  return SYMBOL_CONFIG[latex];\r\n}\r\n\r\n// Function to check if a symbol should be italic by default\r\nexport function isSymbolDefaultItalic(latex: string): boolean {\r\n  const info = SYMBOL_CONFIG[latex];\r\n  return info ? info.defaultItalic : false;\r\n}\r\n\r\n// Reverse mapping: Unicode to LaTeX\r\nexport const UNICODE_TO_LATEX: { [key: string]: string } = Object.entries(SYMBOL_CONFIG).reduce(\r\n  (acc, [latex, info]) => {\r\n    acc[info.unicode] = latex;\r\n    return acc;\r\n  },\r\n  {} as { [key: string]: string }\r\n);\r\n\r\n// Helper functions for common operations\r\n\r\n// Helper functions for large operators\r\nexport function getLargeOperators(): string[] {\r\n  return Object.entries(SYMBOL_CONFIG)\r\n    .filter(([_, info]) => info.isLargeOperator)\r\n    .map(([latex, _]) => latex);\r\n}\r\n\r\nexport function getOperatorsNeedingInlineScaling(): string[] {\r\n  return Object.entries(SYMBOL_CONFIG)\r\n    .filter(([_, info]) => info.isLargeOperator && info.needsInlineScaling)\r\n    .map(([_, info]) => info.dataAttribute!)\r\n    .filter(Boolean);\r\n}\r\n\r\nexport function getDataAttributeForOperator(latex: string): string | undefined {\r\n  const info = SYMBOL_CONFIG[latex];\r\n  return info?.isLargeOperator ? info.dataAttribute : undefined;\r\n}\r\n\r\n// For backward compatibility, maintain the simple array of LaTeX commands\r\nexport const LARGE_OPERATORS = getLargeOperators();\r\n\r\n// Convert LaTeX command to Unicode symbol\r\nexport function latexToUnicode(latex: string): string | undefined {\r\n  return LATEX_TO_UNICODE[latex];\r\n}\r\n\r\n// Convert Unicode symbol to LaTeX command\r\nexport function unicodeToLatex(unicode: string): string | undefined {\r\n  return UNICODE_TO_LATEX[unicode];\r\n}\r\n\r\n// Check if a string is a LaTeX command that maps to a symbol\r\nexport function isLatexSymbolCommand(latex: string): boolean {\r\n  return latex in LATEX_TO_UNICODE;\r\n}\r\n\r\n// Map integral types to their corresponding Unicode symbols\r\nexport function getIntegralSymbol(integralType: \"single\" | \"double\" | \"triple\" | \"contour\"): string {\r\n  switch (integralType) {\r\n    case \"single\":\r\n      return \"∫\";\r\n    case \"double\":\r\n      return \"∬\";\r\n    case \"triple\":\r\n      return \"∭\";\r\n    case \"contour\":\r\n      return \"∮\";\r\n    default:\r\n      return \"∫\";\r\n  }\r\n}\r\n\r\n// Bracket pairs configuration for LaTeX processing\r\nexport interface BracketPair {\r\n  left: string;\r\n  right: string;\r\n  leftDisplay: string;  // Display character for left bracket\r\n  rightDisplay: string; // Display character for right bracket\r\n}\r\n\r\nexport const BRACKET_PAIRS: BracketPair[] = [\r\n  { left: \"(\", right: \")\", leftDisplay: \"(\", rightDisplay: \")\" },\r\n  { left: \"[\", right: \"]\", leftDisplay: \"[\", rightDisplay: \"]\" },\r\n  { left: \"{\", right: \"}\", leftDisplay: \"{\", rightDisplay: \"}\" },\r\n  { left: \"\\\\{\", right: \"\\\\}\", leftDisplay: \"{\", rightDisplay: \"}\" },\r\n  { left: \"\\\\langle\", right: \"\\\\rangle\", leftDisplay: \"⟨\", rightDisplay: \"⟩\" },\r\n  { left: \"\\\\lfloor\", right: \"\\\\rfloor\", leftDisplay: \"⌊\", rightDisplay: \"⌋\" },\r\n  { left: \"\\\\lceil\", right: \"\\\\rceil\", leftDisplay: \"⌈\", rightDisplay: \"⌉\" },\r\n  { left: \"\\\\lvert\", right: \"\\\\rvert\", leftDisplay: \"|\", rightDisplay: \"|\" },\r\n  { left: \"\\\\lVert\", right: \"\\\\rVert\", leftDisplay: \"‖\", rightDisplay: \"‖\" },\r\n  { left: \"|\", right: \"|\", leftDisplay: \"|\", rightDisplay: \"|\" },\r\n  { left: \"\\\\|\", right: \"\\\\|\", leftDisplay: \"‖\", rightDisplay: \"‖\" },\r\n];\r\n\r\n// Integral commands for LaTeX processing\r\nexport const INTEGRAL_COMMANDS = [\r\n  // Indefinite integrals (2 parameters)\r\n  \"\\\\inti\", \"\\\\intd\",\r\n  \"\\\\iinti\", \"\\\\iintd\", \r\n  \"\\\\iiinti\", \"\\\\iiintd\",\r\n  \"\\\\ointi\", \"\\\\ointd\",\r\n  \r\n  // Multiple integrals with subscript (3 parameters)\r\n  \"\\\\iintisub\", \"\\\\iintdsub\",\r\n  \"\\\\iiintisub\", \"\\\\iiintdsub\",\r\n  \"\\\\ointisub\", \"\\\\ointdsub\",\r\n  \r\n  // Multiple integrals with lower limit (3 parameters)\r\n  \"\\\\iintilower\", \"\\\\iintdlower\",\r\n  \"\\\\iiintilower\", \"\\\\iiintdlower\",\r\n  \r\n  // Definite integrals - no limits (4 parameters)\r\n  \"\\\\intinolim\", \"\\\\intdnolim\",\r\n  \"\\\\iintinolim\", \"\\\\iintdnolim\",\r\n  \"\\\\iiintinolim\", \"\\\\iiintdnolim\",\r\n  \"\\\\ointinolim\", \"\\\\ointdnolim\",\r\n  \r\n  // Definite integrals - with limits (4 parameters)\r\n  \"\\\\intilim\", \"\\\\intdlim\",\r\n  \"\\\\iintilim\", \"\\\\iintdlim\",\r\n  \"\\\\iiintilim\", \"\\\\iiintdlim\",\r\n];\r\n\r\n// Helper functions for bracket matching\r\nexport function getBracketPairMap(): { [key: string]: string } {\r\n  const map: { [key: string]: string } = {};\r\n  BRACKET_PAIRS.forEach(pair => {\r\n    map[pair.leftDisplay] = pair.rightDisplay;\r\n  });\r\n  return map;\r\n}\r\n\r\nexport function getOpenBrackets(): Set<string> {\r\n  const set = new Set<string>();\r\n  BRACKET_PAIRS.forEach(pair => {\r\n    set.add(pair.leftDisplay);\r\n  });\r\n  return set;\r\n}\r\n\r\nexport function getCloseBrackets(): Set<string> {\r\n  const set = new Set<string>();\r\n  BRACKET_PAIRS.forEach(pair => {\r\n    set.add(pair.rightDisplay);\r\n  });\r\n  return set;\r\n}\r\n\r\n// Validate brackets in text for mixed bracket pairs\r\nexport function hasMixedBrackets(text: string): boolean {\r\n  if (!text || text.length === 0) return false;\r\n\r\n  const foundBracketTypes = new Set<string>();\r\n\r\n  // Check which bracket types are present in the text\r\n  for (const pair of BRACKET_PAIRS) {\r\n    if (text.includes(pair.left) || text.includes(pair.right)) {\r\n      foundBracketTypes.add(`${pair.left}-${pair.right}`);\r\n    }\r\n  }\r\n\r\n  // If more than one bracket type is found, it's mixed\r\n  return foundBracketTypes.size > 1;\r\n}\r\n\r\n// Get the length of the longest LaTeX command that matches at a position\r\nexport function getLatexCommandLength(text: string, startIndex: number): number {\r\n  // Check for matches starting with the longest possible commands\r\n  const maxLength = 20;\r\n  for (let len = Math.min(maxLength, text.length - startIndex); len >= 2; len--) {\r\n    const substr = text.substr(startIndex, len);\r\n    if (LATEX_TO_UNICODE[substr]) {\r\n      return len;\r\n    }\r\n  }\r\n  return 0;\r\n}\r\n\r\n// Structure navigation field configuration\r\nexport const STRUCTURE_FIELD_LISTS: { [structureType: string]: string[] } = {\r\n  \"fraction\": [\"numerator\", \"denominator\"],\r\n  \"bevelled-fraction\": [\"numerator\", \"denominator\"],\r\n  \"nthroot\": [\"radicand\", \"index\"],\r\n  \"script\": [\"base\", \"superscript\", \"subscript\"],\r\n  \"integral\": [\"upperLimit\", \"lowerLimit\", \"integrand\", \"differentialVariable\"],\r\n  \"derivative\": [\"order\", \"function\", \"variable\"],\r\n  \"large-operator\": [\"lowerLimit\", \"upperLimit\", \"operand\"],\r\n  \"function\": [\"functionName\", \"functionConstraint\", \"functionBase\", \"functionArgument\"],\r\n  \"accent\": [\"accentBase\", \"accentLabel\"],\r\n  \"matrix\": [], // Dynamic based on rows/cols\r\n  \"stack\": [],  // Dynamic based on rows/cols\r\n  \"cases\": []   // Dynamic based on rows/cols\r\n};\r\n\r\n// Helper function to check if an element is a navigable structure\r\nexport function isNavigableStructure(elementType: string): boolean {\r\n  return elementType in STRUCTURE_FIELD_LISTS;\r\n}\r\n\r\n// Function to get structure fields for navigation\r\nexport function getStructureNavigationFields(element: any): string[] {\r\n  const baseFields = STRUCTURE_FIELD_LISTS[element.type] || [];\r\n  \r\n  // Handle dynamic fields for matrix-like structures\r\n  if (element.type === \"matrix\" || element.type === \"stack\" || element.type === \"cases\") {\r\n    const fields = [];\r\n    if (element.cells) {\r\n      for (let row = 0; row < element.rows; row++) {\r\n        for (let col = 0; col < element.cols; col++) {\r\n          fields.push(`cell_${row}_${col}`);\r\n        }\r\n      }\r\n    }\r\n    return fields;\r\n  }\r\n  \r\n  // Filter out fields that don't exist on this specific element\r\n  return baseFields.filter(field => {\r\n    if (field === \"superscript\") return element.superscript;\r\n    if (field === \"subscript\") return element.subscript;\r\n    if (field === \"upperLimit\") return element.upperLimit;\r\n    if (field === \"lowerLimit\") return element.lowerLimit;\r\n    if (field === \"order\") return Array.isArray(element.order);\r\n    if (field === \"functionName\") return [\"function\", \"functionsub\", \"functionlim\"].includes(element.functionType || \"\");\r\n    if (field === \"functionConstraint\") return element.functionConstraint;\r\n    if (field === \"functionBase\") return element.functionBase;\r\n    if (field === \"accentLabel\") return element.accentLabel; // Only include if accent has a label\r\n    return true; // Include field by default\r\n  });\r\n}\r\n","// Equation element types and builder functionality\r\nimport { getBracketPairMap, getOpenBrackets, getCloseBrackets } from './centralized-config';\r\n\r\nexport interface EquationElement {\r\n  id: string;\r\n  type:\r\n    | \"text\"\r\n    | \"fraction\"\r\n    | \"bevelled-fraction\"\r\n    | \"sqrt\"\r\n    | \"nthroot\"\r\n    | \"script\"\r\n    | \"bracket\"\r\n    | \"large-operator\"\r\n    | \"derivative\"\r\n    | \"integral\"\r\n    | \"matrix\"\r\n    | \"stack\"\r\n    | \"cases\"\r\n    | \"wrapper\"\r\n    | \"accent\"\r\n    | \"function\";\r\n  value?: string;\r\n  // for fraction and bevelled-fraction\r\n  numerator?: EquationElement[];\r\n  denominator?: EquationElement[];\r\n  // for sqrt and nthroot\r\n  radicand?: EquationElement[];\r\n  // for nthroot\r\n  index?: EquationElement[];\r\n  // for script\r\n  base?: EquationElement[];\r\n  superscript?: EquationElement[];\r\n  subscript?: EquationElement[];\r\n  // for bracket\r\n  content?: EquationElement[];\r\n  leftBracketSymbol?: string;\r\n  rightBracketSymbol?: string;\r\n  scaleFactor?: number;\r\n  // for large operators (sum, product, union, intersection, etc. & definite integral)\r\n  operator?: string;\r\n  displayMode?: \"inline\" | \"display\";\r\n  limitMode?: \"default\" | \"nolimits\" | \"limits\"; // how to position limits\r\n  lowerLimit?: EquationElement[];\r\n  upperLimit?: EquationElement[];\r\n  operand?: EquationElement[]; // the expression after the operator\r\n  // text formatting\r\n  bold?: boolean;\r\n  italic?: boolean;\r\n  underline?: \"single\" | \"double\";\r\n  strikethrough?: boolean;\r\n  cancel?: boolean;\r\n  color?: string;\r\n  textMode?: boolean;\r\n  // for derivative (df/dx)\r\n  order?: number | EquationElement[]; // derivative order (1 or n for nth)\r\n  function?: EquationElement[]; // f in df/dx\r\n  variable?: EquationElement[]; // x in df/dx\r\n  isLongForm?: boolean; // true for \\dv{x}(\\grande{f}) format\r\n  isPartial?: boolean; // true for partial derivatives (∂f/∂x)\r\n  // for integral (custom format: ∫ f(x) dx)\r\n  integrand?: EquationElement[]; // f(x)\r\n  differentialVariable?: EquationElement[]; // x in dx\r\n  integralStyle?: \"italic\" | \"roman\"; // style for d\r\n  isDefinite?: boolean; // whether this is a definite integral\r\n  integralType?: \"single\" | \"double\" | \"triple\" | \"contour\"; // type of integral (may extend in future)\r\n  // for matrix\r\n  matrixType?: \"parentheses\" | \"brackets\" | \"braces\" | \"bars\" | \"double-bars\" | \"none\";\r\n  rows?: number;\r\n  cols?: number;\r\n  cells?: Record<string, EquationElement[]>; // Object with keys like cell_0_0, cell_1_0, etc.\r\n  // for stack (vertical arrangement without brackets)\r\n  stackType?: \"plain\"; // Plain vertical arrangement using array environment\r\n  // for cases (piecewise functions with left brace)\r\n  casesType?: \"cases\"; // Piecewise functions with left curly brace\r\n  // for accent\r\n  accentType?:\r\n    | \"hat\"\r\n    | \"tilde\"\r\n    | \"bar\"\r\n    | \"dot\"\r\n    | \"ddot\"\r\n    | \"vec\"\r\n    | \"widehat\"\r\n    | \"widetilde\"\r\n    | \"widebar\"\r\n    | \"overrightarrow\"\r\n    | \"overleftarrow\"\r\n    | \"overleftrightarrow\"\r\n    | \"overbrace\"\r\n    | \"underbrace\"\r\n    | \"labeledoverbrace\"\r\n    | \"labeledunderbrace\"\r\n    | \"overparen\"\r\n    | \"underparen\";\r\n  accentPosition?: \"over\" | \"under\";\r\n  accentBase?: EquationElement[]; // Content under/over the accent\r\n  accentLabel?: EquationElement[]; // Optional label for braces\r\n  // for function\r\n  functionType?: string; // Type of function\r\n  functionName?: EquationElement[];\r\n  functionArgument?: EquationElement[]; // Main argument of the function\r\n  functionBase?: EquationElement[]; // Base/subscript for functions like log_n\r\n  functionConstraint?: EquationElement[]; // Constraint for limit functions\r\n  // For elements that are part of wrapper groups (multi-wrapper support)\r\n  wrappers?: {\r\n    underline?: { id: string; type: \"single\" | \"double\" };\r\n    cancel?: { id: string };\r\n    color?: { id: string; value: string };\r\n    textMode?: { id: string };\r\n  };\r\n  // Order in which wrappers were applied by the user\r\n  wrapperOrder?: string[];\r\n}\r\n\r\nexport class EquationBuilder {\r\n  private equation: EquationElement[] = [];\r\n  private elementIdCounter = 0;\r\n\r\n  constructor() {\r\n    this.clear();\r\n  }\r\n\r\n  getEquation(): EquationElement[] {\r\n    return this.equation;\r\n  }\r\n\r\n  setEquation(equation: EquationElement[]): void {\r\n    this.equation = equation;\r\n  }\r\n\r\n  clear(): void {\r\n    this.equation = [];\r\n    this.elementIdCounter = 0;\r\n  }\r\n\r\n  isEmpty(): boolean {\r\n    return this.equation.length === 0;\r\n  }\r\n\r\n  public generateElementId(): string {\r\n    return `element-${this.elementIdCounter++}`;\r\n  }\r\n\r\n  insertElement(element: EquationElement, context: EquationElement[], position: number): void {\r\n    context.splice(position, 0, element);\r\n  }\r\n\r\n  removeElement(context: EquationElement[], position: number): void {\r\n    if (position >= 0 && position < context.length) {\r\n      context.splice(position, 1);\r\n    }\r\n  }\r\n\r\n  createTextElement(text: string): EquationElement {\r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"text\",\r\n      value: text,\r\n    };\r\n  }\r\n\r\n  createFractionElement(): EquationElement {\r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"fraction\",\r\n      numerator: [],\r\n      denominator: [],\r\n    };\r\n  }\r\n\r\n  createDisplayFractionElement(): EquationElement {\r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"fraction\",\r\n      numerator: [],\r\n      denominator: [],\r\n      displayMode: \"display\",\r\n    };\r\n  }\r\n\r\n  createBevelledFractionElement(): EquationElement {\r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"bevelled-fraction\",\r\n      numerator: [],\r\n      denominator: [],\r\n    };\r\n  }\r\n\r\n  createSquareRootElement(): EquationElement {\r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"sqrt\",\r\n      radicand: [],\r\n    };\r\n  }\r\n\r\n  createNthRootElement(): EquationElement {\r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"nthroot\",\r\n      index: [],\r\n      radicand: [],\r\n    };\r\n  }\r\n\r\n  createScriptElement(hasSuper: boolean = false, hasSub: boolean = false): EquationElement {\r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"script\",\r\n      base: [],\r\n      superscript: hasSuper ? [] : undefined,\r\n      subscript: hasSub ? [] : undefined,\r\n    };\r\n  }\r\n\r\n  createBracketElement(leftSymbol: string, rightSymbol: string): EquationElement {\r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"bracket\",\r\n      leftBracketSymbol: leftSymbol,\r\n      rightBracketSymbol: rightSymbol,\r\n      content: [],\r\n    };\r\n  }\r\n\r\n  createEvaluationBracketElement(bracketType: \"bar\" | \"square\"): EquationElement {\r\n    // Bar evaluation: \\left.{F}\\right|^{b}_{a}\r\n    // Square evaluation: \\left[{F}\\right]^{b}_{a}\r\n    const leftSymbol = bracketType === \"bar\" ? \".\" : \"[\";\r\n    const rightSymbol = bracketType === \"bar\" ? \"|\" : \"]\";\r\n    \r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"bracket\",\r\n      leftBracketSymbol: leftSymbol,\r\n      rightBracketSymbol: rightSymbol,\r\n      content: [],\r\n      superscript: [],\r\n      subscript: [],\r\n    };\r\n  }\r\n\r\n  createLargeOperatorElement(\r\n    operator: string,\r\n    displayMode: \"inline\" | \"display\" = \"inline\",\r\n    limitMode: \"default\" | \"nolimits\" | \"limits\" = \"default\"\r\n  ): EquationElement {\r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"large-operator\",\r\n      operator: operator,\r\n      displayMode: displayMode,\r\n      limitMode: limitMode,\r\n      lowerLimit: [],\r\n      upperLimit: [],\r\n      operand: [],\r\n    };\r\n  }\r\n\r\n  createDerivativeElement(\r\n    order: number | EquationElement[] = 1,\r\n    displayMode: \"inline\" | \"display\" = \"inline\",\r\n    isLongForm: boolean = false,\r\n    isPartial: boolean = false\r\n  ): EquationElement {\r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"derivative\",\r\n      order: order,\r\n      displayMode: displayMode,\r\n      function: [],\r\n      variable: [],\r\n      isLongForm: isLongForm,\r\n      isPartial: isPartial,\r\n    };\r\n  }\r\n\r\n  createIntegralElement(\r\n    integralType: \"single\" | \"double\" | \"triple\" | \"contour\" = \"single\",\r\n    displayMode: \"inline\" | \"display\" = \"inline\",\r\n    integralStyle: \"italic\" | \"roman\" = \"italic\",\r\n    isDefinite: boolean = false,\r\n    limitMode: \"default\" | \"nolimits\" | \"limits\" = \"default\",\r\n    limitConfig: \"both\" | \"lower-only\" | \"upper-only\" | \"none\" = \"both\"\r\n  ): EquationElement {\r\n    let lowerLimit: EquationElement[] | undefined = undefined;\r\n    let upperLimit: EquationElement[] | undefined = undefined;\r\n\r\n    if (isDefinite) {\r\n      switch (limitConfig) {\r\n        case \"both\":\r\n          lowerLimit = [];\r\n          upperLimit = [];\r\n          break;\r\n        case \"lower-only\":\r\n          lowerLimit = [];\r\n          break;\r\n        case \"upper-only\":\r\n          upperLimit = [];\r\n          break;\r\n        case \"none\":\r\n          // No limits\r\n          break;\r\n      }\r\n    }\r\n\r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"integral\",\r\n      integralType: integralType,\r\n      displayMode: displayMode,\r\n      integralStyle: integralStyle,\r\n      isDefinite: isDefinite,\r\n      limitMode: limitMode,\r\n      integrand: [],\r\n      differentialVariable: [],\r\n      lowerLimit: lowerLimit,\r\n      upperLimit: upperLimit,\r\n    };\r\n  }\r\n\r\n  createMatrixElement(\r\n    rows: number,\r\n    cols: number,\r\n    matrixType:\r\n      | \"parentheses\"\r\n      | \"brackets\"\r\n      | \"braces\"\r\n      | \"bars\"\r\n      | \"double-bars\"\r\n      | \"none\" = \"parentheses\"\r\n  ): EquationElement {\r\n    // Create cells object with keys like \"cell_0_0\", \"cell_0_1\", etc.\r\n    const cells: { [key: string]: EquationElement[] } = {};\r\n    for (let row = 0; row < rows; row++) {\r\n      for (let col = 0; col < cols; col++) {\r\n        cells[`cell_${row}_${col}`] = [];\r\n      }\r\n    }\r\n\r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"matrix\",\r\n      matrixType: matrixType,\r\n      rows: rows,\r\n      cols: cols,\r\n      cells: cells,\r\n    };\r\n  }\r\n\r\n  createStackElement(\r\n    rows: number,\r\n    cols: number = 1\r\n  ): EquationElement {\r\n    // Create cells object with keys like \"cell_0_0\", \"cell_0_1\", etc.\r\n    const cells: { [key: string]: EquationElement[] } = {};\r\n    for (let row = 0; row < rows; row++) {\r\n      for (let col = 0; col < cols; col++) {\r\n        cells[`cell_${row}_${col}`] = [];\r\n      }\r\n    }\r\n\r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"stack\",\r\n      stackType: \"plain\",\r\n      rows: rows,\r\n      cols: cols,\r\n      cells: cells,\r\n    };\r\n  }\r\n\r\n  createCasesElement(\r\n    rows: number,\r\n    cols: number = 2\r\n  ): EquationElement {\r\n    // Create cells object with keys like \"cell_0_0\", \"cell_0_1\", etc.\r\n    const cells: { [key: string]: EquationElement[] } = {};\r\n    for (let row = 0; row < rows; row++) {\r\n      for (let col = 0; col < cols; col++) {\r\n        cells[`cell_${row}_${col}`] = [];\r\n      }\r\n    }\r\n\r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"cases\",\r\n      casesType: \"cases\",\r\n      rows: rows,\r\n      cols: cols,\r\n      cells: cells,\r\n    };\r\n  }\r\n\r\n  findElementById(elements: EquationElement[], id: string): EquationElement | null {\r\n    for (const el of elements) {\r\n      if (el.id === id) return el;\r\n      if (el.type === \"fraction\" || el.type === \"bevelled-fraction\") {\r\n        const found = this.findElementById(el.numerator!, id) || this.findElementById(el.denominator!, id);\r\n        if (found) return found;\r\n      }\r\n      if (el.type === \"sqrt\") {\r\n        const found = this.findElementById(el.radicand!, id);\r\n        if (found) return found;\r\n      }\r\n      if (el.type === \"nthroot\") {\r\n        const found = this.findElementById(el.index!, id) || this.findElementById(el.radicand!, id);\r\n        if (found) return found;\r\n      }\r\n      if (el.type === \"script\") {\r\n        const found =\r\n          this.findElementById(el.base || [], id) ||\r\n          this.findElementById(el.superscript || [], id) ||\r\n          this.findElementById(el.subscript || [], id);\r\n        if (found) return found;\r\n      }\r\n      if (el.type === \"bracket\") {\r\n        const found = this.findElementById(el.content || [], id);\r\n        if (found) return found;\r\n      }\r\n      if (el.type === \"large-operator\") {\r\n        const found =\r\n          this.findElementById(el.lowerLimit || [], id) ||\r\n          this.findElementById(el.upperLimit || [], id) ||\r\n          this.findElementById(el.operand || [], id);\r\n        if (found) return found;\r\n      }\r\n      if (el.type === \"derivative\") {\r\n        const found =\r\n          this.findElementById(el.function || [], id) ||\r\n          this.findElementById(el.variable || [], id) ||\r\n          (Array.isArray(el.order) ? this.findElementById(el.order, id) : null);\r\n        if (found) return found;\r\n      }\r\n      if (el.type === \"integral\") {\r\n        const found =\r\n          this.findElementById(el.integrand || [], id) ||\r\n          this.findElementById(el.differentialVariable || [], id) ||\r\n          this.findElementById(el.lowerLimit || [], id) ||\r\n          this.findElementById(el.upperLimit || [], id);\r\n        if (found) return found;\r\n      }\r\n      if (el.type === \"matrix\" || el.type === \"stack\" || el.type === \"cases\") {\r\n        if (el.cells) {\r\n          for (const cellKey in el.cells) {\r\n            if (cellKey.startsWith(\"cell_\")) {\r\n              const found = this.findElementById(el.cells[cellKey], id);\r\n              if (found) return found;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (el.type === \"accent\") {\r\n        const found =\r\n          this.findElementById(el.accentBase || [], id) ||\r\n          this.findElementById(el.accentLabel || [], id);\r\n        if (found) return found;\r\n      }\r\n      if (el.type === \"function\") {\r\n        const found =\r\n          this.findElementById(el.functionArgument || [], id) ||\r\n          this.findElementById(el.functionBase || [], id) ||\r\n          this.findElementById(el.functionConstraint || [], id) ||\r\n          this.findElementById(el.functionName || [], id);\r\n        if (found) return found;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  updateParenthesesScaling(): void {\r\n    this.updateParenthesesScalingRecursive(this.equation);\r\n  }\r\n\r\n  updateBracketNesting(): void {\r\n    this.updateBracketNestingRecursive(this.equation, 0);\r\n  }\r\n\r\n  private calculateContentHeight(content: EquationElement[]): number {\r\n    // Create a temporary container for measurement\r\n    const measureContainer = document.createElement('div');\r\n    measureContainer.style.position = 'absolute';\r\n    measureContainer.style.visibility = 'hidden';\r\n    measureContainer.style.whiteSpace = 'nowrap';\r\n    measureContainer.style.fontSize = '16px'; // Base font size\r\n    measureContainer.style.fontFamily = 'Cambria Math, serif';\r\n    document.body.appendChild(measureContainer);\r\n\r\n    // Create baseline text element for comparison\r\n    const baselineElement = document.createElement('span');\r\n    baselineElement.textContent = 'x';\r\n    baselineElement.style.fontSize = '16px';\r\n    measureContainer.appendChild(baselineElement);\r\n    const baselineHeight = baselineElement.getBoundingClientRect().height;\r\n    measureContainer.removeChild(baselineElement);\r\n\r\n    // Create content elements and measure\r\n    const contentElement = document.createElement('span');\r\n    contentElement.style.display = 'inline-block';\r\n    \r\n    // Recursively build DOM representation of content\r\n    const buildContentDOM = (elements: EquationElement[], parent: HTMLElement) => {\r\n      elements.forEach(el => {\r\n        if (el.type === 'text') {\r\n          const textSpan = document.createElement('span');\r\n          textSpan.textContent = el.value || '';\r\n          parent.appendChild(textSpan);\r\n        } else if (el.type === 'fraction' || el.type === 'bevelled-fraction') {\r\n          const fracContainer = document.createElement('span');\r\n          fracContainer.style.display = 'inline-flex';\r\n          fracContainer.style.flexDirection = 'column';\r\n          fracContainer.style.alignItems = 'center';\r\n          fracContainer.style.verticalAlign = 'middle';\r\n          \r\n          const numerator = document.createElement('span');\r\n          numerator.style.fontSize = '0.8em';\r\n          if (el.numerator) buildContentDOM(el.numerator, numerator);\r\n          \r\n          const line = document.createElement('span');\r\n          line.style.borderTop = '1px solid black';\r\n          line.style.width = '100%';\r\n          line.style.height = '0';\r\n          \r\n          const denominator = document.createElement('span');\r\n          denominator.style.fontSize = '0.8em';\r\n          if (el.denominator) buildContentDOM(el.denominator, denominator);\r\n          \r\n          fracContainer.appendChild(numerator);\r\n          if (el.type === 'fraction') fracContainer.appendChild(line);\r\n          fracContainer.appendChild(denominator);\r\n          parent.appendChild(fracContainer);\r\n        } else if (el.type === 'script') {\r\n          const scriptContainer = document.createElement('span');\r\n          scriptContainer.style.display = 'inline-block';\r\n          scriptContainer.style.position = 'relative';\r\n          \r\n          const base = document.createElement('span');\r\n          if (el.base) buildContentDOM(el.base, base);\r\n          scriptContainer.appendChild(base);\r\n          \r\n          if (el.superscript) {\r\n            const sup = document.createElement('sup');\r\n            sup.style.fontSize = '0.7em';\r\n            buildContentDOM(el.superscript, sup);\r\n            scriptContainer.appendChild(sup);\r\n          }\r\n          \r\n          if (el.subscript) {\r\n            const sub = document.createElement('sub');\r\n            sub.style.fontSize = '0.7em';\r\n            buildContentDOM(el.subscript, sub);\r\n            scriptContainer.appendChild(sub);\r\n          }\r\n          \r\n          parent.appendChild(scriptContainer);\r\n        } else if (el.type === 'sqrt' || el.type === 'nthroot') {\r\n          const rootContainer = document.createElement('span');\r\n          rootContainer.style.display = 'inline-block';\r\n          rootContainer.style.borderTop = '2px solid black';\r\n          rootContainer.style.paddingTop = '2px';\r\n          rootContainer.style.paddingLeft = '4px';\r\n          rootContainer.style.paddingRight = '4px';\r\n          \r\n          if (el.radicand) buildContentDOM(el.radicand, rootContainer);\r\n          parent.appendChild(rootContainer);\r\n        } else if (el.type === 'large-operator' || el.type === 'integral') {\r\n          const opContainer = document.createElement('span');\r\n          opContainer.style.display = 'inline-flex';\r\n          opContainer.style.flexDirection = 'column';\r\n          opContainer.style.alignItems = 'center';\r\n          opContainer.style.fontSize = '1.5em';\r\n          \r\n          const symbol = document.createElement('span');\r\n          symbol.textContent = el.type === 'integral' ? '∫' : (el.operator || 'Σ');\r\n          opContainer.appendChild(symbol);\r\n          \r\n          parent.appendChild(opContainer);\r\n        } else if (el.type === 'matrix' || el.type === 'stack' || el.type === 'cases') {\r\n          const matrixContainer = document.createElement('span');\r\n          matrixContainer.style.display = 'inline-table';\r\n          matrixContainer.style.verticalAlign = 'middle';\r\n          \r\n          // Approximate matrix height based on number of rows\r\n          if (el.cells) {\r\n            const rows = Math.max(...Object.keys(el.cells).map(key => {\r\n              const match = key.match(/cell_(\\d+)_/);\r\n              return match ? parseInt(match[1]) : 0;\r\n            })) + 1;\r\n            matrixContainer.style.minHeight = `${rows * 1.5}em`;\r\n          }\r\n          \r\n          parent.appendChild(matrixContainer);\r\n        }\r\n        // Add more element type handling as needed\r\n      });\r\n    };\r\n\r\n    buildContentDOM(content, contentElement);\r\n    measureContainer.appendChild(contentElement);\r\n    \r\n    const contentHeight = contentElement.getBoundingClientRect().height;\r\n    \r\n    // Clean up\r\n    document.body.removeChild(measureContainer);\r\n    \r\n    // Return height ratio (k = k times baseline height)\r\n    return contentHeight / baselineHeight;\r\n  }\r\n\r\n  private updateParenthesesScalingRecursive(elements: EquationElement[]): void {\r\n    const bracketPairMap = getBracketPairMap();\r\n    const openBrackets = getOpenBrackets();\r\n    const closeBrackets = getCloseBrackets();\r\n    \r\n    const bracketStack: Array<{ element: EquationElement; index: number; bracketType: string }> = [];\r\n    const bracketPairs: Array<{\r\n      open: { element: EquationElement; index: number };\r\n      close: { element: EquationElement; index: number };\r\n      content: EquationElement[];\r\n    }> = [];\r\n\r\n    elements.forEach((el) => {\r\n      if (el.type === \"text\" && /[()]/.test(el.value || \"\")) {\r\n        el.scaleFactor = 1;\r\n      } else if (el.type === \"fraction\" || el.type === \"bevelled-fraction\") {\r\n        this.updateParenthesesScalingRecursive(el.numerator!);\r\n        this.updateParenthesesScalingRecursive(el.denominator!);\r\n      } else if (el.type === \"sqrt\") {\r\n        this.updateParenthesesScalingRecursive(el.radicand!);\r\n      } else if (el.type === \"nthroot\") {\r\n        if (el.index) this.updateParenthesesScalingRecursive(el.index);\r\n        this.updateParenthesesScalingRecursive(el.radicand!);\r\n      } else if (el.type === \"script\") {\r\n        this.updateParenthesesScalingRecursive(el.base!);\r\n        if (el.superscript) this.updateParenthesesScalingRecursive(el.superscript);\r\n        if (el.subscript) this.updateParenthesesScalingRecursive(el.subscript);\r\n      } else if (el.type === \"bracket\") {\r\n        this.updateParenthesesScalingRecursive(el.content!);\r\n        if (el.superscript) this.updateParenthesesScalingRecursive(el.superscript);\r\n        if (el.subscript) this.updateParenthesesScalingRecursive(el.subscript);\r\n      } else if (el.type === \"large-operator\") {\r\n        if (el.lowerLimit) this.updateParenthesesScalingRecursive(el.lowerLimit);\r\n        if (el.upperLimit) this.updateParenthesesScalingRecursive(el.upperLimit);\r\n        if (el.operand) this.updateParenthesesScalingRecursive(el.operand);\r\n      } else if (el.type === \"integral\") {\r\n        if (el.integrand) this.updateParenthesesScalingRecursive(el.integrand);\r\n        if (el.differentialVariable) this.updateParenthesesScalingRecursive(el.differentialVariable);\r\n        if (el.lowerLimit) this.updateParenthesesScalingRecursive(el.lowerLimit);\r\n        if (el.upperLimit) this.updateParenthesesScalingRecursive(el.upperLimit);\r\n      } else if (el.type === \"derivative\") {\r\n        if (el.function) this.updateParenthesesScalingRecursive(el.function);\r\n        if (el.variable) this.updateParenthesesScalingRecursive(el.variable);\r\n        if (Array.isArray(el.order)) this.updateParenthesesScalingRecursive(el.order);\r\n      } else if (el.type === \"matrix\" || el.type === \"stack\" || el.type === \"cases\") {\r\n        // Cells object is defined as cells[`cell_${row}_${col}`]\r\n        if (el.cells) {\r\n          for (const cellKey in el.cells) {\r\n            if (el.cells.hasOwnProperty(cellKey)) {\r\n              this.updateParenthesesScalingRecursive(el.cells[cellKey]);\r\n            }\r\n          }\r\n        }\r\n      } else if (el.type === \"accent\") {\r\n        if (el.accentBase) this.updateParenthesesScalingRecursive(el.accentBase);\r\n        if (el.accentLabel) this.updateParenthesesScalingRecursive(el.accentLabel);\r\n      } else if (el.type === \"function\") {\r\n        if (el.functionName) this.updateParenthesesScalingRecursive(el.functionName);\r\n        if (el.functionArgument) this.updateParenthesesScalingRecursive(el.functionArgument);\r\n        if (el.functionBase) this.updateParenthesesScalingRecursive(el.functionBase);\r\n        if (el.functionConstraint) this.updateParenthesesScalingRecursive(el.functionConstraint);\r\n      }\r\n    });\r\n\r\n    elements.forEach((element, index) => {\r\n      if (element.type === \"text\" && element.value && openBrackets.has(element.value)) {\r\n        bracketStack.push({ element, index, bracketType: element.value });\r\n      } else if (element.type === \"text\" && element.value && closeBrackets.has(element.value)) {\r\n        // Find the most recent matching open bracket (search backwards)\r\n        let matchingOpenIndex = -1;\r\n        for (let i = bracketStack.length - 1; i >= 0; i--) {\r\n          if (bracketPairMap[bracketStack[i].bracketType] === element.value) {\r\n            matchingOpenIndex = i;\r\n            break;\r\n          }\r\n        }\r\n        if (matchingOpenIndex >= 0) {\r\n          const opening = bracketStack.splice(matchingOpenIndex, 1)[0];\r\n          bracketPairs.push({\r\n            open: opening,\r\n            close: { element, index },\r\n            content: elements.slice(opening.index + 1, index),\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    bracketPairs.forEach((pair) => {\r\n      // Calculate the height ratio of the content between brackets\r\n      const heightRatio = this.calculateContentHeight(pair.content);\r\n      \r\n      // Scale brackets based on content height\r\n      // 1.0 = baseline height (no scaling)\r\n      // 1.5+ = content is 50% taller than baseline (needs scaling)\r\n      let scaleFactor = 1;\r\n      \r\n      if (heightRatio > 2.5) {\r\n        scaleFactor = 2;      // Very tall content (e.g., nested fractions, tall matrices)\r\n      } else if (heightRatio > 1.8) {\r\n        scaleFactor = 1.75;   // Tall content (e.g., fractions with complex elements)\r\n      } else if (heightRatio > 1.4) {\r\n        scaleFactor = 1.5;    // Moderately tall content (e.g., simple fractions, superscripts)\r\n      } else if (heightRatio > 1.2) {\r\n        scaleFactor = 1.25;   // Slightly tall content\r\n      }\r\n      // else scaleFactor remains 1 for normal height content\r\n      \r\n      pair.open.element.scaleFactor = scaleFactor;\r\n      pair.close.element.scaleFactor = scaleFactor;\r\n    });\r\n  }\r\n\r\n  private updateBracketNestingRecursive(elements: EquationElement[], currentDepth: number): void {\r\n    elements.forEach((element) => {\r\n      if (element.type === \"bracket\") {\r\n        this.updateBracketNestingRecursive(element.content!, currentDepth + 1);\r\n      } else if (element.type === \"fraction\" || element.type === \"bevelled-fraction\") {\r\n        this.updateBracketNestingRecursive(element.numerator!, currentDepth);\r\n        this.updateBracketNestingRecursive(element.denominator!, currentDepth);\r\n      } else if (element.type === \"sqrt\") {\r\n        this.updateBracketNestingRecursive(element.radicand!, currentDepth);\r\n      } else if (element.type === \"nthroot\") {\r\n        this.updateBracketNestingRecursive(element.index!, currentDepth);\r\n        this.updateBracketNestingRecursive(element.radicand!, currentDepth);\r\n      } else if (element.type === \"script\") {\r\n        this.updateBracketNestingRecursive(element.base!, currentDepth);\r\n        if (element.superscript)\r\n          this.updateBracketNestingRecursive(element.superscript, currentDepth);\r\n        if (element.subscript) this.updateBracketNestingRecursive(element.subscript, currentDepth);\r\n      } else if (element.type === \"large-operator\") {\r\n        if (element.lowerLimit)\r\n          this.updateBracketNestingRecursive(element.lowerLimit, currentDepth);\r\n        if (element.upperLimit)\r\n          this.updateBracketNestingRecursive(element.upperLimit, currentDepth);\r\n        if (element.operand) this.updateBracketNestingRecursive(element.operand, currentDepth);\r\n      } else if (element.type === \"integral\") {\r\n        if (element.integrand) this.updateBracketNestingRecursive(element.integrand, currentDepth);\r\n        if (element.differentialVariable)\r\n          this.updateBracketNestingRecursive(element.differentialVariable, currentDepth);\r\n        if (element.lowerLimit)\r\n          this.updateBracketNestingRecursive(element.lowerLimit, currentDepth);\r\n        if (element.upperLimit)\r\n          this.updateBracketNestingRecursive(element.upperLimit, currentDepth);\r\n      } else if (element.type === \"derivative\") {\r\n        if (element.function) this.updateBracketNestingRecursive(element.function, currentDepth);\r\n        if (element.variable) this.updateBracketNestingRecursive(element.variable, currentDepth);\r\n        if (Array.isArray(element.order))\r\n          this.updateBracketNestingRecursive(element.order, currentDepth);\r\n      } else if (element.type === \"accent\") {\r\n        if (element.accentBase)\r\n          this.updateBracketNestingRecursive(element.accentBase, currentDepth);\r\n        if (element.accentLabel)\r\n          this.updateBracketNestingRecursive(element.accentLabel, currentDepth);\r\n      } else if (element.type === \"function\") {\r\n        if (element.functionName)\r\n          this.updateBracketNestingRecursive(element.functionName, currentDepth);\r\n        if (element.functionArgument)\r\n          this.updateBracketNestingRecursive(element.functionArgument, currentDepth);\r\n        if (element.functionBase)\r\n          this.updateBracketNestingRecursive(element.functionBase, currentDepth);\r\n        if (element.functionConstraint)\r\n          this.updateBracketNestingRecursive(element.functionConstraint, currentDepth);\r\n      } else if (element.type === \"matrix\" || element.type === \"stack\" || element.type === \"cases\") {\r\n        // Cells object is defined as cells[`cell_${row}_${col}`]\r\n        if (element.cells) {\r\n          for (const cellKey in element.cells) {\r\n            if (element.cells.hasOwnProperty(cellKey)) {\r\n              this.updateBracketNestingRecursive(element.cells[cellKey], currentDepth);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  createAccentElement(\r\n    accentType: string,\r\n    position: \"over\" | \"under\",\r\n    base?: EquationElement[],\r\n    label?: EquationElement[]\r\n  ): EquationElement {\r\n    // For labeled braces, always initialize an empty label array if none provided\r\n    const shouldInitializeLabel = accentType === \"labeledoverbrace\" || accentType === \"labeledunderbrace\";\r\n    const accentLabel = label || (shouldInitializeLabel ? [] : undefined);\r\n    \r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"accent\",\r\n      accentType: accentType as any,\r\n      accentPosition: position,\r\n      accentBase: base || [],\r\n      accentLabel: accentLabel,\r\n    };\r\n  }\r\n\r\n  createFunctionElement(functionType: string): EquationElement {\r\n    return {\r\n      id: this.generateElementId(),\r\n      type: \"function\",\r\n      functionType: functionType,\r\n      functionName: [],\r\n      functionArgument: [],\r\n      functionBase: [],\r\n      functionConstraint: [],\r\n    };\r\n  }\r\n}\r\n","import { EquationElement, EquationBuilder } from \"./equation-builder\";\nimport {\n  UNICODE_TO_LATEX,\n  LATEX_TO_UNICODE,\n  SYMBOL_CONFIG,\n  getLatexCommandLength,\n  LARGE_OPERATORS,\n  BRACKET_PAIRS,\n  INTEGRAL_COMMANDS,\n  BUILTIN_FUNCTION_COMMANDS,\n} from \"./centralized-config\";\n\n// Configuration for formatting commands\ninterface FormattingCommand {\n  command: string;\n  length: number;\n  applyFormatting: (element: EquationElement) => void;\n}\n\n// Configuration for derivative commands\ninterface DerivativeCommand {\n  command: string;\n  length: number;\n  displayMode: \"inline\" | \"display\";\n  isLongForm: boolean;\n}\n\nexport class LatexConverter {\n  private equationBuilder: EquationBuilder | null = null;\n  private inputHandler: any = null; // Will be properly typed later\n\n  // Formatting commands configuration\n  private readonly FORMATTING_COMMANDS: FormattingCommand[] = [\n    {\n      command: \"\\\\boldsymbol\",\n      length: 11,\n      applyFormatting: (el) => {\n        el.bold = true;\n        el.italic = true;\n      },\n    },\n    {\n      command: \"\\\\mathbf\",\n      length: 7,\n      applyFormatting: (el) => {\n        el.bold = true;\n      },\n    },\n    {\n      command: \"\\\\mathit\",\n      length: 7,\n      applyFormatting: (el) => {\n        el.italic = true;\n      },\n    },\n    {\n      command: \"\\\\mathrm\",\n      length: 7,\n      applyFormatting: (el) => {\n        el.italic = false;\n      },\n    },\n    {\n      command: \"\\\\textbf\",\n      length: 7,\n      applyFormatting: (el) => {\n        el.bold = true;\n      },\n    },\n    {\n      command: \"\\\\textit\",\n      length: 7,\n      applyFormatting: (el) => {\n        el.italic = true;\n      },\n    },\n  ];\n\n  // Derivative commands configuration\n  private readonly DERIVATIVE_COMMANDS: DerivativeCommand[] = [\n    { command: \"\\\\derivdfrac\", length: 11, displayMode: \"display\", isLongForm: false },\n    { command: \"\\\\derivfrac\", length: 10, displayMode: \"inline\", isLongForm: false },\n    { command: \"\\\\derivldfrac\", length: 12, displayMode: \"display\", isLongForm: true },\n    { command: \"\\\\derivlfrac\", length: 11, displayMode: \"inline\", isLongForm: true },\n  ];\n\n  setEquationBuilder(equationBuilder: EquationBuilder): void {\n    this.equationBuilder = equationBuilder;\n  }\n\n  setInputHandler(inputHandler: any): void {\n    this.inputHandler = inputHandler;\n  }\n\n  // Helper method to generate element ID\n  private generateElementId(): string {\n    return Math.random().toString(36).substr(2, 9);\n  }\n\n  // Helper method to parse group and convert to equation\n  private parseGroupAndContent(\n    latex: string,\n    index: number\n  ): { elements: EquationElement[]; endIndex: number } {\n    const group = this.parseLatexGroup(latex, index);\n    return {\n      elements: this.parseLatexToEquation(group.content),\n      endIndex: group.endIndex,\n    };\n  }\n\n  // Helper method to skip whitespace\n  private skipWhitespace(latex: string, index: number): number {\n    while (index < latex.length && latex[index] === \" \") index++;\n    return index;\n  }\n\n  convertToLatex(elements: EquationElement[]): string {\n    const maxDepth = this.findMaxNestingDepth(elements);\n    return this.toLatexRecursive(elements, maxDepth).trim();\n  }\n\n  parseFromLatex(latex: string): EquationElement[] {\n    return this.parseLatexToEquation(latex);\n  }\n\n  private haveSameWrappers(element1: EquationElement, element2: EquationElement): boolean {\n    if (element1.wrappers || element2.wrappers) {\n      // Both must have wrappers object or both must not have it\n      if (!element1.wrappers && !element2.wrappers) {\n        return true;\n      }\n      if (!element1.wrappers || !element2.wrappers) {\n        return false;\n      }\n\n      // Compare each wrapper type\n      const checkWrapper = (type: \"underline\" | \"cancel\" | \"color\" | \"textMode\") => {\n        const w1 = element1.wrappers![type];\n        const w2 = element2.wrappers![type];\n\n        if (!w1 && !w2) return true;\n        if (!w1 || !w2) return false;\n\n        if (type === \"underline\") {\n          return (w1 as any).type === (w2 as any).type;\n        } else if (type === \"color\") {\n          return (w1 as any).value === (w2 as any).value;\n        } else {\n          return true; // cancel and textMode\n        }\n      };\n      \n      return checkWrapper('underline') && checkWrapper('cancel') && checkWrapper('color') && checkWrapper('textMode');\n    }\n\n    return true;\n  }\n\n  private findMaxNestingDepth(elements: EquationElement[]): number {\n    const findMaxDepthRecursive = (elements: EquationElement[]): number => {\n      let localMax = 0;\n\n      elements.forEach((element) => {\n        if (element.type === \"bracket\") {\n          localMax = Math.max(localMax, element.nestingDepth || 0);\n          localMax = Math.max(localMax, findMaxDepthRecursive(element.content || []));\n        } else {\n          // Recursively check all array properties of the element\n          const childArrays = [\n            element.numerator,\n            element.denominator, // fraction, bevelled-fraction\n            element.radicand,\n            element.index, // sqrt, nthroot\n            element.base,\n            element.superscript,\n            element.subscript, // script\n            element.content, // bracket (already handled above)\n            element.lowerLimit,\n            element.upperLimit,\n            element.operand, // large-operator\n          ].filter(Boolean);\n\n          childArrays.forEach((childArray) => {\n            localMax = Math.max(localMax, findMaxDepthRecursive(childArray));\n          });\n        }\n      });\n\n      return localMax;\n    };\n\n    return findMaxDepthRecursive(elements);\n  }\n\n  private toLatexRecursive(elements: EquationElement[], maxDepth: number = 0, inOperatorName: boolean = false): string {\n    let latex = \"\";\n\n    // Temporarily disable wrapper formatting to debug the scope issue\n    const hasUniformFormatting = null; // this.checkUniformFormatting(elements);\n\n    // If uniform formatting is detected, create a clean copy of elements without the wrapper formatting\n    let processedElements = elements;\n    if (hasUniformFormatting) {\n      processedElements = this.removeUniformFormattingFromElements(elements, hasUniformFormatting);\n    }\n\n    // Process elements, handling multi-wrapper system\n    for (let i = 0; i < processedElements.length; i++) {\n      const element = processedElements[i];\n\n      // Check if this element has multi-wrapper formatting\n      if (element.wrappers && Object.keys(element.wrappers).length > 0) {\n        // Find all consecutive elements with the same wrapper combination\n        const groupElements: EquationElement[] = [];\n        let j = i;\n\n        while (\n          j < processedElements.length &&\n          this.haveSameWrappers(element, processedElements[j])\n        ) {\n          groupElements.push(processedElements[j]);\n          j++;\n        }\n\n        // Generate LaTeX for the grouped elements (without wrapper metadata)\n        const cleanGroupElements = groupElements.map((el) => {\n          const cleanEl = { ...el };\n          delete cleanEl.wrappers;\n          return cleanEl;\n        });\n\n        const groupContent = this.toLatexRecursive(cleanGroupElements, maxDepth, inOperatorName);\n\n        // Apply wrapper formatting in user-defined order (innermost to outermost)\n        let wrappedContent = groupContent;\n\n        // Use user's application order if available, otherwise fall back to default order\n        const wrapperOrder = element.wrapperOrder || [\"underline\", \"cancel\", \"color\", \"textMode\"];\n\n        // Apply wrappers in the order they were applied by the user\n        for (const wrapperType of wrapperOrder) {\n          if (wrapperType === \"underline\" && element.wrappers.underline) {\n            if (element.wrappers.underline.type === \"double\") {\n              wrappedContent = `\\\\underline{\\\\underline{${wrappedContent}}}`;\n            } else {\n              wrappedContent = `\\\\underline{${wrappedContent}}`;\n            }\n          } else if (wrapperType === \"cancel\" && element.wrappers.cancel) {\n            wrappedContent = `\\\\cancel{${wrappedContent}}`;\n          } else if (wrapperType === \"color\" && element.wrappers.color) {\n            wrappedContent = `\\\\textcolor{${element.wrappers.color.value}}{${wrappedContent}}`;\n          } else if (wrapperType === \"textMode\" && element.wrappers.textMode) {\n            wrappedContent = `\\\\text{${wrappedContent}}`;\n          }\n        }\n\n        latex += wrappedContent;\n\n        // Skip the processed elements\n        i = j - 1;\n        continue;\n      }\n\n      if (element.type === \"text\") {\n        // Check if element is in text mode\n        const isTextMode =\n          element.textMode === true || (element.wrappers && element.wrappers.textMode);\n\n        // Look ahead to group consecutive text elements with same formatting\n        let groupedText = \"\";\n        let j = i;\n        let currentFormatting = {\n          bold: element.bold,\n          italic: element.italic,\n          color: element.color,\n          underline: element.underline,\n          cancel: element.cancel,\n          wrappers: element.wrappers, // Include wrappers in formatting comparison\n          textMode: element.textMode,\n        };\n\n        while (\n          j < processedElements.length &&\n          processedElements[j].type === \"text\" &&\n          this.hasEqualFormatting(processedElements[j], currentFormatting)\n        ) {\n          let value = processedElements[j].value || \"\";\n\n          // In text mode, preserve spaces and don't convert to LaTeX symbols\n          if (!isTextMode) {\n            // Convert Unicode symbols to LaTeX commands\n            const latexCommand = UNICODE_TO_LATEX[value];\n            if (latexCommand) {\n              value = latexCommand;\n              \n              // Add space after LaTeX commands that end with letters\n              // to prevent issues like \\leqx when followed by letters\n              const nextIdx = j + 1;\n              if (nextIdx < processedElements.length && \n                  processedElements[nextIdx].type === \"text\" &&\n                  /^[a-zA-Z]/.test(processedElements[nextIdx].value || \"\") &&\n                  /\\\\[a-zA-Z]+$/.test(value)) {\n                value = value + \" \";\n              }\n            }\n\n            // Escape LaTeX special characters that could break parsing\n            value = this.escapeLatexSpecialChars(value);\n\n            // Add spacing for operators\n            if (/^[+\\-=×÷]$/.test(value)) {\n              groupedText += ` ${value} `;\n            } else {\n              groupedText += value;\n            }\n          } else {\n            // In text mode, preserve the text as-is but still escape special chars\n            value = this.escapeLatexSpecialChars(value);\n            groupedText += value;\n          }\n          j++;\n        }\n\n        // Apply formatting to the grouped text (formatting should already be cleaned if uniform formatting detected)\n        let formattedText = groupedText;\n        formattedText = this.applyFormattingToLatex(formattedText, currentFormatting, inOperatorName);\n\n        // If in text mode, wrap the entire group in \\text{}\n        if (isTextMode) {\n          formattedText = `\\\\text{${formattedText}}`;\n        }\n\n        latex += formattedText;\n        i = j - 1; // Skip the elements which have been already processed\n      } else if (element.type === \"fraction\") {\n        const num = this.toLatexRecursive(element.numerator!, maxDepth, inOperatorName);\n        const den = this.toLatexRecursive(element.denominator!, maxDepth, inOperatorName);\n\n        if (element.displayMode === \"display\") {\n          latex += `\\\\dfrac{${num || \" \"}}{${den || \" \"}}`;\n        } else {\n          latex += `{\\\\textstyle \\\\frac{${num || \" \"}}{${den || \" \"}}}`;\n        }\n      } else if (element.type === \"bevelled-fraction\") {\n        const num = this.toLatexRecursive(element.numerator!, maxDepth, inOperatorName);\n        const den = this.toLatexRecursive(element.denominator!, maxDepth, inOperatorName);\n        latex += `{${num || \" \"}}/{${den || \" \"}}`;\n      } else if (element.type === \"sqrt\") {\n        const radicand = this.toLatexRecursive(element.radicand!, maxDepth, inOperatorName);\n        latex += `\\\\sqrt{${radicand || \" \"}}`;\n      } else if (element.type === \"nthroot\") {\n        const index = this.toLatexRecursive(element.index!, maxDepth, inOperatorName);\n        const radicand = this.toLatexRecursive(element.radicand!, maxDepth, inOperatorName);\n        latex += `\\\\sqrt[${index || \" \"}]{${radicand || \" \"}}`;\n      } else if (element.type === \"script\") {\n        const base = this.toLatexRecursive(element.base!, maxDepth, inOperatorName);\n        latex += `{${base || \" \"}}`;\n        if (element.superscript && element.subscript) {\n          latex += `^{${this.toLatexRecursive(element.superscript, maxDepth, inOperatorName) || \" \"}}_{${this.toLatexRecursive(element.subscript, maxDepth, inOperatorName) || \" \"}}`;\n        } else if (element.superscript) {\n          latex += `^{${this.toLatexRecursive(element.superscript, maxDepth, inOperatorName) || \" \"}}`;\n        } else if (element.subscript) {\n          latex += `_{${this.toLatexRecursive(element.subscript, maxDepth, inOperatorName) || \" \"}}`;\n        }\n      } else if (element.type === \"bracket\") {\n        const content = this.toLatexRecursive(element.content!, maxDepth, inOperatorName);\n        const { latexLeft, latexRight } = this.getBracketLatexSymbols(\n          element.leftBracketSymbol!,\n          element.rightBracketSymbol!\n        );\n        let bracketLatex = `${latexLeft}${content || \" \"}${latexRight}`;\n        \n        // Add superscript and subscript support for brackets (evaluation brackets)\n        if (element.superscript && element.subscript) {\n          const superscriptLatex = this.toLatexRecursive(element.superscript, maxDepth, inOperatorName);\n          const subscriptLatex = this.toLatexRecursive(element.subscript, maxDepth, inOperatorName);\n          bracketLatex += `^{${superscriptLatex || \" \"}}_{${subscriptLatex || \" \"}}`;\n        } else if (element.superscript) {\n          const superscriptLatex = this.toLatexRecursive(element.superscript, maxDepth, inOperatorName);\n          bracketLatex += `^{${superscriptLatex || \" \"}}`;\n        } else if (element.subscript) {\n          const subscriptLatex = this.toLatexRecursive(element.subscript, maxDepth, inOperatorName);\n          bracketLatex += `_{${subscriptLatex || \" \"}}`;\n        }\n        \n        latex += bracketLatex;\n      } else if (element.type === \"large-operator\") {\n        const operatorSymbol = this.convertOperatorToLatex(element.operator!);\n        const lowerLimit = this.toLatexRecursive(element.lowerLimit!, maxDepth, inOperatorName);\n        const upperLimit = this.toLatexRecursive(element.upperLimit!, maxDepth, inOperatorName);\n        const operand = this.toLatexRecursive(element.operand!, maxDepth, inOperatorName);\n\n        // Check if this is marked as an indefinite integral\n        const isIndefiniteIntegral = (element as any).isIndefiniteIntegral === true;\n\n        let operatorLatex = operatorSymbol;\n\n        if (element.limitMode === \"nolimits\") {\n          operatorLatex += \"\\\\nolimits\";\n        } else if (element.limitMode === \"limits\") {\n          operatorLatex += \"\\\\limits\";\n        }\n\n        // Wrap operand in braces for predictable parsing\n        const wrappedOperand = operand ? ` {${operand}}` : \" {}\";\n\n        let finalLatex = \"\";\n        if (isIndefiniteIntegral) {\n          // Simple indefinite integral: no limits at all\n          finalLatex = `${operatorLatex}${wrappedOperand}`;\n        } else {\n          // Definite integral or other operators: always include limit structure\n          finalLatex = `${operatorLatex}_{${lowerLimit || \"\"}}^{${upperLimit || \"\"}}${wrappedOperand}`;\n        }\n\n        if (element.displayMode === \"display\") {\n          latex += `{\\\\displaystyle ${finalLatex}}`;\n        } else {\n          latex += `{\\\\textstyle ${finalLatex}}`;\n        }\n      } else if (element.type === \"integral\") {\n        // Custom integral format with integrand and differential variable blocks\n        const integrandLatex = this.toLatexRecursive(element.integrand!, maxDepth, inOperatorName);\n        const variableLatex = this.toLatexRecursive(element.differentialVariable!, maxDepth, inOperatorName);\n\n        // Determine the command based on integral type, style, and whether it has limits\n        let integralCommand = \"\";\n        const useRomanD = element.integralStyle === \"roman\";\n        \n        // Auto-detect if integral is definite: either isDefinite property is true OR it has limits\n        const hasLowerLimit = element.lowerLimit && element.lowerLimit.length > 0;\n        const hasUpperLimit = element.upperLimit && element.upperLimit.length > 0;\n        const hasLimits = hasLowerLimit || hasUpperLimit;\n        const isDefinite = (\"isDefinite\" in element && element.isDefinite) || hasLimits;\n\n        // Check if this is a single-limit integral (subscript or lower only)\n        const hasOnlyLowerLimit = hasLowerLimit && !hasUpperLimit;\n        const hasOnlyUpperLimit = hasUpperLimit && !hasLowerLimit;\n\n        switch (element.integralType) {\n          case \"double\":\n            if (hasOnlyLowerLimit) {\n              // 3-parameter subscript/lower limit variants\n              if (element.limitMode === \"limits\") {\n                integralCommand = useRomanD ? \"\\\\iintdlower\" : \"\\\\iintilower\";\n              } else {\n                integralCommand = useRomanD ? \"\\\\iintdsub\" : \"\\\\iintisub\";\n              }\n            } else if (isDefinite) {\n              // 4-parameter definite integrals\n              if (element.limitMode === \"limits\") {\n                integralCommand = useRomanD ? \"\\\\iintdlim\" : \"\\\\iintilim\";\n              } else {\n                integralCommand = useRomanD ? \"\\\\iintdnolim\" : \"\\\\iintinolim\";\n              }\n            } else {\n              // 2-parameter indefinite\n              integralCommand = useRomanD ? \"\\\\iintd\" : \"\\\\iinti\";\n            }\n            break;\n          case \"triple\":\n            if (hasOnlyLowerLimit) {\n              // 3-parameter subscript/lower limit variants\n              if (element.limitMode === \"limits\") {\n                integralCommand = useRomanD ? \"\\\\iiintdlower\" : \"\\\\iiintilower\";\n              } else {\n                integralCommand = useRomanD ? \"\\\\iiintdsub\" : \"\\\\iiintisub\";\n              }\n            } else if (isDefinite) {\n              // 4-parameter definite integrals\n              if (element.limitMode === \"limits\") {\n                integralCommand = useRomanD ? \"\\\\iiintdlim\" : \"\\\\iiintilim\";\n              } else {\n                integralCommand = useRomanD ? \"\\\\iiintdnolim\" : \"\\\\iiintinolim\";\n              }\n            } else {\n              // 2-parameter indefinite\n              integralCommand = useRomanD ? \"\\\\iiintd\" : \"\\\\iiinti\";\n            }\n            break;\n          case \"contour\":\n            // Contour integrals don't use limits positioning - only subscript for path or sub/superscript\n            if (hasOnlyLowerLimit) {\n              // 3-parameter subscript variant for path-only contours\n              integralCommand = useRomanD ? \"\\\\ointdsub\" : \"\\\\ointisub\";\n            } else if (isDefinite) {\n              // 4-parameter variants for contours with both limits\n              integralCommand = useRomanD ? \"\\\\ointdnolim\" : \"\\\\ointinolim\";\n            } else {\n              // 2-parameter indefinite\n              integralCommand = useRomanD ? \"\\\\ointd\" : \"\\\\ointi\";\n            }\n            break;\n          case \"single\":\n          default:\n            if (isDefinite) {\n              if (element.limitMode === \"limits\") {\n                integralCommand = useRomanD ? \"\\\\intdlim\" : \"\\\\intilim\";\n              } else {\n                integralCommand = useRomanD ? \"\\\\intdnolim\" : \"\\\\intinolim\";\n              }\n            } else {\n              integralCommand = useRomanD ? \"\\\\intd\" : \"\\\\inti\";\n            }\n            break;\n        }\n\n        // Build the integral LaTeX command\n        let finalLatex = \"\";\n        \n        // Handle different parameter counts based on integral command type\n        if (integralCommand.includes(\"sub\") || integralCommand.includes(\"lower\")) {\n          // 3-parameter variants: \\ointisub{integrand}{variable}{path} or \\iintisub{integrand}{variable}{region}\n          const limitLatex = hasLowerLimit ? this.toLatexRecursive(element.lowerLimit, maxDepth, inOperatorName) : \" \";\n          finalLatex = `${integralCommand}{${integrandLatex || \" \"}}{${variableLatex || \" \"}}{${limitLatex}}`;\n        } else if (hasLowerLimit && hasUpperLimit) {\n          // 4-parameter definite integrals: \\intinolim{integrand}{variable}{lower}{upper}\n          const lowerLatex = this.toLatexRecursive(element.lowerLimit, maxDepth, inOperatorName);\n          const upperLatex = this.toLatexRecursive(element.upperLimit, maxDepth, inOperatorName);\n          finalLatex = `${integralCommand}{${integrandLatex || \" \"}}{${variableLatex || \" \"}}{${lowerLatex || \" \"}}{${upperLatex || \" \"}}`;\n        } else {\n          // 2-parameter indefinite integrals: \\inti{integrand}{variable}\n          finalLatex = `${integralCommand}{${integrandLatex || \" \"}}{${variableLatex || \" \"}}`;\n        }\n\n        // Apply appropriate styling based on display mode\n        if (element.displayMode === \"display\") {\n          // For display mode: add \\displaystyle wrapper for all integral commands\n          finalLatex = `{\\\\displaystyle ${finalLatex}}`;\n          latex += finalLatex;\n        } else {\n          // For inline mode: wrap with \\textstyle for proper inline rendering\n          latex += `{\\\\textstyle ${finalLatex}}`;\n        }\n      } else if (element.type === \"derivative\") {\n        const functionLatex = this.toLatexRecursive(element.function!, maxDepth, inOperatorName);\n        const variableLatex = this.toLatexRecursive(element.variable!, maxDepth, inOperatorName);\n\n        // Determine differential symbol: ∂ for partial derivatives, d for regular derivatives\n        const isPartial = element.isPartial === true;\n        const differentialSymbol = isPartial ? \"\\\\partial\" : \"d\";\n\n        // Check if this is long form derivative\n        if (element.isLongForm) {\n          // Long form: \\dv[n]{x}(\\grande{f}) or \\dv{x}(\\grande{f}) for regular derivatives\n          // Long form: \\pdv[n]{x}(\\grande{f}) or \\pdv{x}(\\grande{f}) for partial derivatives\n          // The function part is wrapped with \\grande and can have optional brackets\n          // For partial derivatives, ALWAYS use physics package since we need \\pdv\n          const usePhysicsPackage = isPartial || this.shouldUsePhysicsPackageForDerivative();\n\n          if (usePhysicsPackage) {\n            // Use \\pdv for partial derivatives, \\dv for regular derivatives\n            const dvCommandBase = isPartial ? \"\\\\pdv\" : \"\\\\dv\";\n            let dvCommand = \"\";\n            if (typeof element.order === \"number\") {\n              if (element.order === 1) {\n                dvCommand = `${dvCommandBase}{${variableLatex || \"x\"}}`;\n              } else {\n                dvCommand = `${dvCommandBase}[${element.order}]{${variableLatex || \"x\"}}`;\n              }\n            } else {\n              // nth order with custom expression\n              const orderLatex = this.toLatexRecursive(element.order!, maxDepth, inOperatorName);\n              dvCommand = `${dvCommandBase}[${orderLatex || \"n\"}]{${variableLatex || \"x\"}}`;\n            }\n\n            // Add the function part with \\grande\n            // If function starts with brackets, put \\grande inside them\n            let functionPart = functionLatex || \"\";\n\n            // Check if functionPart starts and ends with any bracket pair\n            let bracketFound = false;\n            for (const pair of BRACKET_PAIRS) {\n              if (functionPart.startsWith(pair.left) && functionPart.endsWith(pair.right)) {\n                // Put \\grande inside the brackets\n                const innerContent = functionPart.slice(pair.left.length, -pair.right.length);\n                functionPart = `${pair.left}\\\\grande{${innerContent}}${pair.right}`;\n                bracketFound = true;\n                break;\n              }\n            }\n\n            if (!bracketFound) {\n              if (functionPart) {\n                // No brackets or other format, just add \\grande\n                functionPart = `\\\\grande{${functionPart}}`;\n              } else {\n                // Empty function\n                functionPart = `\\\\grande{ }`;\n              }\n            }\n\n            // Debug logging for long form partial derivatives export\n            if (isPartial) {\n              console.log(\"Long form export debug:\", {\n                dvCommand,\n                functionPart,\n                displayMode: element.displayMode,\n                variableLatex,\n                order: element.order\n              });\n            }\n\n            // Combine the parts with style wrapper\n            if (element.displayMode === \"display\") {\n              latex += `{\\\\displaystyle ${dvCommand}${functionPart}}`;\n            } else {\n              latex += `{\\\\textstyle ${dvCommand}${functionPart}}`;\n            }\n          } else {\n            // For non-physics package, use custom long form commands\n            // For partial derivatives, always use \\partial regardless of differential style\n            const diffSymbol = isPartial ? \"\\\\partial\" : \"d\";\n            let numerator = \"\";\n            let denominator = \"\";\n\n            if (typeof element.order === \"number\") {\n              if (element.order === 1) {\n                numerator = diffSymbol;\n                denominator = `${diffSymbol}${variableLatex || \"x\"}`;\n              } else {\n                numerator = `${diffSymbol}^{${element.order}}`;\n                denominator = `${diffSymbol}${variableLatex || \"x\"}^{${element.order}}`;\n              }\n            } else {\n              // nth order with custom expression\n              const orderLatex = this.toLatexRecursive(element.order!, maxDepth, inOperatorName);\n              numerator = `${diffSymbol}^{${orderLatex || \"n\"}}`;\n              denominator = `${diffSymbol}${variableLatex || \"x\"}^{${orderLatex || \"n\"}}`;\n            }\n\n            // Use custom long form commands for italic d\n            if (element.displayMode === \"display\") {\n              latex += `\\\\derivldfrac{${numerator}}{${denominator}}{${functionLatex || \" \"}}`;\n            } else {\n              latex += `\\\\derivlfrac{${numerator}}{${denominator}}{${functionLatex || \" \"}}`;\n            }\n          }\n        } else {\n          // Standard form derivative handling\n          // For partial derivatives, ALWAYS use physics package (\\pdv) regardless of differential style\n          // For regular derivatives, check if we should use physics package based on differential style\n          const usePhysicsPackage = isPartial || this.shouldUsePhysicsPackageForDerivative();\n\n          if (usePhysicsPackage) {\n            // Use physics package \\dv or \\pdv command (always renders with roman 'd' or '∂' based on italicdiff setting)\n            const dvCommandBase = isPartial ? \"\\\\pdv\" : \"\\\\dv\";\n            let dvCommand = \"\";\n            if (typeof element.order === \"number\") {\n              if (element.order === 1) {\n                dvCommand = `${dvCommandBase}{${functionLatex || \" \"}}{${variableLatex || \" \"}}`;\n              } else {\n                dvCommand = `${dvCommandBase}[${element.order}]{${functionLatex || \" \"}}{${variableLatex || \" \"}}`;\n              }\n            } else {\n              // nth order with custom expression\n              const orderLatex = this.toLatexRecursive(element.order!, maxDepth, inOperatorName);\n              dvCommand = `${dvCommandBase}[${orderLatex || \"n\"}]{${functionLatex || \" \"}}{${variableLatex || \" \"}}`;\n            }\n\n            // Debug logging for partial derivatives export\n            if (isPartial) {\n              console.log(\"Export debug:\", {\n                functionLatex,\n                variableLatex,\n                dvCommand,\n                displayMode: element.displayMode,\n                isLongForm: element.isLongForm,\n                order: element.order\n              });\n            }\n\n            // Add style wrapper for both display and inline modes\n            if (element.displayMode === \"display\") {\n              latex += `{\\\\displaystyle ${dvCommand}}`;\n            } else {\n              latex += `{\\\\textstyle ${dvCommand}}`;\n            }\n          } else {\n            // Use custom derivative commands for standard LaTeX\n            // For partial derivatives, use \\partial regardless of differential style\n            const diffSymbol = isPartial ? \"\\\\partial\" : \"d\";\n            let numerator = \"\";\n            let denominator = \"\";\n\n            if (typeof element.order === \"number\") {\n              if (element.order === 1) {\n                numerator = `${diffSymbol}${functionLatex || \" \"}`;\n                denominator = `${diffSymbol}${variableLatex || \" \"}`;\n              } else {\n                numerator = `${diffSymbol}^{${element.order}}${functionLatex || \" \"}`;\n                denominator = `${diffSymbol}${variableLatex || \" \"}^{${element.order}}`;\n              }\n            } else {\n              // nth order with custom expression\n              const orderLatex = this.toLatexRecursive(element.order!, maxDepth, inOperatorName);\n              numerator = `${diffSymbol}^{${orderLatex || \"n\"}}${functionLatex || \" \"}`;\n              denominator = `${diffSymbol}${variableLatex || \" \"}^{${orderLatex || \"n\"}}`;\n            }\n\n            // Use custom \\derivfrac or \\derivdfrac command instead of \\frac/\\dfrac\n            if (element.displayMode === \"display\") {\n              latex += `\\\\derivdfrac{${numerator}}{${denominator}}`;\n            } else {\n              latex += `\\\\derivfrac{${numerator}}{${denominator}}`;\n            }\n          }\n        }\n      } else if (element.type === \"matrix\") {\n        const matrixLatex = this.matrixToLatex(element, maxDepth, inOperatorName);\n        latex += matrixLatex;\n      } else if (element.type === \"stack\") {\n        const stackLatex = this.stackToLatex(element, maxDepth, inOperatorName);\n        latex += stackLatex;\n      } else if (element.type === \"cases\") {\n        const casesLatex = this.casesToLatex(element, maxDepth, inOperatorName);\n        latex += casesLatex;\n      } else if (element.type === \"accent\") {\n        const accentLatex = this.accentToLatex(element, maxDepth, inOperatorName);\n        latex += accentLatex;\n      } else if (element.type === \"function\") {\n        const functionLatex = this.functionToLatex(element, maxDepth, inOperatorName);\n        latex += functionLatex;\n      }\n    }\n\n    // Apply uniform formatting as a wrapper if detected\n    if (hasUniformFormatting && latex.trim()) {\n      latex = this.applyFormattingToLatex(latex, hasUniformFormatting, inOperatorName);\n    }\n\n    return latex;\n  }\n\n  private matrixToLatex(element: EquationElement, maxDepth: number, inOperatorName: boolean = false): string {\n    const { rows, cols, cells, matrixType } = element;\n\n    if (!rows || !cols || !cells) {\n      return \"\";\n    }\n\n    // Build the matrix content from the cells object\n    const matrixRows: string[] = [];\n    for (let row = 0; row < rows; row++) {\n      const cellsInRow: string[] = [];\n      for (let col = 0; col < cols; col++) {\n        const cellKey = `cell_${row}_${col}`;\n        const cellElements = cells[cellKey] || [];\n        const cellContent = this.toLatexRecursive(cellElements, maxDepth, inOperatorName).trim();\n        cellsInRow.push(cellContent || \"\"); // Empty cells are empty\n      }\n      matrixRows.push(cellsInRow.join(\" & \"));\n    }\n    const matrixContent = matrixRows.join(\" \\\\\\\\ \");\n\n    // Wrap with appropriate LaTeX environment based on matrix type\n    let matrixLatex = \"\";\n    switch (matrixType) {\n      case \"parentheses\":\n        matrixLatex = `\\\\begin{pmatrix}${matrixContent}\\\\end{pmatrix}`;\n        break;\n      case \"brackets\":\n        matrixLatex = `\\\\begin{bmatrix}${matrixContent}\\\\end{bmatrix}`;\n        break;\n      case \"braces\":\n        matrixLatex = `\\\\begin{Bmatrix}${matrixContent}\\\\end{Bmatrix}`;\n        break;\n      case \"bars\":\n        matrixLatex = `\\\\begin{vmatrix}${matrixContent}\\\\end{vmatrix}`;\n        break;\n      case \"double-bars\":\n        matrixLatex = `\\\\begin{Vmatrix}${matrixContent}\\\\end{Vmatrix}`;\n        break;\n      case \"none\":\n        matrixLatex = `\\\\begin{matrix}${matrixContent}\\\\end{matrix}`;\n        break;\n      default:\n        matrixLatex = `\\\\begin{pmatrix}${matrixContent}\\\\end{pmatrix}`;\n        break;\n    }\n\n    // Apply formatting to the entire matrix structure (excluding bold/italic which should apply to entries)\n    const matrixFormatting = { ...element };\n    delete matrixFormatting.bold;\n    delete matrixFormatting.italic;\n\n    return this.applyFormattingToLatex(matrixLatex, matrixFormatting, false);\n  }\n\n  private stackToLatex(element: EquationElement, maxDepth: number, inOperatorName: boolean = false): string {\n    const { rows, cols, cells } = element;\n\n    if (!rows || !cols || !cells) {\n      return \"\\\\text{Invalid Stack}\";\n    }\n\n    // Build the stack content from the cells object\n    const stackRows: string[] = [];\n    for (let row = 0; row < rows; row++) {\n      const cellsInRow: string[] = [];\n      for (let col = 0; col < cols; col++) {\n        const cellKey = `cell_${row}_${col}`;\n        const cellElements = cells[cellKey] || [];\n        const cellLatex = this.toLatexRecursive(cellElements, maxDepth - 1).trim();\n        cellsInRow.push(cellLatex);\n      }\n      stackRows.push(cellsInRow.join(\" & \"));\n    }\n    const stackContent = stackRows.join(\" \\\\\\\\ \");\n\n    // Use array environment for plain stacks\n    let stackLatex = `\\\\begin{array}{${\"c\".repeat(cols)}}${stackContent}\\\\end{array}`;\n\n    // Apply formatting to the entire stack structure\n    const stackFormatting = { ...element };\n    delete stackFormatting.bold;\n    delete stackFormatting.italic;\n\n    return this.applyFormattingToLatex(stackLatex, stackFormatting, false);\n  }\n\n  private casesToLatex(element: EquationElement, maxDepth: number, inOperatorName: boolean = false): string {\n    const { rows, cols, cells } = element;\n\n    if (!rows || !cols || !cells) {\n      return \"\\\\text{Invalid Cases}\";\n    }\n\n    // Build the cases content from the cells object\n    const casesRows: string[] = [];\n    for (let row = 0; row < rows; row++) {\n      const cellsInRow: string[] = [];\n      for (let col = 0; col < cols; col++) {\n        const cellKey = `cell_${row}_${col}`;\n        const cellElements = cells[cellKey] || [];\n        const cellLatex = this.toLatexRecursive(cellElements, maxDepth - 1).trim();\n        cellsInRow.push(cellLatex);\n      }\n      casesRows.push(cellsInRow.join(\" & \"));\n    }\n    const casesContent = casesRows.join(\" \\\\\\\\ \");\n\n    // Use cases environment for piecewise functions\n    let casesLatex = `\\\\begin{cases}${casesContent}\\\\end{cases}`;\n\n    // Apply formatting to the entire cases structure\n    const casesFormatting = { ...element };\n    delete casesFormatting.bold;\n    delete casesFormatting.italic;\n\n    return this.applyFormattingToLatex(casesLatex, casesFormatting, false);\n  }\n\n  private accentToLatex(element: EquationElement, maxDepth: number, inOperatorName: boolean = false): string {\n    const baseLatex = this.toLatexRecursive(element.accentBase || [], maxDepth, inOperatorName);\n\n    switch (element.accentType) {\n      case \"hat\":\n        return `\\\\hat{${baseLatex}}`;\n      case \"tilde\":\n        return `\\\\tilde{${baseLatex}}`;\n      case \"bar\":\n        return `\\\\bar{${baseLatex}}`;\n      case \"dot\":\n        return `\\\\dot{${baseLatex}}`;\n      case \"ddot\":\n        return `\\\\ddot{${baseLatex}}`;\n      case \"vec\":\n        return `\\\\vec{${baseLatex}}`;\n      case \"widehat\":\n        return `\\\\widehat{${baseLatex}}`;\n      case \"widetilde\":\n        return `\\\\widetilde{${baseLatex}}`;\n      case \"widebar\":\n        return `\\\\overline{${baseLatex}}`;\n      case \"overrightarrow\":\n        return `\\\\overrightarrow{${baseLatex}}`;\n      case \"overleftarrow\":\n        return `\\\\overleftarrow{${baseLatex}}`;\n      case \"overleftrightarrow\":\n        return `\\\\overleftrightarrow{${baseLatex}}`;\n      case \"overbrace\":\n        if (element.accentLabel && element.accentLabel.length > 0) {\n          const labelLatex = this.toLatexRecursive(element.accentLabel, maxDepth, inOperatorName);\n          return `\\\\overbrace{${baseLatex}}^{${labelLatex}}`;\n        } else {\n          return `\\\\overbrace{${baseLatex}}`;\n        }\n      case \"underbrace\":\n        if (element.accentLabel && element.accentLabel.length > 0) {\n          const labelLatex = this.toLatexRecursive(element.accentLabel, maxDepth, inOperatorName);\n          return `\\\\underbrace{${baseLatex}}_{${labelLatex}}`;\n        } else {\n          return `\\\\underbrace{${baseLatex}}`;\n        }\n      case \"labeledoverbrace\":\n        const overbraceLabel = this.toLatexRecursive(element.accentLabel || [], maxDepth, inOperatorName);\n        return `\\\\overbrace{${baseLatex}}^{${overbraceLabel}}`;\n      case \"labeledunderbrace\":\n        const underbraceLabel = this.toLatexRecursive(element.accentLabel || [], maxDepth, inOperatorName);\n        return `\\\\underbrace{${baseLatex}}_{${underbraceLabel}}`;\n      case \"overparen\":\n        return `\\\\overparen{${baseLatex}}`;\n      case \"underparen\":\n        return `\\\\underparen{${baseLatex}}`;\n      default:\n        return `\\\\hat{${baseLatex}}`;\n    }\n  }\n\n  private functionToLatex(element: EquationElement, maxDepth: number, inOperatorName: boolean = false): string {\n    const functionType = element.functionType!;\n    \n    // Parse common elements\n    const argumentLatex = this.toLatexRecursive(element.functionArgument || [], maxDepth, inOperatorName);\n    \n    // User-defined functions (use \\operatorname)\n    if ([\"function\", \"functionsub\", \"functionlim\"].includes(functionType)) {\n      const nameLatex = this.toLatexRecursive(element.functionName || [], maxDepth, true);\n      if (!nameLatex) return argumentLatex || \"\\\\square\";\n      \n      if (functionType === \"functionlim\") {\n        const constraintLatex = this.toLatexRecursive(element.functionConstraint || [], maxDepth, inOperatorName);\n        return `{\\\\displaystyle \\\\operatorname*{${nameLatex}}_{${constraintLatex}} ${argumentLatex}}`;\n      } else if (functionType === \"functionsub\") {\n        const baseLatex = this.toLatexRecursive(element.functionBase || [], maxDepth, inOperatorName);\n        return `\\\\operatorname{${nameLatex}}_{${baseLatex}} ${argumentLatex}`;\n      } else {\n        return `\\\\operatorname{${nameLatex}} ${argumentLatex}`;\n      }\n    }\n    \n    // Limit operators (need underscripts)\n    if ([\"max\", \"min\", \"lim\", \"argmax\", \"argmin\"].includes(functionType)) {\n      const constraintLatex = this.toLatexRecursive(element.functionConstraint || [], maxDepth, inOperatorName);\n      const operatorName = functionType === \"argmax\" ? \"argmax\" : \n                           functionType === \"argmin\" ? \"argmin\" : functionType;\n      return `{\\\\displaystyle \\\\operatorname*{${operatorName}}_{${constraintLatex}} ${argumentLatex}}`;\n    }\n    \n    // Base-n logarithm\n    if (functionType === \"logn\") {\n      const baseLatex = this.toLatexRecursive(element.functionBase || [], maxDepth, inOperatorName);\n      return `\\\\log_{${baseLatex}} ${argumentLatex}`;\n    }\n    \n    // Inverse trig/hyperbolic functions\n    if ([\"asin\", \"acos\", \"atan\", \"asinh\", \"acosh\", \"atanh\"].includes(functionType)) {\n      const baseNames = { asin: \"sin\", acos: \"cos\", atan: \"tan\", asinh: \"sinh\", acosh: \"cosh\", atanh: \"tanh\" };\n      const baseName = baseNames[functionType as keyof typeof baseNames];\n      return `\\\\operatorname{${baseName}^{-1}} ${argumentLatex}`;\n    }\n    \n    // Standard built-in functions\n    return `\\\\${functionType} ${argumentLatex}`;\n  }\n\n  private shouldUsePhysicsPackageForDerivative(): boolean {\n    // Determine whether to use physics package based on current differential style\n    // Use physics package for roman style differentials\n    if (this.inputHandler && typeof this.inputHandler.getDifferentialStyleForLatex === \"function\") {\n      return this.inputHandler.getDifferentialStyleForLatex();\n    }\n    return false; // Default to standard LaTeX if no input handler\n  }\n\n  private parseLatexToEquation(latex: string): EquationElement[] {\n    const result: EquationElement[] = [];\n    let i = 0;\n\n    while (i < latex.length) {\n      if (latex.substr(i, 13) === \"\\\\displaystyle\") {\n        // Handle \\displaystyle followed by large operators\n        i += 13;\n        // Skip whitespace after \\displaystyle\n        while (i < latex.length && latex[i] === \" \") i++;\n\n        if (this.isLargeOperator(latex, i)) {\n          const operatorInfo = this.parseLargeOperator(latex, i, true); // true = display mode\n          if (operatorInfo) {\n            result.push(operatorInfo.element);\n            i = operatorInfo.endIndex;\n          } else {\n            i++;\n          }\n        } else if (latex.substr(i, 3) === \"\\\\dv\") {\n          // Handle \\displaystyle \\dv{f}{x} or \\displaystyle \\dv{x}(\\grande{f})\n          i += 3; // Skip \"\\dv\"\n          const dvResult = this.parseDvCommand(latex, i, \"display\", false, false);\n          if (dvResult) {\n            result.push(dvResult.element);\n            i = dvResult.endIndex;\n          }\n        } else if (latex.substr(i, 4) === \"\\\\pdv\") {\n          // Handle \\displaystyle \\pdv{f}{x} or \\displaystyle \\pdv{x}(\\grande{f})\n          i += 4; // Skip \"\\pdv\"\n          const dvResult = this.parseDvCommand(latex, i, \"display\", false, true);\n          if (dvResult) {\n            result.push(dvResult.element);\n            i = dvResult.endIndex;\n          }\n        } else {\n          // Check if this is followed by an integral command\n          const integralResult = this.parseCustomIntegral(latex, i);\n          if (integralResult) {\n            integralResult.element.displayMode = \"display\"; // This was preceded by \\displaystyle\n            result.push(integralResult.element);\n            i = integralResult.endIndex;\n          } else {\n            // \\displaystyle not followed by large operator, \\dv, or integral\n            // Future: will support other expressions like \\frac, \\sqrt, etc.\n            // Now: treat as text\n            result.push({\n              id: this.generateElementId(),\n              type: \"text\",\n              value: \"\\\\displaystyle\",\n            });\n          }\n        }\n      } else if (latex.substr(i, 10) === \"\\\\textstyle\") {\n        // Handle \\textstyle (inline mode) - just skip it as operators default to inline\n        i += 10;\n        // Skip whitespace after \\textstyle\n        while (i < latex.length && latex[i] === \" \") i++;\n\n        if (this.isLargeOperator(latex, i)) {\n          const operatorInfo = this.parseLargeOperator(latex, i, false); // false = inline mode\n          if (operatorInfo) {\n            result.push(operatorInfo.element);\n            i = operatorInfo.endIndex;\n          } else {\n            i++;\n          }\n        } else if (latex.substr(i, 3) === \"\\\\dv\") {\n          // Handle \\textstyle \\dv{f}{x} or \\textstyle \\dv{x}(\\grande{f})\n          i += 3; // Skip \"\\dv\"\n          const dvResult = this.parseDvCommand(latex, i, \"inline\", false, false);\n          if (dvResult) {\n            result.push(dvResult.element);\n            i = dvResult.endIndex;\n          }\n        } else if (latex.substr(i, 4) === \"\\\\pdv\") {\n          // Handle \\textstyle \\pdv{f}{x} or \\textstyle \\pdv{x}(\\grande{f})\n          i += 4; // Skip \"\\pdv\"\n          const dvResult = this.parseDvCommand(latex, i, \"inline\", false, true);\n          if (dvResult) {\n            result.push(dvResult.element);\n            i = dvResult.endIndex;\n          }\n        } else {\n          // Check if this is followed by an integral command\n          const integralResult = this.parseCustomIntegral(latex, i);\n          if (integralResult) {\n            integralResult.element.displayMode = \"inline\"; // This was preceded by \\textstyle\n            result.push(integralResult.element);\n            i = integralResult.endIndex;\n          }\n          // If not followed by large operator, derivative, or integral, just continue (skip the \\textstyle)\n        }\n      } else if (this.tryParseDerivativeCommand(latex, i, result)) {\n        i = this.lastDerivativeCommandEndIndex!;\n      } else if (latex.substr(i, 6) === \"\\\\dfrac\") {\n        i += 6;\n        const numerator = this.parseLatexGroup(latex, i);\n        i = numerator.endIndex;\n        const denominator = this.parseLatexGroup(latex, i);\n        i = denominator.endIndex;\n\n        result.push({\n          id: this.generateElementId(),\n          type: \"fraction\",\n          displayMode: \"display\", // dfrac is display-style\n          numerator: this.parseLatexToEquation(numerator.content),\n          denominator: this.parseLatexToEquation(denominator.content),\n        });\n      } else if (latex.substr(i, 5) === \"\\\\frac\") {\n        i += 5;\n        const numerator = this.parseLatexGroup(latex, i);\n        i = numerator.endIndex;\n        const denominator = this.parseLatexGroup(latex, i);\n        i = denominator.endIndex;\n\n        result.push({\n          id: this.generateElementId(),\n          type: \"fraction\",\n          displayMode: \"inline\", // frac is inline-style\n          numerator: this.parseLatexToEquation(numerator.content),\n          denominator: this.parseLatexToEquation(denominator.content),\n        });\n      } else if (latex.substr(i, 6) === \"\\\\begin\") {\n        // Parse matrix, stack, and cases environments\n        const environmentResult = this.parseMatrixStackCasesEnvironment(latex, i);\n        if (environmentResult) {\n          result.push(environmentResult.element);\n          i = environmentResult.endIndex;\n        } else {\n          // Not a matrix/stack/cases environment, treat as text\n          result.push({\n            id: this.generateElementId(),\n            type: \"text\",\n            value: latex[i],\n          });\n          i++;\n        }\n      } else if (this.isLargeOperator(latex, i)) {\n        // Parse large operators like \\sum, \\prod, \\int, etc.\n        const operatorInfo = this.parseLargeOperator(latex, i, false); // false = inline mode\n        if (operatorInfo) {\n          result.push(operatorInfo.element);\n          i = operatorInfo.endIndex;\n        } else {\n          i++;\n        }\n      } else if (this.tryParseStyleWrapper(latex, i, result)) {\n        i = this.lastStyleWrapperEndIndex!;\n      } else if (latex.substr(i, 3) === \"\\\\dv\") {\n        // Parse physics package derivative command\n        i += 3;\n        const dvResult = this.parseDvCommand(latex, i, \"inline\", false, false);\n        if (dvResult) {\n          result.push(dvResult.element);\n          i = dvResult.endIndex;\n        }\n      } else if (latex.substr(i, 4) === \"\\\\pdv\") {\n        // Parse physics package partial derivative command\n        i += 4;\n        const dvResult = this.parseDvCommand(latex, i, \"inline\", false, true);\n        if (dvResult) {\n          result.push(dvResult.element);\n          i = dvResult.endIndex;\n        }\n      } else if (this.isBuiltinFunctionCommand(latex, i)) {\n        // Parse built-in function commands like \\sin, \\cos, \\max, etc.\n        const functionResult = this.parseBuiltinFunctionCommand(latex, i);\n        if (functionResult) {\n          result.push(functionResult.element);\n          i = functionResult.endIndex;\n        }\n      } else if (latex.substr(i, 13) === \"\\\\operatorname\") {\n        // Parse \\operatorname{} or \\operatorname*{}\n        const operatorResult = this.parseOperatorName(latex, i);\n        if (operatorResult) {\n          result.push(operatorResult.element);\n          i = operatorResult.endIndex;\n        }\n      } else if (this.isCustomIntegralCommand(latex, i)) {\n        // Parse custom integral commands like \\inti, \\intd, \\iinti, etc.\n        const integralInfo = this.parseCustomIntegral(latex, i);\n        if (integralInfo) {\n          result.push(integralInfo.element);\n          i = integralInfo.endIndex;\n        } else {\n          i++;\n        }\n      } else if (latex.substr(i, 5) === \"\\\\sqrt\") {\n        i += 5;\n\n        if (i < latex.length && latex[i] === \"[\") {\n          const indexStart = i + 1;\n          let indexEnd = indexStart;\n          let bracketCount = 1;\n\n          while (indexEnd < latex.length && bracketCount > 0) {\n            if (latex[indexEnd] === \"[\") bracketCount++;\n            else if (latex[indexEnd] === \"]\") bracketCount--;\n            indexEnd++;\n          }\n\n          const indexContent = latex.substring(indexStart, indexEnd - 1);\n          i = indexEnd;\n\n          const radicand = this.parseLatexGroup(latex, i);\n          i = radicand.endIndex;\n\n          result.push({\n            id: this.generateElementId(),\n            type: \"nthroot\",\n            index: this.parseLatexToEquation(indexContent),\n            radicand: this.parseLatexToEquation(radicand.content),\n          });\n        } else {\n          const radicand = this.parseLatexGroup(latex, i);\n          i = radicand.endIndex;\n\n          result.push({\n            id: this.generateElementId(),\n            type: \"sqrt\",\n            radicand: this.parseLatexToEquation(radicand.content),\n          });\n        }\n      } else if (latex[i] === \"^\" || latex[i] === \"_\") {\n        const isSuper = latex[i] === \"^\";\n        i++;\n\n        let baseElement: EquationElement;\n        if (result.length > 0 && result[result.length - 1].type === \"script\") {\n          baseElement = result.pop()!;\n        } else if (result.length > 0) {\n          const lastElement = result.pop()!;\n          baseElement = {\n            id: this.generateElementId(),\n            type: \"script\",\n            base: [lastElement],\n            superscript: undefined,\n            subscript: undefined,\n          };\n        } else {\n          baseElement = {\n            id: this.generateElementId(),\n            type: \"script\",\n            base: [],\n            superscript: undefined,\n            subscript: undefined,\n          };\n        }\n\n        const scriptContent = this.parseLatexGroup(latex, i);\n        i = scriptContent.endIndex;\n\n        if (isSuper) {\n          baseElement.superscript = this.parseLatexToEquation(scriptContent.content);\n        } else {\n          baseElement.subscript = this.parseLatexToEquation(scriptContent.content);\n        }\n\n        result.push(baseElement);\n      } else if (latex[i] === \"{\") {\n        const group = this.parseLatexGroup(latex, i);\n        i = group.endIndex;\n\n        // Try to extract from style wrapper (displaystyle/textstyle)\n        const styleWrapper = this.extractFromStyleWrapper(group.content, 0);\n        if (styleWrapper && styleWrapper.hasWrapper) {\n          const parsedElements = this.parseLatexToEquation(styleWrapper.content);\n          // Apply the style mode to elements that support it\n          if (styleWrapper.styleType) {\n            this.applyStyleModeToElements(parsedElements, styleWrapper.styleType);\n          }\n          result.push(...parsedElements);\n        } else {\n          result.push(...this.parseLatexToEquation(group.content));\n        }\n      } else if (latex[i] === \" \") {\n        i++;\n        // Check for LaTeX symbol commands\n      } else if (\n        latex[i] === \"\\\\\" &&\n        !this.isBracketCommand(latex, i) &&\n        !this.isLargeOperator(latex, i)\n      ) {\n        // Try to parse as a LaTeX symbol command\n        const newIndex = this.tryParseLatexSymbol(latex, i, result);\n        if (newIndex !== null) {\n          i = newIndex;\n        } else if (this.tryParseFormattingCommand(latex, i, result)) {\n          i = this.lastFormattingCommandEndIndex!;\n        } else if (latex.substr(i, 10) === \"\\\\textcolor\") {\n          i += 10;\n          const colorGroup = this.parseLatexGroup(latex, i);\n          i = colorGroup.endIndex;\n          const contentGroup = this.parseLatexGroup(latex, i);\n          i = contentGroup.endIndex;\n          const formattedElements = this.parseLatexToEquation(contentGroup.content);\n          const wrapperGroupId = this.generateElementId();\n\n          // Apply color wrapper using multi-wrapper system\n          this.applyWrapperToElements(formattedElements, \"color\", colorGroup.content);\n          result.push(...formattedElements);\n        } else if (latex.substr(i, 6) === \"\\\\color\") {\n          i += 6;\n          const colorGroup = this.parseLatexGroup(latex, i);\n          i = colorGroup.endIndex;\n          const contentGroup = this.parseLatexGroup(latex, i);\n          i = contentGroup.endIndex;\n          const formattedElements = this.parseLatexToEquation(contentGroup.content);\n          formattedElements.forEach((element) => {\n            if (element.type === \"text\") {\n              element.color = colorGroup.content;\n            }\n          });\n          result.push(...formattedElements);\n        } else if (latex.substr(i, 10) === \"\\\\underline\") {\n          i += 10;\n          const group = this.parseLatexGroup(latex, i);\n          i = group.endIndex;\n\n          // Check if this is a double underline (nested \\underline)\n          const isDoubleUnderline =\n            group.content.startsWith(\"\\\\underline{\") && group.content.endsWith(\"}\");\n\n          const wrapperGroupId = this.generateElementId();\n\n          if (isDoubleUnderline) {\n            // Parse the inner content for double underline\n            const innerContent = group.content.slice(11, -1); // Remove \\underline{ and }\n            const formattedElements = this.parseLatexToEquation(innerContent);\n            // Apply double underline wrapper using multi-wrapper system\n            this.applyWrapperToElements(formattedElements, \"underline\", \"double\");\n            result.push(...formattedElements);\n          } else {\n            // Single underline\n            const formattedElements = this.parseLatexToEquation(group.content);\n            // Apply single underline wrapper using multi-wrapper system\n            this.applyWrapperToElements(formattedElements, \"underline\", \"single\");\n            result.push(...formattedElements);\n          }\n        } else if (latex.substr(i, 7) === \"\\\\cancel\") {\n          i += 7;\n          const group = this.parseLatexGroup(latex, i);\n          i = group.endIndex;\n          // Parse the content and apply wrapper group metadata to each element\n          const wrappedElements = this.parseLatexToEquation(group.content);\n\n          // Apply cancel wrapper using multi-wrapper system\n          this.applyWrapperToElements(wrappedElements, \"cancel\");\n\n          // Add the elements directly to the result (not as a wrapper)\n          result.push(...wrappedElements);\n        } else if (this.tryParseAccentCommand(latex, i, result)) {\n          i = this.lastAccentCommandEndIndex!;\n        } else if (latex.substr(i, 6) === \"\\\\text{\") {\n          // Handle \\text{} commands specially\n          if (latex.substr(i, 9) === \"\\\\text{＆}\") {\n            result.push({\n              id: this.generateElementId(),\n              type: \"text\",\n              value: \"&\",\n            });\n            i += 9;\n          } else {\n            // Handle other \\text{} commands\n            i += 6; // Skip \\text{\n            const group = this.parseLatexGroup(latex, i - 1); // Parse from the { we just skipped\n            i = group.endIndex;\n\n            // Parse the content inside \\text{} and mark each character as text mode\n            const textContent = group.content;\n            for (let j = 0; j < textContent.length; j++) {\n              const char = textContent[j];\n              result.push({\n                id: this.generateElementId(),\n                type: \"text\",\n                value: char,\n                textMode: true,\n                italic: false, // Text mode should be roman\n              });\n            }\n          }\n        } else {\n          // Unknown command - skip it\n          i++;\n        }\n      } else if (latex.substr(i, 10) === \"{\\\\text{^}}\") {\n        result.push({\n          id: this.generateElementId(),\n          type: \"text\",\n          value: \"^\",\n        });\n        i += 10;\n      } else if (latex.substr(i, 5) === \"{\\\\_}\") {\n        result.push({\n          id: this.generateElementId(),\n          type: \"text\",\n          value: \"_\",\n        });\n        i += 5;\n      } else if (latex.substr(i, 17) === \"\\\\textasciitilde\") {\n        result.push({\n          id: this.generateElementId(),\n          type: \"text\",\n          value: \"~\",\n        });\n        i += 17;\n        // Skip the {} if present\n        if (latex.substr(i, 2) === \"{}\") {\n          i += 2;\n        }\n      } else if (latex.substr(i, 2) === \"\\\\{\") {\n        result.push({\n          id: this.generateElementId(),\n          type: \"text\",\n          value: \"{\",\n        });\n        i += 2;\n      } else if (latex.substr(i, 2) === \"\\\\}\") {\n        result.push({\n          id: this.generateElementId(),\n          type: \"text\",\n          value: \"}\",\n        });\n        i += 2;\n      } else if (latex.substr(i, 2) === \"\\\\#\") {\n        result.push({\n          id: this.generateElementId(),\n          type: \"text\",\n          value: \"#\",\n        });\n        i += 2;\n      } else if (latex.substr(i, 2) === \"\\\\%\") {\n        result.push({\n          id: this.generateElementId(),\n          type: \"text\",\n          value: \"%\",\n        });\n        i += 2;\n      } else if (latex.substr(i, 5) === \"\\\\left\") {\n        const bracketInfo = this.parseBracketCommand(latex, i);\n        if (bracketInfo) {\n          result.push({\n            id: this.generateElementId(),\n            type: \"bracket\",\n            leftBracketSymbol: bracketInfo.leftSymbol,\n            rightBracketSymbol: bracketInfo.rightSymbol,\n            content: this.parseLatexToEquation(bracketInfo.content),\n          });\n          i = bracketInfo.endIndex;\n        } else {\n          result.push({\n            id: this.generateElementId(),\n            type: \"text\",\n            value: latex[i],\n          });\n          i++;\n        }\n      } else if (this.isBracketCommand(latex, i)) {\n        const bracketInfo = this.parseBracketCommand(latex, i);\n        if (bracketInfo) {\n          result.push({\n            id: this.generateElementId(),\n            type: \"bracket\",\n            leftBracketSymbol: bracketInfo.leftSymbol,\n            rightBracketSymbol: bracketInfo.rightSymbol,\n            content: this.parseLatexToEquation(bracketInfo.content),\n          });\n          i = bracketInfo.endIndex;\n        } else {\n          // Skip bracket commands that couldn't be parsed to prevent them appearing as text\n          const skipped = this.skipBracketCommand(latex, i);\n          if (skipped > 0) {\n            i += skipped;\n          } else {\n            result.push({\n              id: this.generateElementId(),\n              type: \"text\",\n              value: latex[i],\n            });\n            i++;\n          }\n        }\n      } else {\n        result.push({\n          id: this.generateElementId(),\n          type: \"text\",\n          value: latex[i],\n        });\n        i++;\n      }\n    }\n\n    return result;\n  }\n\n  private parseLatexGroup(\n    latex: string,\n    startIndex: number\n  ): { content: string; endIndex: number } {\n    if (latex[startIndex] !== \"{\") {\n      return {\n        content: latex[startIndex] || \"\",\n        endIndex: startIndex + 1,\n      };\n    }\n\n    let braceCount = 0;\n    let i = startIndex;\n\n    while (i < latex.length) {\n      if (latex[i] === \"{\") {\n        braceCount++;\n      } else if (latex[i] === \"}\") {\n        braceCount--;\n        if (braceCount === 0) {\n          return {\n            content: latex.substring(startIndex + 1, i),\n            endIndex: i + 1,\n          };\n        }\n      }\n      i++;\n    }\n\n    return {\n      content: latex.substring(startIndex + 1),\n      endIndex: latex.length,\n    };\n  }\n\n  private isBracketCommand(latex: string, index: number): boolean {\n    const bracketCommands = [\"\\\\left\"];\n    return bracketCommands.some((cmd) => latex.substr(index, cmd.length) === cmd);\n  }\n\n  private skipBracketCommand(latex: string, index: number): number {\n    const bracketCommands = [\n      \"\\\\left\",\n      \"\\\\right\",\n    ];\n    for (const cmd of bracketCommands) {\n      if (latex.substr(index, cmd.length) === cmd) {\n        return cmd.length;\n      }\n    }\n    return 0;\n  }\n\n  private parseBracketCommand(\n    latex: string,\n    startIndex: number\n  ): {\n    leftSymbol: string;\n    rightSymbol: string;\n    content: string;\n    endIndex: number;\n  } | null {\n    // Extract the bracket command\n    let leftCommand = \"\";\n\n    const commands = [\"\\\\left\"];\n    for (let i = 0; i < commands.length; i++) {\n      if (latex.substr(startIndex, commands[i].length) === commands[i]) {\n        leftCommand = commands[i];\n        break;\n      }\n    }\n\n    if (!leftCommand) return null;\n\n    let pos = startIndex + leftCommand.length;\n\n    // Extract the left bracket symbol\n    const leftBracketInfo = this.extractBracketSymbol(latex, pos);\n    if (!leftBracketInfo) return null;\n\n    pos = leftBracketInfo.endIndex;\n    const leftSymbol = leftBracketInfo.symbol;\n\n    // Find the matching right bracket by looking for balanced brackets\n    const contentStart = pos;\n    let depth = 1;\n    let j = pos;\n\n    while (j < latex.length && depth > 0) {\n      // Check for right bracket commands\n      if (latex.substr(j, 6) === \"\\\\right\") {\n        let rightCommandLength = 6;\n\n        const rightBracketInfo = this.extractBracketSymbol(latex, j + rightCommandLength);\n        if (rightBracketInfo) {\n          depth--;\n          if (depth === 0) {\n            const content = latex.substring(contentStart, j);\n            return {\n              leftSymbol,\n              rightSymbol: rightBracketInfo.symbol,\n              content,\n              endIndex: rightBracketInfo.endIndex,\n            };\n          }\n          j = rightBracketInfo.endIndex;\n        } else {\n          j++;\n        }\n      }\n      // Check for nested left bracket commands\n      else if (this.isBracketCommand(latex, j)) {\n        depth++;\n        j++;\n      } else {\n        j++;\n      }\n    }\n\n    return null;\n  }\n\n  private extractBracketSymbol(\n    latex: string,\n    startIndex: number\n  ): { symbol: string; endIndex: number } | null {\n    if (startIndex >= latex.length) return null;\n\n    if (latex[startIndex] === \"(\") return { symbol: \"(\", endIndex: startIndex + 1 };\n    if (latex[startIndex] === \")\") return { symbol: \")\", endIndex: startIndex + 1 };\n    if (latex[startIndex] === \"[\") return { symbol: \"[\", endIndex: startIndex + 1 };\n    if (latex[startIndex] === \"]\") return { symbol: \"]\", endIndex: startIndex + 1 };\n    if (latex[startIndex] === \"|\") return { symbol: \"|\", endIndex: startIndex + 1 };\n\n    // Only treat \".\" as invisible bracket if immediately following a bracket command\n    if (latex[startIndex] === \".\") {\n      const bracketCommands = [\n        \"\\\\left\",\n        \"\\\\right\",\n      ];\n      for (const cmd of bracketCommands) {\n        if (startIndex >= cmd.length && latex.substr(startIndex - cmd.length, cmd.length) === cmd) {\n          return { symbol: \".\", endIndex: startIndex + 1 };\n        }\n      }\n    }\n\n    if (latex.substr(startIndex, 2) === \"\\\\{\") return { symbol: \"{\", endIndex: startIndex + 2 };\n    if (latex.substr(startIndex, 2) === \"\\\\}\") return { symbol: \"}\", endIndex: startIndex + 2 };\n    if (latex.substr(startIndex, 2) === \"\\\\|\") return { symbol: \"‖\", endIndex: startIndex + 2 };\n\n    if (latex.substr(startIndex, 7) === \"\\\\lfloor\") return { symbol: \"⌊\", endIndex: startIndex + 7 };\n    if (latex.substr(startIndex, 7) === \"\\\\rfloor\") return { symbol: \"⌋\", endIndex: startIndex + 7 };\n    if (latex.substr(startIndex, 6) === \"\\\\lceil\") return { symbol: \"⌈\", endIndex: startIndex + 6 };\n    if (latex.substr(startIndex, 6) === \"\\\\rceil\") return { symbol: \"⌉\", endIndex: startIndex + 6 };\n    if (latex.substr(startIndex, 7) === \"\\\\langle\") return { symbol: \"⟨\", endIndex: startIndex + 7 };\n    if (latex.substr(startIndex, 7) === \"\\\\rangle\") return { symbol: \"⟩\", endIndex: startIndex + 7 };\n\n    return null;\n  }\n\n  private getBracketLatexSymbols(\n    leftSymbol: string,\n    rightSymbol: string\n  ): { latexLeft: string; latexRight: string } {\n    // Always use \\left and \\right for automatic sizing\n    let leftSize = \"\";\n    let rightSize = \"\";\n\n    // Map symbols to LaTeX bracket commands\n    const getLatexBracket = (symbol: string, isLeft: boolean): string => {\n      if (!symbol) return \"\";\n\n      switch (symbol) {\n        case \"(\":\n          return \"\\\\left(\";\n        case \")\":\n          return \"\\\\right)\";\n        case \"[\":\n          return \"\\\\left[\";\n        case \"]\":\n          return \"\\\\right]\";\n        case \"{\":\n          return \"\\\\left\\\\{\";\n        case \"}\":\n          return \"\\\\right\\\\}\";\n        case \"⌊\":\n          return \"\\\\left\\\\lfloor\";\n        case \"⌋\":\n          return \"\\\\right\\\\rfloor\";\n        case \"⌈\":\n          return \"\\\\left\\\\lceil\";\n        case \"⌉\":\n          return \"\\\\right\\\\rceil\";\n        case \"|\":\n          return isLeft ? \"\\\\left|\" : \"\\\\right|\";\n        case \"‖\":\n          return isLeft ? \"\\\\left\\\\|\" : \"\\\\right\\\\|\";\n        case \"⟨\":\n          return \"\\\\left\\\\langle\";\n        case \"⟩\":\n          return \"\\\\right\\\\rangle\";\n        case \".\":\n          return isLeft ? \"\\\\left.\" : \"\\\\right.\";\n        default:\n          return symbol; // fallback to the raw symbol\n      }\n    };\n\n    const latexLeft = getLatexBracket(leftSymbol, true);\n    const latexRight = getLatexBracket(rightSymbol, false);\n\n    return { latexLeft, latexRight };\n  }\n\n  private hasEqualFormatting(element: EquationElement, formatting: any): boolean {\n    // First check legacy formatting properties\n    const legacyFormattingMatch =\n      element.bold === formatting.bold &&\n      this.getEffectiveItalicFormatting(element.italic) ===\n        this.getEffectiveItalicFormatting(formatting.italic) &&\n      element.color === formatting.color &&\n      element.underline === formatting.underline &&\n      element.cancel === formatting.cancel &&\n      element.textMode === formatting.textMode;\n\n    // Then check if wrappers match\n    // If either element has wrappers, they must match exactly\n    if (element.wrappers || formatting.wrappers) {\n      // Create a dummy element with formatting's wrappers for comparison\n      const formattingElement: EquationElement = {\n        id: \"\",\n        type: \"text\",\n        value: \"\",\n        wrappers: formatting.wrappers,\n      };\n      return legacyFormattingMatch && this.haveSameWrappers(element, formattingElement);\n    }\n\n    return legacyFormattingMatch;\n  }\n\n  private checkUniformFormatting(elements: EquationElement[]): any | null {\n    if (elements.length === 0) return null;\n\n    // Recursively collect all formatting from text elements\n    const allFormattings = this.collectAllFormattings(elements);\n    if (allFormattings.length === 0) return null;\n\n    // Filter out formattings that only have wrapper-eligible properties (cancel, underline, color)\n    const wrapperEligibleFormattings = allFormattings\n      .map((formatting) => ({\n        cancel: formatting.cancel,\n        underline: formatting.underline,\n        color: formatting.color,\n      }))\n      .filter((formatting) => formatting.cancel || formatting.underline || formatting.color);\n\n    if (wrapperEligibleFormattings.length === 0) return null;\n\n    // Check if all wrapper-eligible formattings are the same\n    const referenceFormatting = wrapperEligibleFormattings[0];\n\n    for (const formatting of wrapperEligibleFormattings) {\n      if (\n        formatting.cancel !== referenceFormatting.cancel ||\n        formatting.underline !== referenceFormatting.underline ||\n        formatting.color !== referenceFormatting.color\n      ) {\n        return null; // Not uniform\n      }\n    }\n\n    // Check that we have a reasonable number of formatted elements\n    const totalTextElements = this.countTextElements(elements);\n    const allTextFormattings = this.collectAllFormattings(elements);\n    const textElementsWithWrapperFormatting = allTextFormattings.filter(\n      (f) => f.cancel || f.underline || f.color\n    ).length;\n\n    // Be very conservative: require ALL text elements that have any wrapper formatting to have the SAME wrapper formatting\n    if (textElementsWithWrapperFormatting !== wrapperEligibleFormattings.length) {\n      return null;\n    }\n\n    // Require at least 2 formatted elements and at least 80% of text elements to be formatted\n    if (\n      wrapperEligibleFormattings.length < 2 ||\n      wrapperEligibleFormattings.length < Math.ceil(totalTextElements * 0.8)\n    ) {\n      return null;\n    }\n\n    return referenceFormatting;\n  }\n\n  private collectAllFormattings(elements: EquationElement[]): any[] {\n    const formattings: any[] = [];\n\n    for (const element of elements) {\n      // Only collect formatting from text elements (elements that can actually be formatted)\n      if (element.type === \"text\") {\n        // Check if this text element has formatting\n        if (\n          element.cancel ||\n          element.underline ||\n          element.color ||\n          element.bold ||\n          element.italic !== undefined\n        ) {\n          formattings.push({\n            bold: element.bold,\n            italic: element.italic,\n            color: element.color,\n            underline: element.underline,\n            cancel: element.cancel,\n          });\n        }\n      } else {\n        // For non-text elements, recursively check their children\n        const childArrays = [\n          element.numerator,\n          element.denominator, // fraction, bevelled-fraction\n          element.radicand,\n          element.index, // sqrt, nthroot\n          element.base,\n          element.superscript,\n          element.subscript, // script\n          element.content, // bracket\n          element.lowerLimit,\n          element.upperLimit,\n          element.operand, // large-operator\n          element.integrand,\n          element.differentialVariable, // integral\n          element.function,\n          element.variable,\n          element.order, // derivative\n        ].filter(Boolean);\n\n        for (const childArray of childArrays) {\n          if (Array.isArray(childArray)) {\n            formattings.push(...this.collectAllFormattings(childArray));\n          }\n        }\n\n        // Handle matrix cells\n        if (element.type === \"matrix\" && element.cells) {\n          for (const cellKey in element.cells) {\n            formattings.push(...this.collectAllFormattings(element.cells[cellKey]));\n          }\n        }\n      }\n    }\n\n    return formattings;\n  }\n\n  private countTextElements(elements: EquationElement[]): number {\n    let count = 0;\n\n    for (const element of elements) {\n      if (element.type === \"text\") {\n        count++;\n      } else {\n        // For non-text elements, recursively count their children\n        const childArrays = [\n          element.numerator,\n          element.denominator, // fraction, bevelled-fraction\n          element.radicand,\n          element.index, // sqrt, nthroot\n          element.base,\n          element.superscript,\n          element.subscript, // script\n          element.content, // bracket\n          element.lowerLimit,\n          element.upperLimit,\n          element.operand, // large-operator\n          element.integrand,\n          element.differentialVariable, // integral\n          element.function,\n          element.variable,\n          element.order, // derivative\n        ].filter(Boolean);\n\n        for (const childArray of childArrays) {\n          if (Array.isArray(childArray)) {\n            count += this.countTextElements(childArray);\n          }\n        }\n\n        // Handle matrix cells\n        if (element.type === \"matrix\" && element.cells) {\n          for (const cellKey in element.cells) {\n            count += this.countTextElements(element.cells[cellKey]);\n          }\n        }\n      }\n    }\n\n    return count;\n  }\n\n  private removeUniformFormattingFromElements(\n    elements: EquationElement[],\n    uniformFormatting: any\n  ): EquationElement[] {\n    return elements.map((element) =>\n      this.removeUniformFormattingFromElement(element, uniformFormatting)\n    );\n  }\n\n  private removeUniformFormattingFromElement(\n    element: EquationElement,\n    uniformFormatting: any\n  ): EquationElement {\n    // Create a deep copy of the element\n    const cleanElement = JSON.parse(JSON.stringify(element));\n\n    // Remove uniform formatting properties from this element\n    if (uniformFormatting.cancel && cleanElement.cancel === uniformFormatting.cancel) {\n      delete cleanElement.cancel;\n    }\n    if (uniformFormatting.underline && cleanElement.underline === uniformFormatting.underline) {\n      delete cleanElement.underline;\n    }\n    if (uniformFormatting.color && cleanElement.color === uniformFormatting.color) {\n      delete cleanElement.color;\n    }\n\n    // Recursively clean child elements\n    const childArrays = [\n      \"numerator\",\n      \"denominator\", // fraction, bevelled-fraction\n      \"radicand\",\n      \"index\", // sqrt, nthroot\n      \"base\",\n      \"superscript\",\n      \"subscript\", // script\n      \"content\", // bracket\n      \"lowerLimit\",\n      \"upperLimit\",\n      \"operand\", // large-operator\n      \"integrand\",\n      \"differentialVariable\", // integral\n      \"function\",\n      \"variable\",\n      \"order\", // derivative\n    ];\n\n    for (const childProp of childArrays) {\n      if (cleanElement[childProp] && Array.isArray(cleanElement[childProp])) {\n        cleanElement[childProp] = cleanElement[childProp].map((child: EquationElement) =>\n          this.removeUniformFormattingFromElement(child, uniformFormatting)\n        );\n      }\n    }\n\n    // Handle matrix cells\n    if (cleanElement.type === \"matrix\" && cleanElement.cells) {\n      for (const cellKey in cleanElement.cells) {\n        cleanElement.cells[cellKey] = cleanElement.cells[cellKey].map((child: EquationElement) =>\n          this.removeUniformFormattingFromElement(child, uniformFormatting)\n        );\n      }\n    }\n\n    return cleanElement;\n  }\n\n  private getEffectiveItalicFormatting(italic: boolean | undefined): string {\n    if (italic === true) return \"mathit\";\n    if (italic === false) return \"mathrm\";\n    return \"plain\"; // undefined = naturally italic, no wrapping needed\n  }\n\n  private isOperatorSymbol(text: string): boolean {\n    // Trim whitespace to handle cases like \" = \" or \" + \"\n    const trimmedText = text.trim();\n\n    // Check if the text is a known mathematical operator using symbol config\n    // First check direct matches (like \"=\" which has unicode \"=\")\n    const directMatch = Object.values(SYMBOL_CONFIG).find((info) => info.unicode === trimmedText);\n    if (directMatch && !directMatch.defaultItalic) {\n      return true;\n    }\n\n    // Also check if text is a latex command that maps to an operator\n    const symbolInfo = SYMBOL_CONFIG[trimmedText];\n    if (symbolInfo && !symbolInfo.defaultItalic) {\n      return true;\n    }\n\n    // Check if the entire text (with spaces) consists only of operators and whitespace\n    if (text !== trimmedText && trimmedText.length === 1) {\n      // This handles cases like \" = \" where we want to treat the whole thing as an operator\n      return this.isOperatorSymbol(trimmedText);\n    }\n\n    return false;\n  }\n\n  private applyWrapperToElements(\n    elements: EquationElement[],\n    wrapperType: \"cancel\" | \"underline\" | \"color\",\n    wrapperValue?: string\n  ): void {\n    // Apply wrapper using multi-wrapper system, preserving existing wrappers and tracking order\n    const wrapperGroupId = this.generateElementId();\n\n    elements.forEach((element) => {\n      if (!element.wrappers) element.wrappers = {};\n\n      // Initialize wrapperOrder if it doesn't exist\n      if (!element.wrapperOrder) element.wrapperOrder = [];\n\n      // Only add to order if this wrapper type doesn't already exist\n      if (!element.wrappers[wrapperType]) {\n        element.wrapperOrder.push(wrapperType);\n      }\n\n      if (wrapperType === \"cancel\") {\n        element.wrappers.cancel = { id: wrapperGroupId };\n      } else if (wrapperType === \"underline\") {\n        element.wrappers.underline = {\n          id: wrapperGroupId,\n          type: wrapperValue as \"single\" | \"double\",\n        };\n      } else if (wrapperType === \"color\") {\n        element.wrappers.color = { id: wrapperGroupId, value: wrapperValue! };\n      }\n    });\n  }\n\n  private applyFormattingToLatex(text: string, formatting: any, inOperatorName: boolean = false): string {\n    let result = text;\n\n    // Apply formatting in the correct nesting order\n    // Bold and italic (innermost)\n    if (formatting.bold && formatting.italic) {\n      // Use \\boldsymbol for both letters and numbers when both bold and italic - no italic for numbers\n      // since MathJax 3.x does not process macros in text-mode. It only handles math-mode macros\n      result = `\\\\boldsymbol{${result}}`;\n    } else if (formatting.bold) {\n      result = `\\\\mathbf{${result}}`;\n    } else if (formatting.italic === true) {\n      result = `\\\\mathit{${result}}`;\n    } else if (formatting.italic === false) {\n      // Don't apply \\mathrm{} to text mode elements (they should use \\text{} wrapper instead)\n      // Also don't apply to LaTeX commands or known operator symbols as it removes proper spacing\n      // Don't apply to text inside \\operatorname{} as \\operatorname already handles upright formatting\n      if (!formatting.textMode && !result.startsWith(\"\\\\\") && !this.isOperatorSymbol(result) && !inOperatorName) {\n        result = `\\\\mathrm{${result}}`;\n      }\n    }\n    // If formatting.italic is undefined, leave as plain text (naturally italic)\n\n    // Underline\n    if (formatting.underline) {\n      if (formatting.underline === \"double\") {\n        // Double underline using nested \\underline commands\n        result = `\\\\underline{\\\\underline{${result}}}`;\n      } else {\n        // Single underline (default for all other types)\n        result = `\\\\underline{${result}}`;\n      }\n    }\n\n    // Cancel\n    if (formatting.cancel) {\n      result = `\\\\cancel{${result}}`;\n    }\n\n    // Color (outermost)\n    if (formatting.color) {\n      result = `\\\\textcolor{${formatting.color}}{${result}}`;\n    }\n\n    return result;\n  }\n\n  private convertOperatorToLatex(operator: string): string {\n    // Use the UNICODE_TO_LATEX mapping for all symbol conversions\n    const latexCommand = UNICODE_TO_LATEX[operator];\n    if (latexCommand) {\n      return latexCommand;\n    }\n\n    // If no mapping found, return the original operator\n    return operator;\n  }\n\n  private isLatexCommand(latex: string, index: number): boolean {\n    // Check if this is the start of a LaTeX command (backslash followed by letters)\n    if (latex[index] !== \"\\\\\") return false;\n    let pos = index + 1;\n    while (pos < latex.length && latex[pos].match(/[a-zA-Z]/)) {\n      pos++;\n    }\n    return pos > index + 1; // Must have at least one letter after backslash\n  }\n\n  private isLargeOperator(latex: string, index: number): boolean {\n    // Use the centralized LARGE_OPERATORS list\n    return LARGE_OPERATORS.some((op) => {\n      if (latex.substr(index, op.length) === op) {\n        // Make sure the next character is not a letter (to avoid partial matches)\n        const nextCharIndex = index + op.length;\n        if (nextCharIndex >= latex.length || !latex[nextCharIndex].match(/[a-zA-Z]/)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n\n  private parseLargeOperator(\n    latex: string,\n    index: number,\n    forceDisplayMode?: boolean\n  ): { element: EquationElement; endIndex: number } | null {\n    // Use LATEX_TO_UNICODE for the mapping\n\n    // Find which operator matches\n    let operatorCommand = \"\";\n    let operatorSymbol = \"\";\n\n    for (const command of LARGE_OPERATORS) {\n      if (latex.substr(index, command.length) === command) {\n        operatorCommand = command;\n        operatorSymbol = LATEX_TO_UNICODE[command] || \"\";\n        break;\n      }\n    }\n\n    if (!operatorCommand) {\n      return null;\n    }\n\n    let pos = index + operatorCommand.length;\n    let limitMode: \"default\" | \"nolimits\" | \"limits\" = \"limits\"; // default\n    let displayMode: \"inline\" | \"display\" = forceDisplayMode ? \"display\" : \"inline\"; // Use forced display mode if provided\n\n    // Check for \\limits, \\nolimits\n    if (latex.substr(pos, 7) === \"\\\\limits\") {\n      limitMode = \"limits\";\n      pos += 7;\n    } else if (latex.substr(pos, 9) === \"\\\\nolimits\") {\n      limitMode = \"nolimits\";\n      pos += 9;\n    }\n\n    // Parse subscript and superscript (limits)\n    let lowerLimit: EquationElement[] = [];\n    let upperLimit: EquationElement[] = [];\n    let operand: EquationElement[] = [];\n\n    // Skip whitespace\n    while (pos < latex.length && latex[pos] === \" \") pos++;\n\n    // Parse _ (subscript/lower limit)\n    if (pos < latex.length && latex[pos] === \"_\") {\n      pos++;\n      const limitGroup = this.parseLatexGroup(latex, pos);\n      lowerLimit = this.parseLatexToEquation(limitGroup.content);\n      pos = limitGroup.endIndex;\n    }\n\n    // Skip whitespace\n    while (pos < latex.length && latex[pos] === \" \") pos++;\n\n    // Parse ^ (superscript/upper limit)\n    if (pos < latex.length && latex[pos] === \"^\") {\n      pos++;\n      const limitGroup = this.parseLatexGroup(latex, pos);\n      upperLimit = this.parseLatexToEquation(limitGroup.content);\n      pos = limitGroup.endIndex;\n    }\n\n    // Parse operand (now wrapped in braces for predictable parsing)\n    // Skip whitespace\n    while (pos < latex.length && latex[pos] === \" \") pos++;\n\n    // The operand should be in braces after the limits\n    if (pos < latex.length && latex[pos] === \"{\") {\n      const operandGroup = this.parseLatexGroup(latex, pos);\n      operand = this.parseLatexToEquation(operandGroup.content);\n      pos = operandGroup.endIndex;\n    }\n\n    const element: EquationElement = {\n      id: this.generateElementId(),\n      type: \"large-operator\",\n      operator: operatorSymbol,\n      limitMode,\n      displayMode,\n      lowerLimit,\n      upperLimit,\n      operand,\n    };\n\n    return { element, endIndex: pos };\n  }\n\n  private escapeLatexSpecialChars(text: string): string {\n    // Escape LaTeX special characters that could break parsing\n    // Only escape characters that haven't already been converted to LaTeX commands\n    let result = text;\n\n    // Don't escape if the text is already a LaTeX command (starts with \\)\n    if (result.startsWith(\"\\\\\")) {\n      return result;\n    }\n\n    // Escape special characters that could break LaTeX parsing\n    // Backslash is blocked from input due to MathJax spacing issues\n    result = result.replace(/\\{/g, \"\\\\{\"); // Opening brace\n    result = result.replace(/\\}/g, \"\\\\}\"); // Closing brace\n    result = result.replace(/#/g, \"\\\\#\"); // Hash\n    // Replace & with similar Unicode character that MathJax can handle\n    result = result.replace(/&/g, \"\\\\text{＆}\"); // Fullwidth ampersand (U+FF06)\n    result = result.replace(/%/g, \"\\\\%\"); // Percent (comment character)\n    result = result.replace(/~/g, \"\\\\textasciitilde{}\"); // Tilde\n\n    // Escape ^ and _ when they should be literal characters (not superscript/subscript)\n    // In math mode, these are special operators, so we need to escape them for literal display\n    result = result.replace(/\\^/g, \"{\\\\text{^}}\"); // Caret in text mode without backslash\n    result = result.replace(/_/g, \"{\\\\_}\"); // Underscore escaped in math mode\n\n    return result;\n  }\n\n  private tryParseLatexSymbol(\n    latex: string,\n    index: number,\n    result: EquationElement[]\n  ): number | null {\n    // Check if we have a LaTeX symbol command at this position\n    const commandLength = getLatexCommandLength(latex, index);\n    if (commandLength > 0) {\n      const command = latex.substr(index, commandLength);\n      const unicode = LATEX_TO_UNICODE[command];\n      if (unicode) {\n        result.push({\n          id: this.generateElementId(),\n          type: \"text\",\n          value: unicode,\n        });\n        return index + commandLength;\n      }\n    }\n    return null;\n  }\n\n  private isCustomIntegralCommand(latex: string, index: number): boolean {\n    for (const cmd of INTEGRAL_COMMANDS) {\n      if (latex.substr(index, cmd.length) === cmd) {\n        // Make sure it's not part of a longer command\n        const nextChar = latex[index + cmd.length];\n        if (\n          !nextChar ||\n          nextChar === \"{\" ||\n          nextChar === \"[\" ||\n          nextChar === \" \" ||\n          nextChar === \"\\\\\"\n        ) {\n          console.log(\"Found integral command:\", cmd, \"at index:\", index);\n          return true;\n        }\n      }\n    }\n    if (latex[index] === \"\\\\\" && latex.substr(index, 10).includes(\"int\")) {\n      console.log(\"Checking integral at\", index, \":\", latex.substr(index, 15), \"against commands:\", INTEGRAL_COMMANDS.slice(0, 5));\n    }\n    return false;\n  }\n\n  private parseFraction(\n    latex: string,\n    index: number,\n    forceInlineMode?: boolean\n  ): { element: EquationElement; endIndex: number } | null {\n    // Check if this is a \\frac or \\dfrac command\n    let isDisplayFrac = false;\n    let i = index;\n\n    if (latex.substr(i, 6) === \"\\\\dfrac\") {\n      isDisplayFrac = true;\n      i += 6;\n    } else if (latex.substr(i, 5) === \"\\\\frac\") {\n      i += 5;\n    } else {\n      return null;\n    }\n\n    // Parse numerator {num}\n    if (i >= latex.length || latex[i] !== \"{\") return null;\n    const numerator = this.parseLatexGroup(latex, i);\n    i = numerator.endIndex;\n\n    // Parse denominator {den}\n    if (i >= latex.length || latex[i] !== \"{\") return null;\n    const denominator = this.parseLatexGroup(latex, i);\n    i = denominator.endIndex;\n\n    const element: EquationElement = {\n      id: this.generateElementId(),\n      type: \"fraction\",\n      numerator: this.parseLatexToEquation(numerator.content),\n      denominator: this.parseLatexToEquation(denominator.content),\n      displayMode: forceInlineMode ? \"inline\" : isDisplayFrac ? \"display\" : undefined,\n    };\n\n    return { element, endIndex: i };\n  }\n\n  private parseCustomIntegral(\n    latex: string,\n    startIndex: number\n  ): { element: EquationElement; endIndex: number } | null {\n    let i = startIndex;\n    console.log(\"parseCustomIntegral called with:\", latex.substr(startIndex, 20));\n\n    // Determine which command we're parsing\n    let integralType: \"single\" | \"double\" | \"triple\" | \"contour\" = \"single\";\n    let integralStyle: \"italic\" | \"roman\" = \"italic\";\n    let commandLength = 0;\n    let isDefinite = false;\n\n    // Check for definite integral commands first (longer commands)\n    let limitMode: \"default\" | \"nolimits\" | \"limits\" = \"default\";\n\n    if (latex.substr(i, 12) === \"\\\\iiintdnolim\") {\n      integralType = \"triple\";\n      integralStyle = \"roman\";\n      commandLength = 12;\n      isDefinite = true;\n      limitMode = \"nolimits\";\n    } else if (latex.substr(i, 12) === \"\\\\iiintinolim\") {\n      integralType = \"triple\";\n      integralStyle = \"italic\";\n      commandLength = 12;\n      isDefinite = true;\n      limitMode = \"nolimits\";\n    } else if (latex.substr(i, 10) === \"\\\\iiintdlim\") {\n      integralType = \"triple\";\n      integralStyle = \"roman\";\n      commandLength = 10;\n      isDefinite = true;\n      limitMode = \"limits\";\n    } else if (latex.substr(i, 10) === \"\\\\iiintilim\") {\n      integralType = \"triple\";\n      integralStyle = \"italic\";\n      commandLength = 10;\n      isDefinite = true;\n      limitMode = \"limits\";\n    } else if (latex.substr(i, 11) === \"\\\\iintdnolim\") {\n      integralType = \"double\";\n      integralStyle = \"roman\";\n      commandLength = 11;\n      isDefinite = true;\n      limitMode = \"nolimits\";\n    } else if (latex.substr(i, 11) === \"\\\\iintinolim\") {\n      integralType = \"double\";\n      integralStyle = \"italic\";\n      commandLength = 11;\n      isDefinite = true;\n      limitMode = \"nolimits\";\n    } else if (latex.substr(i, 9) === \"\\\\iintdlim\") {\n      integralType = \"double\";\n      integralStyle = \"roman\";\n      commandLength = 9;\n      isDefinite = true;\n      limitMode = \"limits\";\n    } else if (latex.substr(i, 9) === \"\\\\iintilim\") {\n      integralType = \"double\";\n      integralStyle = \"italic\";\n      commandLength = 9;\n      isDefinite = true;\n      limitMode = \"limits\";\n    } else if (latex.substr(i, 11) === \"\\\\ointdnolim\") {\n      integralType = \"contour\";\n      integralStyle = \"roman\";\n      commandLength = 11;\n      isDefinite = true;\n      limitMode = \"nolimits\";\n    } else if (latex.substr(i, 11) === \"\\\\ointinolim\") {\n      integralType = \"contour\";\n      integralStyle = \"italic\";\n      commandLength = 11;\n      isDefinite = true;\n      limitMode = \"nolimits\";\n    } else if (latex.substr(i, 9) === \"\\\\ointdlim\") {\n      integralType = \"contour\";\n      integralStyle = \"roman\";\n      commandLength = 9;\n      isDefinite = true;\n      limitMode = \"limits\";\n    } else if (latex.substr(i, 9) === \"\\\\ointilim\") {\n      integralType = \"contour\";\n      integralStyle = \"italic\";\n      commandLength = 9;\n      isDefinite = true;\n      limitMode = \"limits\";\n    } else if (latex.substr(i, 10) === \"\\\\intdnolim\") {\n      integralType = \"single\";\n      integralStyle = \"roman\";\n      commandLength = 10;\n      isDefinite = true;\n      limitMode = \"nolimits\";\n    } else if (latex.substr(i, 10) === \"\\\\intinolim\") {\n      integralType = \"single\";\n      integralStyle = \"italic\";\n      commandLength = 10;\n      isDefinite = true;\n      limitMode = \"nolimits\";\n    } else if (latex.substr(i, 8) === \"\\\\intdlim\") {\n      integralType = \"single\";\n      integralStyle = \"roman\";\n      commandLength = 8;\n      isDefinite = true;\n      limitMode = \"limits\";\n    } else if (latex.substr(i, 8) === \"\\\\intilim\") {\n      integralType = \"single\";\n      integralStyle = \"italic\";\n      commandLength = 8;\n      isDefinite = true;\n      limitMode = \"limits\";\n    }\n    // Check for 3-parameter integral commands (subscript and lower limit variants)\n    else if (latex.substr(i, 12) === \"\\\\iiintilower\") {\n      integralType = \"triple\";\n      integralStyle = \"italic\";\n      commandLength = 12;\n      isDefinite = true;\n      limitMode = \"limits\";\n    } else if (latex.substr(i, 12) === \"\\\\iiintdlower\") {\n      integralType = \"triple\";\n      integralStyle = \"roman\";\n      commandLength = 12;\n      isDefinite = true;\n      limitMode = \"limits\";\n    } else if (latex.substr(i, 10) === \"\\\\iiintisub\") {\n      integralType = \"triple\";\n      integralStyle = \"italic\";\n      commandLength = 10;\n      isDefinite = true;\n      limitMode = \"nolimits\";\n    } else if (latex.substr(i, 10) === \"\\\\iiintdsub\") {\n      integralType = \"triple\";\n      integralStyle = \"roman\";\n      commandLength = 10;\n      isDefinite = true;\n      limitMode = \"nolimits\";\n    } else if (latex.substr(i, 11) === \"\\\\iintilower\") {\n      integralType = \"double\";\n      integralStyle = \"italic\";\n      commandLength = 11;\n      isDefinite = true;\n      limitMode = \"limits\";\n    } else if (latex.substr(i, 11) === \"\\\\iintdlower\") {\n      integralType = \"double\";\n      integralStyle = \"roman\";\n      commandLength = 11;\n      isDefinite = true;\n      limitMode = \"limits\";\n    } else if (latex.substr(i, 9) === \"\\\\iintisub\") {\n      integralType = \"double\";\n      integralStyle = \"italic\";\n      commandLength = 9;\n      isDefinite = true;\n      limitMode = \"nolimits\";\n    } else if (latex.substr(i, 9) === \"\\\\iintdsub\") {\n      integralType = \"double\";\n      integralStyle = \"roman\";\n      commandLength = 9;\n      isDefinite = true;\n      limitMode = \"nolimits\";\n    } else if (latex.substr(i, 9) === \"\\\\ointisub\") {\n      integralType = \"contour\";\n      integralStyle = \"italic\";\n      commandLength = 9;\n      isDefinite = true;\n      limitMode = \"nolimits\";\n    } else if (latex.substr(i, 9) === \"\\\\ointdsub\") {\n      integralType = \"contour\";\n      integralStyle = \"roman\";\n      commandLength = 9;\n      isDefinite = true;\n      limitMode = \"nolimits\";\n    }\n    // Check for indefinite integral commands (shorter commands)\n    else if (latex.substr(i, 7) === \"\\\\iiintd\") {\n      integralType = \"triple\";\n      integralStyle = \"roman\";\n      commandLength = 7;\n    } else if (latex.substr(i, 7) === \"\\\\iiinti\") {\n      integralType = \"triple\";\n      integralStyle = \"italic\";\n      commandLength = 7;\n    } else if (latex.substr(i, 6) === \"\\\\iintd\") {\n      integralType = \"double\";\n      integralStyle = \"roman\";\n      commandLength = 6;\n    } else if (latex.substr(i, 6) === \"\\\\iinti\") {\n      integralType = \"double\";\n      integralStyle = \"italic\";\n      commandLength = 6;\n    } else if (latex.substr(i, 6) === \"\\\\ointd\") {\n      integralType = \"contour\";\n      integralStyle = \"roman\";\n      commandLength = 6;\n    } else if (latex.substr(i, 6) === \"\\\\ointi\") {\n      integralType = \"contour\";\n      integralStyle = \"italic\";\n      commandLength = 6;\n    } else if (latex.substr(i, 5) === \"\\\\intd\") {\n      integralType = \"single\";\n      integralStyle = \"roman\";\n      commandLength = 5;\n    } else if (latex.substr(i, 5) === \"\\\\inti\") {\n      integralType = \"single\";\n      integralStyle = \"italic\";\n      commandLength = 5;\n    } else {\n      return null;\n    }\n\n    i += commandLength;\n\n    // Skip whitespace\n    while (i < latex.length && latex[i] === \" \") i++;\n\n    let integrand: EquationElement[] = [];\n    let differentialVariable: EquationElement[] = [];\n    let lowerLimit: EquationElement[] = [];\n    let upperLimit: EquationElement[] = [];\n\n    if (isDefinite) {\n      // Parse integrand {f(x)}\n      if (i >= latex.length || latex[i] !== \"{\") return null;\n      const integrandGroup = this.parseLatexGroup(latex, i);\n      integrand = this.parseLatexToEquation(integrandGroup.content);\n      i = integrandGroup.endIndex;\n\n      // Skip whitespace\n      while (i < latex.length && latex[i] === \" \") i++;\n\n      // Parse differential variable {x}\n      if (i >= latex.length || latex[i] !== \"{\") return null;\n      const variableGroup = this.parseLatexGroup(latex, i);\n      differentialVariable = this.parseLatexToEquation(variableGroup.content);\n      i = variableGroup.endIndex;\n\n      // Skip whitespace\n      while (i < latex.length && latex[i] === \" \") i++;\n\n      // Check if this is a 3-parameter command (subscript/lower limit only) or 4-parameter (lower+upper)\n      const commandName = latex.substr(startIndex, commandLength);\n      const is3Parameter = commandName.includes(\"sub\") || commandName.includes(\"lower\");\n\n      if (is3Parameter) {\n        // For 3-parameter integrals: \\iintisub{integrand}{variable}{region} or \\iintilower{integrand}{variable}{region}\n        // Parse region/limit {R}\n        if (i >= latex.length || latex[i] !== \"{\") return null;\n        const regionGroup = this.parseLatexGroup(latex, i);\n        lowerLimit = this.parseLatexToEquation(regionGroup.content);\n        i = regionGroup.endIndex;\n        // upperLimit remains empty for 3-parameter commands\n      } else {\n        // For 4-parameter integrals: \\intinolim{integrand}{variable}{lower}{upper} or \\intilim{integrand}{variable}{lower}{upper}\n        // Parse lower limit {a}\n        if (i >= latex.length || latex[i] !== \"{\") return null;\n        const lowerGroup = this.parseLatexGroup(latex, i);\n        lowerLimit = this.parseLatexToEquation(lowerGroup.content);\n        i = lowerGroup.endIndex;\n\n        // Skip whitespace\n        while (i < latex.length && latex[i] === \" \") i++;\n\n        // Parse upper limit {b}\n        if (i >= latex.length || latex[i] !== \"{\") return null;\n        const upperGroup = this.parseLatexGroup(latex, i);\n        upperLimit = this.parseLatexToEquation(upperGroup.content);\n        i = upperGroup.endIndex;\n      }\n    } else {\n      // For indefinite integrals: \\inti{integrand}{variable}\n      // Parse integrand {f(x)}\n      if (i >= latex.length || latex[i] !== \"{\") return null;\n      const integrandGroup = this.parseLatexGroup(latex, i);\n      integrand = this.parseLatexToEquation(integrandGroup.content);\n      i = integrandGroup.endIndex;\n\n      // Skip whitespace\n      while (i < latex.length && latex[i] === \" \") i++;\n\n      // Parse differential variable {x}\n      if (i >= latex.length || latex[i] !== \"{\") return null;\n      const variableGroup = this.parseLatexGroup(latex, i);\n      differentialVariable = this.parseLatexToEquation(variableGroup.content);\n      i = variableGroup.endIndex;\n    }\n\n    const element: EquationElement = {\n      id: this.generateElementId(),\n      type: \"integral\",\n      integralType: integralType,\n      integralStyle: integralStyle,\n      isDefinite: isDefinite,\n      limitMode: limitMode,\n      integrand: integrand,\n      differentialVariable: differentialVariable,\n      displayMode: \"inline\", // Default to inline\n    };\n\n    if (isDefinite) {\n      // For subscript commands (nolimits) and lower limit commands, only set lower limit\n      const isLowerOnlyCommand = (latex.substr(startIndex).includes(\"isub\") || \n                                 latex.substr(startIndex).includes(\"dsub\") ||\n                                 latex.substr(startIndex).includes(\"ilower\") || \n                                 latex.substr(startIndex).includes(\"dlower\"));\n      \n      if (isLowerOnlyCommand) {\n        element.lowerLimit = lowerLimit;\n        // Don't set upperLimit for lower-only integrals\n      } else {\n        element.lowerLimit = lowerLimit;\n        element.upperLimit = upperLimit;\n      }\n    }\n\n    return {\n      element: element,\n      endIndex: i,\n    };\n  }\n\n  /**\n   * Parse \\dv command and return the parsed derivative element and end index\n   * Handles all three forms: standard, displaystyle inline, and displaystyle braced\n   */\n  private parseDvCommand(\n    latex: string,\n    startIndex: number,\n    displayMode: \"inline\" | \"display\",\n    skipClosingBrace: boolean = false,\n    isPartial: boolean = false\n  ): { element: EquationElement; endIndex: number } | null {\n    let i = startIndex;\n\n    let order: number | EquationElement[] = 1;\n    // Check for optional order parameter [n]\n    if (i < latex.length && latex[i] === \"[\") {\n      const orderStart = i + 1;\n      let orderEnd = orderStart;\n      let bracketCount = 1;\n\n      while (orderEnd < latex.length && bracketCount > 0) {\n        if (latex[orderEnd] === \"[\") bracketCount++;\n        else if (latex[orderEnd] === \"]\") bracketCount--;\n        orderEnd++;\n      }\n\n      const orderContent = latex.substring(orderStart, orderEnd - 1);\n      // Try to parse as number, otherwise treat as nth order\n      const parsedOrder = parseInt(orderContent);\n      if (!isNaN(parsedOrder)) {\n        order = parsedOrder;\n      } else {\n        // nth order derivative\n        order = this.parseLatexToEquation(orderContent);\n      }\n      i = orderEnd;\n    }\n\n    // Parse first group - could be function or variable\n    const firstGroup = this.parseLatexGroup(latex, i);\n    i = firstGroup.endIndex;\n\n    // Check if there's a second group or if this is long form with \\grande\n    let isLongForm = false;\n    let functionContent = \"\";\n    let variableContent = firstGroup.content;\n\n    // Skip whitespace\n    while (i < latex.length && latex[i] === \" \") i++;\n\n    // Check for long form patterns: \\grande{f} or (\\grande{f}) or [\\grande{f}] etc., or just another group {x}\n    if (i < latex.length && latex[i] !== \"}\") {\n      if (latex[i] === \"{\") {\n        // Standard form with two groups: \\dv{f}{x}\n        const secondGroup = this.parseLatexGroup(latex, i);\n        functionContent = firstGroup.content;\n        variableContent = secondGroup.content;\n        i = secondGroup.endIndex;\n        isLongForm = false;\n      } else {\n        // Check for any bracket type with \\grande for long form\n        let bracketMatch = null;\n        for (const pair of BRACKET_PAIRS) {\n          // Skip curly braces as they're handled separately above\n          if (pair.left === \"{\" || pair.left === \"\\\\{\") continue;\n\n          // Check if current position matches the left bracket\n          if (latex.substr(i, pair.left.length) === pair.left) {\n            bracketMatch = pair;\n            break;\n          }\n        }\n\n        if (bracketMatch) {\n          // Long form with brackets: \\dv{x}[bracket]\\grande{f}[bracket]\n          const bracketStart = i;\n          i += bracketMatch.left.length; // Skip opening bracket\n\n          // Skip whitespace\n          while (i < latex.length && latex[i] === \" \") i++;\n\n          // Check for \\grande\n          if (latex.substr(i, 7) === \"\\\\grande\") {\n            i += 7;\n            const grandeGroup = this.parseLatexGroup(latex, i);\n            functionContent = grandeGroup.content;\n            i = grandeGroup.endIndex;\n\n            // Skip whitespace and closing bracket\n            while (i < latex.length && latex[i] === \" \") i++;\n            if (latex.substr(i, bracketMatch.right.length) === bracketMatch.right) {\n              i += bracketMatch.right.length;\n            }\n\n            isLongForm = true;\n          } else {\n            // Not a recognized pattern, reset position\n            i = bracketStart;\n          }\n        } else if (latex.substr(i, 7) === \"\\\\grande\") {\n          // Long form without brackets: \\dv{x} \\grande{f}\n          i += 7;\n          const grandeGroup = this.parseLatexGroup(latex, i);\n          functionContent = grandeGroup.content;\n          i = grandeGroup.endIndex;\n          isLongForm = true;\n        }\n      }\n    }\n\n    // Skip the closing brace if needed (for {\\displaystyle \\dv} case)\n    if (skipClosingBrace && i < latex.length && latex[i] === \"}\") {\n      i++;\n    }\n\n    if (functionContent || !isLongForm) {\n      // Debug logging for partial derivatives\n      if (isPartial) {\n        console.log(\"parseDvCommand debug:\", {\n          firstGroupContent: firstGroup.content,\n          functionContent,\n          variableContent,\n          isLongForm,\n          displayMode,\n          order,\n          finalFunction: functionContent || variableContent,\n          finalVariable: isLongForm ? variableContent : variableContent || \"\"\n        });\n      }\n      \n      const element: EquationElement = {\n        id: this.generateElementId(),\n        type: \"derivative\",\n        order: order,\n        function: this.parseLatexToEquation(functionContent || variableContent),\n        variable: this.parseLatexToEquation(isLongForm ? variableContent : variableContent || \"\"),\n        displayMode: displayMode,\n        isLongForm: isLongForm,\n        isPartial: isPartial,\n      };\n\n      return { element, endIndex: i };\n    }\n\n    return null;\n  }\n\n  private parseDerivativeFraction(\n    numeratorLatex: string,\n    denominatorLatex: string,\n    displayMode: \"inline\" | \"display\"\n  ): EquationElement | null {\n    // Try to parse numerator and denominator to detect derivative pattern\n    // Pattern: numerator = d^n f, denominator = d x^n or dx^n\n\n    // Improved pattern matching with better handling of function expressions\n    const numMatch = numeratorLatex.match(/^d(\\^{(.+)})?(.*)$/);\n    const denMatch = denominatorLatex.match(/^d\\s*(.+?)(\\^{(.+)})?$/);\n\n    if (numMatch && denMatch) {\n      const orderFromNum = numMatch[2]; // From d^{n}\n      const orderFromDen = denMatch[3]; // From x^{n}\n      let functionPart = numMatch[3] || \"\";\n      const variablePart = denMatch[1] || \"\";\n\n      // Clean up the function part - handle cases like \"{ e }^{2x}\"\n      functionPart = functionPart.trim();\n\n      // If we have something like \"{ e }^{2x}\", we need to clean up the unnecessary braces around 'e'\n      // But preserve the script part \"^{2x}\"\n      if (functionPart.match(/^{\\s*\\w+\\s*}(.*)$/)) {\n        // Extract the content from { content }rest -> content + rest\n        const match = functionPart.match(/^{\\s*(\\w+)\\s*}(.*)$/);\n        if (match) {\n          functionPart = match[1] + match[2]; // e.g., \"{ e }^{2x}\" -> \"e^{2x}\"\n        }\n      }\n\n      // Determine order (prefer from numerator, fallback to denominator, default to 1)\n      let order: number | EquationElement[] = 1;\n      if (orderFromNum) {\n        const parsedOrder = parseInt(orderFromNum);\n        if (!isNaN(parsedOrder)) {\n          order = parsedOrder;\n        } else {\n          order = this.parseLatexToEquation(orderFromNum);\n        }\n      } else if (orderFromDen) {\n        const parsedOrder = parseInt(orderFromDen);\n        if (!isNaN(parsedOrder)) {\n          order = parsedOrder;\n        } else {\n          order = this.parseLatexToEquation(orderFromDen);\n        }\n      }\n\n      return {\n        id: this.generateElementId(),\n        type: \"derivative\",\n        order: order,\n        displayMode: displayMode,\n        function: this.parseLatexToEquation(functionPart),\n        variable: this.parseLatexToEquation(variablePart.replace(/\\^{.+}$/, \"\")), // Remove any trailing exponent\n      };\n    }\n\n    return null; // Not a recognizable derivative pattern\n  }\n\n  private parseLongFormDerivative(\n    numeratorLatex: string,\n    denominatorLatex: string,\n    functionLatex: string,\n    displayMode: \"inline\" | \"display\"\n  ): EquationElement | null {\n    // Parse long form derivative: \\derivlfrac{d^n}{dx^n}{f} or \\derivldfrac{d^n}{dx^n}{f}\n    // Pattern: numerator = d^n, denominator = dx^n, separate function part\n\n    const numMatch = numeratorLatex.match(/^d(\\^{(.+)})?$/);\n    const denMatch = denominatorLatex.match(/^d(.+?)(\\^{(.+)})?$/);\n\n    if (numMatch && denMatch) {\n      const orderFromNum = numMatch[2]; // From d^{n}\n      const orderFromDen = denMatch[3]; // From x^{n}\n      const variablePart = denMatch[1] || \"\";\n\n      // Determine order (prefer from numerator, fallback to denominator, default to 1)\n      let order: number | EquationElement[] = 1;\n      if (orderFromNum) {\n        const parsedOrder = parseInt(orderFromNum);\n        if (!isNaN(parsedOrder)) {\n          order = parsedOrder;\n        } else {\n          order = this.parseLatexToEquation(orderFromNum);\n        }\n      } else if (orderFromDen) {\n        const parsedOrder = parseInt(orderFromDen);\n        if (!isNaN(parsedOrder)) {\n          order = parsedOrder;\n        } else {\n          order = this.parseLatexToEquation(orderFromDen);\n        }\n      }\n\n      return {\n        id: this.generateElementId(),\n        type: \"derivative\",\n        order: order,\n        displayMode: displayMode,\n        function: this.parseLatexToEquation(functionLatex),\n        variable: this.parseLatexToEquation(variablePart.replace(/\\^{.+}$/, \"\")), // Remove any trailing exponent\n        isLongForm: true,\n      };\n    }\n\n    return null; // Not a recognizable long form derivative pattern\n  }\n\n  // Track end index for formatting commands\n  private lastFormattingCommandEndIndex: number | null = null;\n  // Track end index for derivative commands\n  private lastDerivativeCommandEndIndex: number | null = null;\n  // Track end index for style wrapper\n  private lastStyleWrapperEndIndex: number | null = null;\n  // Track end index for accent commands\n  private lastAccentCommandEndIndex: number | null = null;\n\n  // Helper method to parse derivative commands\n  private tryParseDerivativeCommand(\n    latex: string,\n    index: number,\n    result: EquationElement[]\n  ): boolean {\n    for (const cmd of this.DERIVATIVE_COMMANDS) {\n      if (latex.substr(index, cmd.length) === cmd.command) {\n        let i = index + cmd.length;\n        const numerator = this.parseLatexGroup(latex, i);\n        i = numerator.endIndex;\n        const denominator = this.parseLatexGroup(latex, i);\n        i = denominator.endIndex;\n\n        if (cmd.isLongForm) {\n          // Long form has an additional function parameter\n          const functionPart = this.parseLatexGroup(latex, i);\n          i = functionPart.endIndex;\n\n          const derivativeInfo = this.parseLongFormDerivative(\n            numerator.content,\n            denominator.content,\n            functionPart.content,\n            cmd.displayMode\n          );\n          if (derivativeInfo) {\n            result.push(derivativeInfo);\n          } else {\n            // Fallback to regular fraction if parsing fails\n            result.push({\n              id: this.generateElementId(),\n              type: \"fraction\",\n              displayMode: cmd.displayMode,\n              numerator: this.parseLatexToEquation(numerator.content),\n              denominator: this.parseLatexToEquation(denominator.content),\n            });\n          }\n        } else {\n          // Standard form\n          const derivativeInfo = this.parseDerivativeFraction(\n            numerator.content,\n            denominator.content,\n            cmd.displayMode\n          );\n          if (derivativeInfo) {\n            result.push(derivativeInfo);\n          } else {\n            // Fallback to regular fraction if parsing fails\n            result.push({\n              id: this.generateElementId(),\n              type: \"fraction\",\n              displayMode: cmd.displayMode,\n              numerator: this.parseLatexToEquation(numerator.content),\n              denominator: this.parseLatexToEquation(denominator.content),\n            });\n          }\n        }\n\n        this.lastDerivativeCommandEndIndex = i;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Helper method to parse style wrapper commands ({\\displaystyle ...} and {\\textstyle ...})\n  private tryParseStyleWrapper(latex: string, index: number, result: EquationElement[]): boolean {\n    const styles = [\n      { pattern: \"{\\\\displaystyle \", length: 14, mode: \"display\" as const },\n      { pattern: \"{\\\\displaystyle\", length: 13, mode: \"display\" as const },\n      { pattern: \"{\\\\textstyle \", length: 12, mode: \"inline\" as const },\n      { pattern: \"{\\\\textstyle\", length: 11, mode: \"inline\" as const },\n    ];\n\n    for (const style of styles) {\n      if (latex.substr(index, style.length) === style.pattern) {\n        console.log(\"tryParseStyleWrapper found style:\", style.mode, \"at index:\", index, \"latex:\", latex.substr(index, 30));\n        const startIndex = index;\n        let i = index + style.length;\n\n        // Find the matching closing brace\n        let braceCount = 1;\n        let endPos = i;\n        while (endPos < latex.length && braceCount > 0) {\n          if (latex[endPos] === \"{\") braceCount++;\n          else if (latex[endPos] === \"}\") braceCount--;\n          endPos++;\n        }\n\n        // Skip whitespace\n        i = this.skipWhitespace(latex, i);\n\n        // Try to parse known commands with the appropriate style\n        let parsed = false;\n\n        // Check for \\dv command (only for displaystyle)\n        if (style.mode === \"display\" && latex.substr(i, 3) === \"\\\\dv\") {\n          console.log(\"tryParseStyleWrapper found \\\\dv command\");\n          i += 3;\n          const dvResult = this.parseDvCommand(latex, i, \"display\", true, false);\n          if (dvResult) {\n            result.push(dvResult.element);\n            i = dvResult.endIndex;\n            parsed = true;\n          }\n        }\n        // Check for \\pdv command (both display and inline)\n        else if (latex.substr(i, 4) === \"\\\\pdv\") {\n          console.log(\"tryParseStyleWrapper found \\\\pdv command, mode:\", style.mode);\n          i += 4;\n          const dvResult = this.parseDvCommand(latex, i, style.mode, true, true);\n          if (dvResult) {\n            result.push(dvResult.element);\n            i = dvResult.endIndex;\n            parsed = true;\n          }\n        }\n        // Check for integral commands\n        else if (this.isCustomIntegralCommand(latex, i)) {\n          const integralResult = this.parseCustomIntegral(latex, i);\n          if (integralResult) {\n            integralResult.element.displayMode = style.mode;\n            result.push(integralResult.element);\n            i = integralResult.endIndex;\n            parsed = true;\n          }\n        }\n        // Check for large operators\n        else if (this.isLargeOperator(latex, i)) {\n          const operatorInfo = this.parseLargeOperator(latex, i, style.mode === \"display\");\n          if (operatorInfo) {\n            result.push(operatorInfo.element);\n            i = operatorInfo.endIndex;\n            parsed = true;\n          }\n        }\n        // Check for fraction (only for textstyle)\n        else if (style.mode === \"inline\" && latex.substr(i, 5) === \"\\\\frac\") {\n          const fractionInfo = this.parseFraction(latex, i, true);\n          if (fractionInfo) {\n            result.push(fractionInfo.element);\n            i = fractionInfo.endIndex;\n            parsed = true;\n          }\n        }\n\n        if (parsed) {\n          // Skip the closing brace if present\n          if (i < latex.length && latex[i] === \"}\") i++;\n          this.lastStyleWrapperEndIndex = i;\n          return true;\n        } else {\n          // Fallback: parse the entire content normally\n          console.log(\"tryParseStyleWrapper fallback for style:\", style.mode);\n          const group = this.parseLatexGroup(latex, startIndex);\n          const content = group.content;\n          console.log(\"Fallback parsing content:\", content);\n\n          // Remove the style prefix if present\n          const prefix = style.pattern.substring(1); // Remove leading {\n          let parsedElements: EquationElement[] = [];\n          if (content.startsWith(prefix)) {\n            const cleanContent = content.substring(prefix.length);\n            parsedElements = this.parseLatexToEquation(cleanContent);\n          } else {\n            parsedElements = this.parseLatexToEquation(content);\n          }\n\n          // Apply the display mode to derivative and integral elements\n          for (const element of parsedElements) {\n            if (element.type === \"derivative\" || element.type === \"integral\") {\n              element.displayMode = style.mode;\n              console.log(\"Applied display mode\", style.mode, \"to\", element.type, \"element\");\n            }\n          }\n\n          result.push(...parsedElements);\n          this.lastStyleWrapperEndIndex = group.endIndex;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // Helper method to parse formatting commands\n  private tryParseFormattingCommand(\n    latex: string,\n    index: number,\n    result: EquationElement[]\n  ): boolean {\n    for (const cmd of this.FORMATTING_COMMANDS) {\n      if (latex.substr(index, cmd.length) === cmd.command) {\n        let i = index + cmd.length;\n        const group = this.parseLatexGroup(latex, i);\n        i = group.endIndex;\n        const formattedElements = this.parseLatexToEquation(group.content);\n        formattedElements.forEach((element) => {\n          if (element.type === \"text\") {\n            cmd.applyFormatting(element);\n          }\n        });\n        result.push(...formattedElements);\n        this.lastFormattingCommandEndIndex = i;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private tryParseAccentCommand(latex: string, index: number, result: EquationElement[]): boolean {\n    const accentCommands: {\n      command: string;\n      length: number;\n      type: string;\n      position: \"over\" | \"under\";\n    }[] = [\n      { command: \"\\\\hat\", length: 4, type: \"hat\", position: \"over\" },\n      { command: \"\\\\tilde\", length: 6, type: \"tilde\", position: \"over\" },\n      { command: \"\\\\bar\", length: 4, type: \"bar\", position: \"over\" },\n      { command: \"\\\\dot\", length: 4, type: \"dot\", position: \"over\" },\n      { command: \"\\\\ddot\", length: 5, type: \"ddot\", position: \"over\" },\n      { command: \"\\\\vec\", length: 4, type: \"vec\", position: \"over\" },\n      { command: \"\\\\widehat\", length: 8, type: \"widehat\", position: \"over\" },\n      { command: \"\\\\widetilde\", length: 10, type: \"widetilde\", position: \"over\" },\n      { command: \"\\\\overline\", length: 9, type: \"widebar\", position: \"over\" },\n      { command: \"\\\\overrightarrow\", length: 15, type: \"overrightarrow\", position: \"over\" },\n      { command: \"\\\\overleftarrow\", length: 14, type: \"overleftarrow\", position: \"over\" },\n      { command: \"\\\\overleftrightarrow\", length: 19, type: \"overleftrightarrow\", position: \"over\" },\n      { command: \"\\\\overbrace\", length: 10, type: \"overbrace\", position: \"over\" },\n      { command: \"\\\\underbrace\", length: 11, type: \"underbrace\", position: \"under\" },\n      { command: \"\\\\overparen\", length: 10, type: \"overparen\", position: \"over\" },\n      { command: \"\\\\underparen\", length: 11, type: \"underparen\", position: \"under\" },\n    ];\n\n    for (const accentCmd of accentCommands) {\n      if (latex.substr(index, accentCmd.length) === accentCmd.command) {\n        let i = index + accentCmd.length;\n        const group = this.parseLatexGroup(latex, i);\n        i = group.endIndex;\n        const baseContent = this.parseLatexToEquation(group.content);\n\n        let accentLabel: EquationElement[] = [];\n        let finalAccentType = accentCmd.type;\n\n        if (accentCmd.type === \"overbrace\" && i < latex.length && latex[i] === \"^\") {\n          // Check for ^{label} after overbrace\n          if (i + 1 < latex.length && latex[i + 1] === \"{\") {\n            const labelGroup = this.parseLatexGroup(latex, i + 1);\n            i = labelGroup.endIndex;\n            accentLabel = this.parseLatexToEquation(labelGroup.content);\n            finalAccentType = \"labeledoverbrace\";\n          }\n        } else if (accentCmd.type === \"underbrace\" && i < latex.length && latex[i] === \"_\") {\n          // Check for _{label} after underbrace\n          if (i + 1 < latex.length && latex[i + 1] === \"{\") {\n            const labelGroup = this.parseLatexGroup(latex, i + 1);\n            i = labelGroup.endIndex;\n            accentLabel = this.parseLatexToEquation(labelGroup.content);\n            finalAccentType = \"labeledunderbrace\";\n          }\n        }\n\n        const accentElement: EquationElement = {\n          id: this.generateElementId(),\n          type: \"accent\",\n          accentType: finalAccentType as any,\n          accentPosition: accentCmd.position,\n          accentBase: baseContent,\n          accentLabel:\n            accentLabel.length > 0\n              ? accentLabel\n              : finalAccentType.includes(\"labeled\")\n                ? []\n                : undefined,\n        };\n\n        result.push(accentElement);\n        this.lastAccentCommandEndIndex = i;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Helper to check and extract content from style wrappers\n  private extractFromStyleWrapper(\n    latex: string,\n    index: number\n  ): {\n    content: string;\n    endIndex: number;\n    hasWrapper: boolean;\n    styleType?: \"display\" | \"inline\";\n  } | null {\n    // Case 1: Check for {\\displaystyle ...} or {\\textstyle ...} (with braces)\n    if (\n      latex.substr(index, 14) === \"{\\\\displaystyle\" ||\n      latex.substr(index, 11) === \"{\\\\textstyle\"\n    ) {\n      const isDisplayStyle = latex.substr(index, 14) === \"{\\\\displaystyle\";\n      const styleLength = isDisplayStyle ? 14 : 11;\n\n      // Find the matching closing brace\n      let braceCount = 1;\n      let contentStart = index + styleLength;\n\n      // Skip whitespace after style command\n      while (contentStart < latex.length && latex[contentStart] === \" \") {\n        contentStart++;\n      }\n\n      // Find the end of the wrapper\n      let contentEnd = contentStart;\n      for (let k = index + 1; k < latex.length; k++) {\n        if (latex[k] === \"{\") {\n          braceCount++;\n        } else if (latex[k] === \"}\") {\n          braceCount--;\n          if (braceCount === 0) {\n            contentEnd = k;\n            break;\n          }\n        }\n      }\n\n      const extractedContent = latex.substring(contentStart, contentEnd);\n      return {\n        content: extractedContent,\n        endIndex: contentEnd + 1,\n        hasWrapper: true,\n        styleType: isDisplayStyle ? \"display\" : \"inline\",\n      };\n    }\n\n    // Case 2: Check for \\displaystyle or \\textstyle at the beginning (without outer braces)\n    const trimmed = latex.trim();\n    if (trimmed.startsWith(\"\\\\displaystyle \")) {\n      const content = trimmed.substring(\"\\\\displaystyle \".length);\n      return {\n        content: content,\n        endIndex: index + latex.length,\n        hasWrapper: true,\n        styleType: \"display\",\n      };\n    }\n\n    if (trimmed.startsWith(\"\\\\textstyle \")) {\n      const content = trimmed.substring(\"\\\\textstyle \".length);\n      return {\n        content: content,\n        endIndex: index + latex.length,\n        hasWrapper: true,\n        styleType: \"inline\",\n      };\n    }\n\n    return null;\n  }\n\n  // Helper to apply display/inline mode to elements that support it\n  private applyStyleModeToElements(\n    elements: EquationElement[],\n    styleType: \"display\" | \"inline\"\n  ): void {\n    elements.forEach((element) => {\n      if (element.type === \"integral\" || element.type === \"large-operator\" || element.type === \"derivative\" || element.type === \"fraction\") {\n        element.displayMode = styleType;\n      }\n      // Recursively apply to nested elements\n      this.applyStyleModeToElementsRecursively(element, styleType);\n    });\n  }\n\n  // Recursively apply style mode to nested elements\n  private applyStyleModeToElementsRecursively(\n    element: EquationElement,\n    styleType: \"display\" | \"inline\"\n  ): void {\n    // Apply to arrays of elements that exist in EquationElement interface\n    if (element.content) this.applyStyleModeToElements(element.content, styleType);\n    if (element.numerator) this.applyStyleModeToElements(element.numerator, styleType);\n    if (element.denominator) this.applyStyleModeToElements(element.denominator, styleType);\n    if (element.operand) this.applyStyleModeToElements(element.operand, styleType);\n    if (element.lowerLimit) this.applyStyleModeToElements(element.lowerLimit, styleType);\n    if (element.upperLimit) this.applyStyleModeToElements(element.upperLimit, styleType);\n    if (element.integrand) this.applyStyleModeToElements(element.integrand, styleType);\n    if (element.differentialVariable) this.applyStyleModeToElements(element.differentialVariable, styleType);\n    if (element.function) this.applyStyleModeToElements(element.function, styleType);\n    if (element.variable) this.applyStyleModeToElements(element.variable, styleType);\n    if (element.base) this.applyStyleModeToElements(element.base, styleType);\n    if (element.subscript) this.applyStyleModeToElements(element.subscript, styleType);\n    if (element.superscript) this.applyStyleModeToElements(element.superscript, styleType);\n    if (element.radicand) this.applyStyleModeToElements(element.radicand, styleType);\n    if (element.index) this.applyStyleModeToElements(element.index, styleType);\n    if (element.functionArgument) this.applyStyleModeToElements(element.functionArgument, styleType);\n    if (element.functionBase) this.applyStyleModeToElements(element.functionBase, styleType);\n    if (element.functionConstraint) this.applyStyleModeToElements(element.functionConstraint, styleType);\n    if (element.functionName) this.applyStyleModeToElements(element.functionName, styleType);\n    if (element.accentBase) this.applyStyleModeToElements(element.accentBase, styleType);\n    if (element.accentLabel) this.applyStyleModeToElements(element.accentLabel, styleType);\n    // Handle matrix cells\n    if (element.cells) {\n      Object.values(element.cells).forEach(cellContent => {\n        this.applyStyleModeToElements(cellContent, styleType);\n      });\n    }\n  }\n\n\n  private isBuiltinFunctionCommand(latex: string, index: number): boolean {\n    for (const cmd of BUILTIN_FUNCTION_COMMANDS) {\n      if (latex.substr(index, cmd.length) === cmd) {\n        // Make sure next character is not a letter (to avoid \\sinh matching \\sin)\n        const nextChar = latex[index + cmd.length];\n        if (!nextChar || !/[a-zA-Z]/.test(nextChar)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  private parseBuiltinFunctionCommand(\n    latex: string,\n    startIndex: number\n  ): { element: EquationElement; endIndex: number } | null {\n    let i = startIndex;\n    \n    // Find which command this is\n    let functionType = \"\";\n    for (const cmd of BUILTIN_FUNCTION_COMMANDS) {\n      if (latex.substr(i, cmd.length) === cmd) {\n        const nextChar = latex[i + cmd.length];\n        if (!nextChar || !/[a-zA-Z]/.test(nextChar)) {\n          functionType = cmd.substring(1); // Remove the backslash\n          i += cmd.length;\n          break;\n        }\n      }\n    }\n    \n    if (!functionType) return null;\n    \n    // Skip whitespace\n    while (i < latex.length && latex[i] === \" \") i++;\n    \n    // Check for subscript (for log_{base} or limit functions)\n    let hasSubscript = false;\n    let subscriptElements: EquationElement[] = [];\n    \n    if (i < latex.length && latex[i] === \"_\") {\n      i++; // Skip \"_\"\n      const subscriptGroup = this.parseLatexGroup(latex, i);\n      if (subscriptGroup) {\n        i = subscriptGroup.endIndex;\n        subscriptElements = this.parseLatexToEquation(subscriptGroup.content);\n        hasSubscript = true;\n      }\n    }\n    \n    // Skip more whitespace after subscript\n    while (i < latex.length && latex[i] === \" \") i++;\n    \n    // Parse argument - everything after the function until we hit certain delimiters\n    let argumentElements: EquationElement[] = [];\n    \n    if (i < latex.length) {\n      // For functions, parse the next token/group as the argument\n      let argEnd = i;\n      \n      if (latex[i] === \"{\") {\n        // Argument is in braces\n        const argGroup = this.parseLatexGroup(latex, i);\n        if (argGroup) {\n          argumentElements = this.parseLatexToEquation(argGroup.content);\n          argEnd = argGroup.endIndex;\n        }\n      } else {\n        // Parse next token (single character, command, or until space/operator)\n        if (latex[i] === \"\\\\\") {\n          // Next token is a command\n          argEnd = i + 1;\n          while (argEnd < latex.length && /[a-zA-Z]/.test(latex[argEnd])) {\n            argEnd++;\n          }\n        } else {\n          // Single character or number\n          argEnd = i + 1;\n        }\n        \n        if (argEnd > i) {\n          argumentElements = this.parseLatexToEquation(latex.substring(i, argEnd));\n        }\n      }\n      \n      i = argEnd;\n    }\n    \n    // Create the appropriate function element\n    let element: EquationElement;\n    \n    if (hasSubscript && functionType === \"log\") {\n      // log with base becomes logn\n      element = {\n        id: this.generateElementId(),\n        type: \"function\",\n        functionType: \"logn\",\n        functionArgument: argumentElements,\n        functionBase: subscriptElements\n      };\n    } else if (hasSubscript && [\"max\", \"min\", \"lim\"].includes(functionType)) {\n      // limit functions\n      element = {\n        id: this.generateElementId(),\n        type: \"function\",\n        functionType: functionType,\n        functionArgument: argumentElements,\n        functionConstraint: subscriptElements\n      };\n    } else {\n      // simple functions\n      element = {\n        id: this.generateElementId(),\n        type: \"function\",\n        functionType: functionType,\n        functionArgument: argumentElements\n      };\n    }\n    \n    return {\n      element: element,\n      endIndex: i\n    };\n  }\n\n  private parseOperatorName(\n    latex: string,\n    startIndex: number\n  ): { element: EquationElement; endIndex: number } | null {\n    let i = startIndex;\n\n    // Check for \\operatorname or \\operatorname*\n    const isLimitOperator = latex.substr(i, 14) === \"\\\\operatorname*\";\n    const commandLength = isLimitOperator ? 14 : 13;\n\n    if (\n      latex.substr(i, commandLength) !== (isLimitOperator ? \"\\\\operatorname*\" : \"\\\\operatorname\")\n    ) {\n      return null;\n    }\n\n    i += commandLength;\n\n    // Parse the operator name\n    const nameGroup = this.parseLatexGroup(latex, i);\n    if (!nameGroup) return null;\n    i = nameGroup.endIndex;\n\n    const nameElements = this.parseLatexToEquation(nameGroup.content);\n    \n    // Set italic: false for all name elements since \\operatorname creates upright text\n    nameElements.forEach(element => {\n      if (element.type === \"text\") {\n        element.italic = false;\n      }\n    });\n\n    // Check for subscript (constraint for limit operator, subscript for regular function)\n    let subscriptElements: EquationElement[] | undefined;\n    let hasSubscript = false;\n    if (i < latex.length && latex[i] === \"_\") {\n      i++; // Skip \"_\"\n      const subscriptGroup = this.parseLatexGroup(latex, i);\n      if (subscriptGroup) {\n        i = subscriptGroup.endIndex;\n        subscriptElements = this.parseLatexToEquation(subscriptGroup.content);\n        hasSubscript = true;\n      }\n    }\n\n    // Check for argument - either in parentheses for regular functions or space-separated for limit operators\n    let argumentElements: EquationElement[] = [];\n\n    if (isLimitOperator && hasSubscript) {\n      // For \\operatorname*{name}_{constraint} argument, the argument follows after a space\n      while (i < latex.length && latex[i] === \" \") i++; // Skip spaces\n\n      // Parse the rest as the argument (could be a group or expression)\n      if (i < latex.length && latex[i] === \"{\") {\n        const argGroup = this.parseLatexGroup(latex, i);\n        if (argGroup) {\n          i = argGroup.endIndex;\n          argumentElements = this.parseLatexToEquation(argGroup.content);\n        }\n      } else {\n        // Parse until next space or command for limit operators\n        let argStart = i;\n        while (\n          i < latex.length &&\n          latex[i] !== \" \" &&\n          latex[i] !== \"\\\\\" &&\n          latex[i] !== \"{\" &&\n          latex[i] !== \"}\"\n        ) {\n          i++;\n        }\n        if (i > argStart) {\n          argumentElements = this.parseLatexToEquation(latex.substring(argStart, i));\n        }\n      }\n\n      // Create user-defined limit function\n      const element: EquationElement = {\n        id: this.generateElementId(),\n        type: \"function\",\n        functionType: \"functionlim\",\n        functionName: nameElements,\n        functionConstraint: subscriptElements,\n        functionArgument: argumentElements,\n      };\n\n      return { element, endIndex: i };\n    } else {\n      // Regular function - parse argument after space (no parentheses)\n      while (i < latex.length && latex[i] === \" \") i++; // Skip spaces\n\n      // Parse the argument (could be a group or expression)\n      if (i < latex.length && latex[i] === \"{\") {\n        const argGroup = this.parseLatexGroup(latex, i);\n        if (argGroup) {\n          i = argGroup.endIndex;\n          argumentElements = this.parseLatexToEquation(argGroup.content);\n        }\n      } else {\n        // Parse until next space, command, or delimiter\n        let argStart = i;\n        while (\n          i < latex.length &&\n          latex[i] !== \" \" &&\n          latex[i] !== \"\\\\\" &&\n          latex[i] !== \"{\" &&\n          latex[i] !== \"}\" &&\n          latex[i] !== \"$\"\n        ) {\n          i++;\n        }\n        if (i > argStart) {\n          argumentElements = this.parseLatexToEquation(latex.substring(argStart, i));\n        }\n      }\n\n      // Create appropriate user-defined function\n      const functionType = hasSubscript ? \"functionsub\" : \"function\";\n      const element: EquationElement = {\n        id: this.generateElementId(),\n        type: \"function\",\n        functionType: functionType,\n        functionName: nameElements,\n        functionArgument: argumentElements,\n        functionBase: hasSubscript ? subscriptElements : undefined,\n        functionConstraint: undefined,\n      };\n\n      return { element, endIndex: i };\n    }\n  }\n\n\n  private parseMatrixStackCasesEnvironment(\n    latex: string,\n    startIndex: number\n  ): { element: EquationElement; endIndex: number } | null {\n    // Check for matrix, stack, and cases environment patterns\n    const environmentTypes: Array<{\n      pattern: string;\n      end: string;\n      type: \"matrix\" | \"stack\" | \"cases\";\n      subtype: string;\n    }> = [\n      // Matrix environments\n      {\n        pattern: \"\\\\begin{pmatrix}\",\n        end: \"\\\\end{pmatrix}\",\n        type: \"matrix\",\n        subtype: \"parentheses\",\n      },\n      { pattern: \"\\\\begin{bmatrix}\", end: \"\\\\end{bmatrix}\", type: \"matrix\", subtype: \"brackets\" },\n      { pattern: \"\\\\begin{Bmatrix}\", end: \"\\\\end{Bmatrix}\", type: \"matrix\", subtype: \"braces\" },\n      { pattern: \"\\\\begin{vmatrix}\", end: \"\\\\end{vmatrix}\", type: \"matrix\", subtype: \"bars\" },\n      {\n        pattern: \"\\\\begin{Vmatrix}\",\n        end: \"\\\\end{Vmatrix}\",\n        type: \"matrix\",\n        subtype: \"double-bars\",\n      },\n      { pattern: \"\\\\begin{matrix}\", end: \"\\\\end{matrix}\", type: \"matrix\", subtype: \"none\" },\n      // Stack environments (array)\n      { pattern: \"\\\\begin{array}\", end: \"\\\\end{array}\", type: \"stack\", subtype: \"plain\" },\n      // Cases environments\n      { pattern: \"\\\\begin{cases}\", end: \"\\\\end{cases}\", type: \"cases\", subtype: \"cases\" },\n    ];\n\n    let environmentType: \"matrix\" | \"stack\" | \"cases\" | null = null;\n    let environmentSubtype: string | null = null;\n    let endPattern: string | null = null;\n    let currentIndex = startIndex;\n\n    // Find which environment type this is\n    for (const type of environmentTypes) {\n      if (latex.substr(startIndex, type.pattern.length) === type.pattern) {\n        environmentType = type.type;\n        environmentSubtype = type.subtype;\n        endPattern = type.end;\n        currentIndex = startIndex + type.pattern.length;\n        break;\n      }\n    }\n\n    if (!environmentType || !endPattern) {\n      return null; // Not a supported environment\n    }\n\n    // Handle array environment column specification\n    if (environmentType === \"stack\" && latex.substr(currentIndex, 1) === \"{\") {\n      // Skip array column specification like {ccc}\n      const colSpecEnd = latex.indexOf(\"}\", currentIndex);\n      if (colSpecEnd !== -1) {\n        currentIndex = colSpecEnd + 1;\n      }\n    }\n\n    // Find the end of the environment\n    const endIndex = latex.indexOf(endPattern, currentIndex);\n    if (endIndex === -1) {\n      return null; // Malformed environment - no closing tag\n    }\n\n    // Extract content between \\begin{} and \\end{}\n    const environmentContent = latex.substring(currentIndex, endIndex).trim();\n\n    // Parse content into rows and cells\n    const rows = environmentContent\n      .split(\"\\\\\\\\\")\n      .map((row) => row.trim())\n      .filter((row) => row.length > 0);\n    const cellData: { [key: string]: EquationElement[] } = {};\n\n    rows.forEach((row, rowIndex) => {\n      const cells = row.split(\"&\").map((cell) => cell.trim());\n      cells.forEach((cell, colIndex) => {\n        const cellKey = `cell_${rowIndex}_${colIndex}`;\n        cellData[cellKey] = this.parseLatexToEquation(cell);\n      });\n    });\n\n    // Determine dimensions\n    const numRows = rows.length;\n    const numCols = rows.length > 0 ? rows[0].split(\"&\").length : 1;\n\n    // Create appropriate element based on environment type\n    let resultElement: EquationElement;\n\n    if (environmentType === \"matrix\") {\n      resultElement = {\n        id: this.generateElementId(),\n        type: \"matrix\",\n        matrixType: environmentSubtype as\n          | \"parentheses\"\n          | \"brackets\"\n          | \"braces\"\n          | \"bars\"\n          | \"double-bars\"\n          | \"none\",\n        rows: numRows,\n        cols: numCols,\n        cells: cellData,\n      };\n    } else if (environmentType === \"stack\") {\n      resultElement = {\n        id: this.generateElementId(),\n        type: \"stack\",\n        stackType: \"plain\",\n        rows: numRows,\n        cols: numCols,\n        cells: cellData,\n      };\n    } else {\n      // environmentType === \"cases\"\n      resultElement = {\n        id: this.generateElementId(),\n        type: \"cases\",\n        casesType: \"cases\",\n        rows: numRows,\n        cols: numCols,\n        cells: cellData,\n      };\n    }\n\n    return {\n      element: resultElement,\n      endIndex: endIndex + endPattern.length,\n    };\n  }\n}\n","import { EquationElement, EquationBuilder } from \"./equation-builder\";\nimport { LatexConverter } from \"./latex-converter\";\nimport { hasMixedBrackets, getStructureNavigationFields, isNavigableStructure } from \"./centralized-config\";\n\nexport interface ContextInfo {\n  array: EquationElement[];\n  parent: EquationElement | null;\n}\n\nexport interface SelectionState {\n  startPosition: number;\n  endPosition: number;\n  contextPath: string;\n  isActive: boolean;\n}\n\nexport class ContextManager {\n  private activeContextPath: string | null = null;\n  private cursorPosition = 0;\n  private equationBuilder: EquationBuilder;\n  private latexConverter: LatexConverter;\n  private selection: SelectionState = {\n    startPosition: 0,\n    endPosition: 0,\n    contextPath: \"\",\n    isActive: false,\n  };\n\n  constructor(equationBuilder: EquationBuilder, latexConverter: LatexConverter) {\n    this.equationBuilder = equationBuilder;\n    this.latexConverter = latexConverter;\n  }\n\n  getActiveContextPath(): string | null {\n    return this.activeContextPath;\n  }\n\n  setActiveContextPath(path: string | null): void {\n    this.activeContextPath = path;\n  }\n\n  getCursorPosition(): number {\n    return this.cursorPosition;\n  }\n\n  setCursorPosition(position: number): void {\n    this.cursorPosition = position;\n  }\n\n  isActive(): boolean {\n    return this.activeContextPath !== null;\n  }\n\n  exitEditingMode(): void {\n    this.activeContextPath = null;\n  }\n\n  enterRootContext(): void {\n    this.activeContextPath = \"root\";\n    this.cursorPosition = this.equationBuilder.getEquation().length;\n  }\n\n  enterContextPath(path: string, position: number = 0): void {\n    this.activeContextPath = path;\n    this.cursorPosition = position;\n  }\n\n  getContext(path: string): ContextInfo | null {\n    if (path === \"root\") {\n      return { array: this.equationBuilder.getEquation(), parent: null };\n    }\n    const parts = path.split(\"/\");\n    const containerName = parts.pop()!;\n    const elementId = parts.pop()!;\n\n    const element = this.equationBuilder.findElementById(\n      this.equationBuilder.getEquation(),\n      elementId\n    );\n    if (!element) return null;\n\n    // Handle derivative element containers\n    if (element.type === \"derivative\") {\n      if (containerName === \"function\") {\n        return { array: element.function || [], parent: element };\n      } else if (containerName === \"variable\") {\n        return { array: element.variable || [], parent: element };\n      } else if (containerName === \"order\" && Array.isArray(element.order)) {\n        return { array: element.order, parent: element };\n      }\n      return null;\n    }\n\n    // Handle integral element containers\n    if (element.type === \"integral\") {\n      if (containerName === \"integrand\") {\n        return { array: element.integrand || [], parent: element };\n      } else if (containerName === \"differentialVariable\") {\n        return { array: element.differentialVariable || [], parent: element };\n      } else if (containerName === \"lowerLimit\") {\n        return { array: element.lowerLimit || [], parent: element };\n      } else if (containerName === \"upperLimit\") {\n        return { array: element.upperLimit || [], parent: element };\n      }\n      return null;\n    }\n\n    // Handle matrix, stack, and cases element containers\n    if (element.type === \"matrix\" || element.type === \"stack\" || element.type === \"cases\") {\n      // Parse cell container name: \"cell_row_col\"\n      const cellMatch = containerName.match(/^cell_(\\d+)_(\\d+)$/);\n      if (cellMatch && element.cells) {\n        const cellKey = containerName; // Use the full container name as the key (e.g., \"cell_0_0\")\n        if (element.cells[cellKey]) {\n          return { array: element.cells[cellKey], parent: element };\n        }\n      }\n      return null;\n    }\n\n    // Handle accent element containers\n    if (element.type === \"accent\") {\n      if (containerName === \"accentBase\") {\n        return { array: element.accentBase || [], parent: element };\n      } else if (containerName === \"accentLabel\") {\n        return { array: element.accentLabel || [], parent: element };\n      }\n      return null;\n    }\n\n    // Handle function element containers\n    if (element.type === \"function\") {\n      if (containerName === \"functionArgument\") {\n        return { array: element.functionArgument || [], parent: element };\n      } else if (containerName === \"functionBase\") {\n        return { array: element.functionBase || [], parent: element };\n      } else if (containerName === \"functionConstraint\") {\n        return { array: element.functionConstraint || [], parent: element };\n      } else if (containerName === \"functionName\") {\n        return { array: element.functionName || [], parent: element };\n      }\n      return null;\n    }\n\n    // Handle other element types\n    const array = element[containerName as keyof EquationElement] as EquationElement[] | undefined;\n    return array ? { array, parent: element } : null;\n  }\n\n  getCurrentContext(): ContextInfo | null {\n    if (!this.activeContextPath) return null;\n    return this.getContext(this.activeContextPath);\n  }\n\n  moveCursor(direction: number): boolean {\n    if (!this.activeContextPath) return false;\n    const context = this.getContext(this.activeContextPath);\n    if (!context) return false;\n\n    const newPosition = this.cursorPosition + direction;\n    if (newPosition >= 0 && newPosition <= context.array.length) {\n      this.cursorPosition = newPosition;\n      return true;\n    } else if (this.activeContextPath !== \"root\") {\n      // Check if we're in a matrix cell and can navigate horizontally\n      if (this.navigateMatrixHorizontal(direction)) {\n        return true;\n      }\n      this.navigateOutOfContext(direction === 1 ? \"forward\" : \"backward\");\n      return true;\n    }\n    return false;\n  }\n\n  // Simple Tab navigation through structure fields\n  navigateTab(): void {\n    if (!this.activeContextPath || this.activeContextPath === \"root\") return;\n\n    const parts = this.activeContextPath.split(\"/\");\n    const currentPart = parts.pop()!;\n    const elementId = parts[parts.length - 1];\n    const parentPath = parts.slice(0, -1).join(\"/\");\n\n    const context = this.getContext(this.activeContextPath);\n    if (!context || !context.parent) return;\n\n    // Get all available fields for this structure type using centralized config\n    const fields = getStructureNavigationFields(context.parent);\n    const currentIndex = fields.indexOf(currentPart);\n    \n    if (currentIndex === -1) {\n      // Unknown field, exit structure forward\n      this.navigateOutOfContext(\"forward\");\n      return;\n    }\n\n    // Wrap around to beginning when reaching the end\n    const nextIndex = (currentIndex + 1) % fields.length;\n\n    // Navigate to the next field (with wraparound)\n    this.activeContextPath = `${parentPath}/${elementId}/${fields[nextIndex]}`;\n    this.cursorPosition = 0;\n  }\n\n  // Simple method to exit current structure\n  exitStructure(direction: \"forward\" | \"backward\"): void {\n    this.navigateOutOfContext(direction);\n  }\n\n  // Enter adjacent structure when cursor is at root level\n  enterAdjacentStructure(direction: \"left\" | \"right\"): void {\n    if (!this.activeContextPath || this.activeContextPath !== \"root\") return;\n\n    const context = this.getContext(this.activeContextPath);\n    if (!context) return;\n\n    const targetIndex = direction === \"left\" ? this.cursorPosition - 1 : this.cursorPosition;\n    \n    // Check if there's a structure at the target position\n    if (targetIndex < 0 || targetIndex >= context.array.length) return;\n    \n    const targetElement = context.array[targetIndex];\n    \n    // Only enter if it's a navigable structure\n    if (isNavigableStructure(targetElement.type)) {\n      const fields = getStructureNavigationFields(targetElement);\n      if (fields.length === 0) return;\n\n      // Enter the first field for right direction, last field for left direction\n      const fieldIndex = direction === \"right\" ? 0 : fields.length - 1;\n      const fieldName = fields[fieldIndex];\n      \n      this.activeContextPath = `root/${targetElement.id}/${fieldName}`;\n      this.cursorPosition = 0;\n    }\n  }\n\n  navigateUpDown(key: \"ArrowUp\" | \"ArrowDown\" | \"Tab\"): void {\n    const direction = key === \"ArrowUp\" ? \"ArrowUp\" : \"ArrowDown\";\n\n    if (!this.activeContextPath || this.activeContextPath === \"root\") return;\n\n    const parts = this.activeContextPath.split(\"/\");\n    const currentPart = parts.pop()!;\n    const elementId = parts[parts.length - 1];\n    const parentPath = parts.slice(0, -1).join(\"/\");\n\n    const context = this.getContext(this.activeContextPath);\n    if (!context || !context.parent) return;\n    const parentElement = context.parent;\n\n    if (parentElement.type === \"fraction\") {\n      if (direction === \"ArrowDown\" && currentPart === \"numerator\") {\n        this.activeContextPath = `${parentPath}/${elementId}/denominator`;\n        this.cursorPosition = 0;\n      } else if (direction === \"ArrowUp\" && currentPart === \"denominator\") {\n        this.activeContextPath = `${parentPath}/${elementId}/numerator`;\n        this.cursorPosition = 0;\n      } else {\n        this.navigateOutOfContext(direction === \"ArrowDown\" ? \"forward\" : \"backward\");\n      }\n    } else if (parentElement.type === \"integral\") {\n      // Navigation for integral elements\n      if (direction === \"ArrowDown\") {\n        if (\"isDefinite\" in parentElement && parentElement.isDefinite && currentPart === \"upperLimit\") {\n          this.activeContextPath = `${parentPath}/${elementId}/lowerLimit`;\n          this.cursorPosition = 0;\n        } else if (\"isDefinite\" in parentElement && parentElement.isDefinite && currentPart === \"lowerLimit\") {\n          this.activeContextPath = `${parentPath}/${elementId}/integrand`;\n          this.cursorPosition = 0;\n        } else if (currentPart === \"integrand\") {\n          this.activeContextPath = `${parentPath}/${elementId}/differentialVariable`;\n          this.cursorPosition = 0;\n        } else {\n          this.navigateOutOfContext(\"forward\");\n        }\n      } else if (direction === \"ArrowUp\") {\n        if (currentPart === \"differentialVariable\") {\n          this.activeContextPath = `${parentPath}/${elementId}/integrand`;\n          this.cursorPosition = 0;\n        } else if (currentPart === \"integrand\" && \"isDefinite\" in parentElement && parentElement.isDefinite) {\n          this.activeContextPath = `${parentPath}/${elementId}/lowerLimit`;\n          this.cursorPosition = 0;\n        } else if (\"isDefinite\" in parentElement && parentElement.isDefinite && currentPart === \"lowerLimit\") {\n          this.activeContextPath = `${parentPath}/${elementId}/upperLimit`;\n          this.cursorPosition = 0;\n        } else {\n          this.navigateOutOfContext(\"backward\");\n        }\n      } else {\n        this.navigateOutOfContext(direction === \"ArrowDown\" ? \"forward\" : \"backward\");\n      }\n    } else if (parentElement.type === \"derivative\") {\n      if (direction === \"ArrowDown\") {\n        if (currentPart === \"function\") {\n          this.activeContextPath = `${parentPath}/${elementId}/variable`;\n          this.cursorPosition = 0;\n        } else if (currentPart === \"order\") {\n          this.activeContextPath = `${parentPath}/${elementId}/function`;\n          this.cursorPosition = 0;\n        } else {\n          this.navigateOutOfContext(\"forward\");\n        }\n      } else if (direction === \"ArrowUp\") {\n        if (currentPart === \"variable\") {\n          this.activeContextPath = `${parentPath}/${elementId}/function`;\n          this.cursorPosition = 0;\n        } else if (currentPart === \"function\") {\n          if (Array.isArray(parentElement.order)) {\n            this.activeContextPath = `${parentPath}/${elementId}/order`;\n            this.cursorPosition = 0;\n          } else {\n            this.navigateOutOfContext(\"backward\");\n          }\n        } else {\n          this.navigateOutOfContext(\"backward\");\n        }\n      } else {\n        this.navigateOutOfContext(direction === \"ArrowDown\" ? \"forward\" : \"backward\");\n      }\n    } else if (parentElement.type === \"script\") {\n      if (direction === \"ArrowDown\") {\n        if (currentPart === \"base\" && parentElement.superscript) {\n          this.activeContextPath = `${parentPath}/${elementId}/superscript`;\n          this.cursorPosition = 0;\n        } else if (currentPart === \"superscript\" && parentElement.subscript) {\n          this.activeContextPath = `${parentPath}/${elementId}/subscript`;\n          this.cursorPosition = 0;\n        } else {\n          this.navigateOutOfContext(\"forward\");\n        }\n      } else if (direction === \"ArrowUp\") {\n        if (currentPart === \"subscript\" && parentElement.superscript) {\n          this.activeContextPath = `${parentPath}/${elementId}/superscript`;\n          this.cursorPosition = 0;\n        } else if (currentPart === \"superscript\" && parentElement.base) {\n          this.activeContextPath = `${parentPath}/${elementId}/base`;\n          this.cursorPosition = parentElement.base.length;\n        } else {\n          this.navigateOutOfContext(\"backward\");\n        }\n      }\n    } else if (parentElement.type === \"large-operator\") {\n      if (direction === \"ArrowDown\") {\n        if (currentPart === \"lowerLimit\" && parentElement.upperLimit) {\n          this.activeContextPath = `${parentPath}/${elementId}/upperLimit`;\n          this.cursorPosition = 0;\n        } else if (currentPart === \"upperLimit\" && parentElement.operand) {\n          this.activeContextPath = `${parentPath}/${elementId}/operand`;\n          this.cursorPosition = 0;\n        } else {\n          this.navigateOutOfContext(\"forward\");\n        }\n      } else if (direction === \"ArrowUp\") {\n        if (currentPart === \"operand\" && parentElement.upperLimit) {\n          this.activeContextPath = `${parentPath}/${elementId}/upperLimit`;\n          this.cursorPosition = 0;\n        } else if (currentPart === \"upperLimit\" && parentElement.lowerLimit) {\n          this.activeContextPath = `${parentPath}/${elementId}/lowerLimit`;\n          this.cursorPosition = parentElement.lowerLimit.length;\n        } else {\n          this.navigateOutOfContext(\"backward\");\n        }\n      }\n    } else if (\n      parentElement.type === \"matrix\" ||\n      parentElement.type === \"stack\" ||\n      parentElement.type === \"cases\"\n    ) {\n      // Handle matrix, stack, and cases cell navigation\n      const cellMatch = currentPart.match(/^cell_(\\d+)_(\\d+)$/);\n      if (cellMatch && parentElement.rows && parentElement.cols) {\n        const currentRow = parseInt(cellMatch[1]);\n        const currentCol = parseInt(cellMatch[2]);\n\n        if (direction === \"ArrowDown\") {\n          // Move to next row, same column\n          if (currentRow < parentElement.rows - 1) {\n            this.activeContextPath = `${parentPath}/${elementId}/cell_${currentRow + 1}_${currentCol}`;\n            this.cursorPosition = 0;\n          } else {\n            this.navigateOutOfContext(\"forward\");\n          }\n        } else if (direction === \"ArrowUp\") {\n          // Move to previous row, same column\n          if (currentRow > 0) {\n            this.activeContextPath = `${parentPath}/${elementId}/cell_${currentRow - 1}_${currentCol}`;\n            this.cursorPosition = 0;\n          } else {\n            this.navigateOutOfContext(\"backward\");\n          }\n        }\n      }\n    } else if (parentElement.type === \"function\") {\n      // Navigation for function elements\n      const isUserDefinedFunction = [\"function\", \"functionsub\", \"functionlim\"].includes(\n        parentElement.functionType || \"\"\n      );\n\n      if (direction === \"ArrowDown\") {\n        if (isUserDefinedFunction && currentPart === \"functionName\") {\n          // Navigate from function name to next available field\n          if (parentElement.functionConstraint) {\n            this.activeContextPath = `${parentPath}/${elementId}/functionConstraint`;\n            this.cursorPosition = 0;\n          } else if (parentElement.functionBase) {\n            this.activeContextPath = `${parentPath}/${elementId}/functionBase`;\n            this.cursorPosition = 0;\n          } else {\n            this.activeContextPath = `${parentPath}/${elementId}/functionArgument`;\n            this.cursorPosition = 0;\n          }\n        } else if (currentPart === \"functionConstraint\" && parentElement.functionBase) {\n          this.activeContextPath = `${parentPath}/${elementId}/functionBase`;\n          this.cursorPosition = 0;\n        } else if (\n          (currentPart === \"functionConstraint\" && !parentElement.functionBase) ||\n          currentPart === \"functionBase\"\n        ) {\n          this.activeContextPath = `${parentPath}/${elementId}/functionArgument`;\n          this.cursorPosition = 0;\n        } else {\n          this.navigateOutOfContext(\"forward\");\n        }\n      } else if (direction === \"ArrowUp\") {\n        if (currentPart === \"functionArgument\" && parentElement.functionBase) {\n          this.activeContextPath = `${parentPath}/${elementId}/functionBase`;\n          this.cursorPosition = 0;\n        } else if (\n          currentPart === \"functionArgument\" &&\n          !parentElement.functionBase &&\n          parentElement.functionConstraint\n        ) {\n          this.activeContextPath = `${parentPath}/${elementId}/functionConstraint`;\n          this.cursorPosition = 0;\n        } else if (\n          currentPart === \"functionArgument\" &&\n          !parentElement.functionBase &&\n          !parentElement.functionConstraint &&\n          isUserDefinedFunction\n        ) {\n          this.activeContextPath = `${parentPath}/${elementId}/functionName`;\n          this.cursorPosition = 0;\n        } else if (currentPart === \"functionBase\" && parentElement.functionConstraint) {\n          this.activeContextPath = `${parentPath}/${elementId}/functionConstraint`;\n          this.cursorPosition = 0;\n        } else if (\n          currentPart === \"functionBase\" &&\n          !parentElement.functionConstraint &&\n          isUserDefinedFunction\n        ) {\n          this.activeContextPath = `${parentPath}/${elementId}/functionName`;\n          this.cursorPosition = 0;\n        } else if (currentPart === \"functionConstraint\" && isUserDefinedFunction) {\n          this.activeContextPath = `${parentPath}/${elementId}/functionName`;\n          this.cursorPosition = 0;\n        } else {\n          this.navigateOutOfContext(\"backward\");\n        }\n      }\n    } else {\n      this.navigateOutOfContext(direction === \"ArrowDown\" ? \"forward\" : \"backward\");\n    }\n  }\n\n  private navigateMatrixHorizontal(direction: number): boolean {\n    if (!this.activeContextPath || this.activeContextPath === \"root\") return false;\n\n    const parts = this.activeContextPath.split(\"/\");\n    const currentPart = parts.pop()!;\n    const elementId = parts[parts.length - 1];\n    const parentPath = parts.slice(0, -1).join(\"/\");\n\n    const context = this.getContext(this.activeContextPath);\n    if (\n      !context ||\n      !context.parent ||\n      (context.parent.type !== \"matrix\" &&\n        context.parent.type !== \"stack\" &&\n        context.parent.type !== \"cases\")\n    )\n      return false;\n\n    // Parse cell container name: \"cell_row_col\"\n    const cellMatch = currentPart.match(/^cell_(\\d+)_(\\d+)$/);\n    if (!cellMatch || !context.parent.rows || !context.parent.cols) return false;\n\n    const currentRow = parseInt(cellMatch[1]);\n    const currentCol = parseInt(cellMatch[2]);\n\n    if (direction === 1) {\n      // Move right to next column\n      if (currentCol < context.parent.cols - 1) {\n        this.activeContextPath = `${parentPath}/${elementId}/cell_${currentRow}_${currentCol + 1}`;\n        this.cursorPosition = 0;\n        return true;\n      }\n    } else if (direction === -1) {\n      // Move left to previous column\n      if (currentCol > 0) {\n        this.activeContextPath = `${parentPath}/${elementId}/cell_${currentRow}_${currentCol - 1}`;\n        this.cursorPosition = 0;\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  navigateOutOfContext(direction: \"forward\" | \"backward\"): void {\n    if (!this.activeContextPath || this.activeContextPath === \"root\") return;\n\n    const parts = this.activeContextPath.split(\"/\");\n    parts.pop(); // remove part name (numerator/denominator)\n    const elementId = parts.pop();\n    const parentPath = parts.join(\"/\");\n\n    const parentContext = this.getContext(parentPath);\n    if (!parentContext || !elementId) return;\n\n    const elementIndex = parentContext.array.findIndex((el) => el.id === elementId);\n    if (elementIndex === -1) return;\n\n    this.activeContextPath = parentPath;\n    this.cursorPosition = direction === \"forward\" ? elementIndex + 1 : elementIndex;\n  }\n\n  handleBackspace(): boolean {\n    if (!this.activeContextPath) return false;\n    const context = this.getContext(this.activeContextPath);\n    if (!context) return false;\n\n    if (this.cursorPosition > 0) {\n      this.equationBuilder.removeElement(context.array, this.cursorPosition - 1);\n      this.cursorPosition--;\n      return true;\n    } else if (this.activeContextPath !== \"root\") {\n      this.navigateOutOfContext(\"backward\");\n      return true;\n    }\n    return false;\n  }\n\n  handleDelete(): boolean {\n    if (!this.activeContextPath) return false;\n    const context = this.getContext(this.activeContextPath);\n    if (!context) return false;\n\n    if (this.cursorPosition < context.array.length) {\n      this.equationBuilder.removeElement(context.array, this.cursorPosition);\n      return true;\n    }\n    return false;\n  }\n\n  insertTextAtCursor(text: string): boolean {\n    if (!this.activeContextPath) return false;\n    const context = this.getContext(this.activeContextPath);\n    if (!context) return false;\n\n    try {\n      // Check if we're in a derivative function context\n      if (this.activeContextPath.includes(\"function\") && context.parent?.type === \"derivative\") {\n        const currentContent = this.getContextText(context.array);\n        const newContent =\n          currentContent.slice(0, this.cursorPosition) +\n          text +\n          currentContent.slice(this.cursorPosition);\n\n        // Check for mixed brackets\n        if (hasMixedBrackets(newContent)) {\n          this.showMixedBracketsError();\n          return false;\n        }\n      }\n\n      const element = this.equationBuilder.createTextElement(text);\n      this.equationBuilder.insertElement(element, context.array, this.cursorPosition);\n      this.cursorPosition++;\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  private getContextText(elements: EquationElement[]): string {\n    return elements.map((el) => el.value || \"\").join(\"\");\n  }\n\n  showMixedBracketsError(): void {\n    const errorDiv = document.createElement(\"div\");\n    errorDiv.textContent = \"Mixed brackets are not supported for derivatives.\";\n    errorDiv.style.cssText = `\n      position: fixed;\n      top: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: #f44336;\n      color: white;\n      padding: 12px 16px;\n      border-radius: 4px;\n      z-index: 10000;\n      font-size: 14px;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.3);\n      font-family: Arial, sans-serif;\n    `;\n\n    document.body.appendChild(errorDiv);\n\n    setTimeout(() => {\n      if (errorDiv.parentNode) {\n        errorDiv.parentNode.removeChild(errorDiv);\n      }\n    }, 3000);\n  }\n\n  insertElementAtCursor(element: EquationElement): boolean {\n    if (!this.activeContextPath) return false;\n    const context = this.getContext(this.activeContextPath);\n    if (!context) return false;\n\n    this.equationBuilder.insertElement(element, context.array, this.cursorPosition);\n    this.cursorPosition++;\n    return true;\n  }\n\n  // Selection management methods\n  getSelection(): SelectionState {\n    return { ...this.selection };\n  }\n\n  setSelection(startPosition: number, endPosition: number, contextPath?: string): void {\n    const finalContextPath = contextPath || this.activeContextPath || \"root\";\n\n    this.selection = {\n      startPosition: Math.min(startPosition, endPosition),\n      endPosition: Math.max(startPosition, endPosition),\n      contextPath: finalContextPath,\n      isActive: true,\n    };\n  }\n\n  clearSelection(): void {\n    this.selection.isActive = false;\n  }\n\n  hasSelection(): boolean {\n    return this.selection.isActive && this.selection.startPosition !== this.selection.endPosition;\n  }\n\n  // Select entire structure at cursor position\n  selectStructureAtCursor(): boolean {\n    if (!this.activeContextPath) return false;\n    const context = this.getContext(this.activeContextPath);\n    if (!context) return false;\n\n    // Find the element at or before cursor position\n    if (this.cursorPosition > 0 && this.cursorPosition <= context.array.length) {\n      const element = context.array[this.cursorPosition - 1];\n      if (element && element.type !== \"text\") {\n        // Select the entire structure\n        this.setSelection(this.cursorPosition - 1, this.cursorPosition);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Select entire current context (e.g., entire numerator, denominator, etc.)\n  selectCurrentContext(): boolean {\n    if (!this.activeContextPath) return false;\n    const context = this.getContext(this.activeContextPath);\n    if (!context) return false;\n\n    this.setSelection(0, context.array.length);\n    return true;\n  }\n\n  // Select parent structure containing current context\n  selectParentStructure(): boolean {\n    if (!this.activeContextPath || this.activeContextPath === \"root\") return false;\n\n    const parts = this.activeContextPath.split(\"/\");\n    parts.pop(); // remove part name (numerator/denominator/etc.)\n    const elementId = parts.pop();\n    const parentPath = parts.join(\"/\");\n\n    const parentContext = this.getContext(parentPath);\n    if (!parentContext || !elementId) return false;\n\n    const elementIndex = parentContext.array.findIndex((el) => el.id === elementId);\n    if (elementIndex === -1) return false;\n\n    // Move to parent context and select the structure\n    this.activeContextPath = parentPath;\n    this.setSelection(elementIndex, elementIndex + 1);\n    this.cursorPosition = elementIndex + 1;\n    return true;\n  }\n\n  // Extend selection to include whole structures\n  extendSelectionToStructure(direction: number): void {\n    if (!this.activeContextPath) return;\n    const context = this.getContext(this.activeContextPath);\n    if (!context) return;\n\n    if (!this.selection.isActive) {\n      // Start new selection\n      if (direction > 0 && this.cursorPosition < context.array.length) {\n        const element = context.array[this.cursorPosition];\n        if (element && element.type !== \"text\") {\n          // Select entire structure forward\n          this.setSelection(this.cursorPosition, this.cursorPosition + 1);\n          this.cursorPosition = this.cursorPosition + 1;\n        } else {\n          // Regular character selection\n          this.extendSelection(direction);\n        }\n      } else if (direction < 0 && this.cursorPosition > 0) {\n        const element = context.array[this.cursorPosition - 1];\n        if (element && element.type !== \"text\") {\n          // Select entire structure backward\n          this.setSelection(this.cursorPosition - 1, this.cursorPosition);\n          this.cursorPosition = this.cursorPosition - 1;\n        } else {\n          // Regular character selection\n          this.extendSelection(direction);\n        }\n      }\n    } else {\n      // Extend existing selection\n      let newPosition = this.cursorPosition;\n\n      if (direction > 0 && this.cursorPosition < context.array.length) {\n        const element = context.array[this.cursorPosition];\n        newPosition =\n          element && element.type !== \"text\"\n            ? this.cursorPosition + 1\n            : this.cursorPosition + direction;\n      } else if (direction < 0 && this.cursorPosition > 0) {\n        const checkPos = Math.max(0, this.cursorPosition + direction);\n        const element = context.array[checkPos];\n        newPosition =\n          element && element.type !== \"text\" ? checkPos : this.cursorPosition + direction;\n      }\n\n      // Update selection boundaries\n      if (this.cursorPosition === this.selection.endPosition) {\n        this.selection.endPosition = Math.max(0, Math.min(context.array.length, newPosition));\n      } else if (this.cursorPosition === this.selection.startPosition) {\n        this.selection.startPosition = Math.max(0, Math.min(context.array.length, newPosition));\n      }\n\n      this.cursorPosition = newPosition;\n\n      // Normalize selection\n      if (this.selection.startPosition > this.selection.endPosition) {\n        const temp = this.selection.startPosition;\n        this.selection.startPosition = this.selection.endPosition;\n        this.selection.endPosition = temp;\n      }\n\n      if (this.selection.startPosition === this.selection.endPosition) {\n        this.clearSelection();\n      }\n    }\n  }\n\n  extendSelection(direction: number): void {\n    if (!this.selection.isActive) {\n      // Start new selection from cursor position\n      const newStart = this.cursorPosition;\n      const newEnd = this.cursorPosition + direction;\n      this.setSelection(newStart, newEnd);\n\n      // Update cursor to the moving end of selection\n      this.cursorPosition = newEnd;\n    } else {\n      // The cursor position determines which end of the selection to extend\n      if (this.cursorPosition === this.selection.endPosition) {\n        // Cursor is at end, extend end position\n        this.selection.endPosition = Math.max(0, this.selection.endPosition + direction);\n        this.cursorPosition = this.selection.endPosition;\n      } else if (this.cursorPosition === this.selection.startPosition) {\n        // Cursor is at start, extend start position\n        this.selection.startPosition = Math.max(0, this.selection.startPosition + direction);\n        this.cursorPosition = this.selection.startPosition;\n      } else {\n        // Cursor position is inconsistent, fix it by extending from current position\n        if (direction > 0) {\n          this.selection.endPosition = Math.max(0, this.cursorPosition + direction);\n          this.cursorPosition = this.selection.endPosition;\n        } else {\n          this.selection.startPosition = Math.max(0, this.cursorPosition + direction);\n          this.cursorPosition = this.selection.startPosition;\n        }\n      }\n\n      // Ensure start <= end and normalize selection\n      if (this.selection.startPosition > this.selection.endPosition) {\n        const temp = this.selection.startPosition;\n        this.selection.startPosition = this.selection.endPosition;\n        this.selection.endPosition = temp;\n      }\n\n      // If selection becomes empty, clear it\n      if (this.selection.startPosition === this.selection.endPosition) {\n        this.clearSelection();\n      }\n    }\n  }\n\n  deleteSelection(): boolean {\n    if (!this.hasSelection() || !this.activeContextPath) return false;\n\n    const context = this.getContext(this.activeContextPath);\n    if (!context) return false;\n\n    // Delete elements in selection range\n    const deleteCount = this.selection.endPosition - this.selection.startPosition;\n    context.array.splice(this.selection.startPosition, deleteCount);\n\n    // Move cursor to start of deleted selection\n    this.cursorPosition = this.selection.startPosition;\n    this.clearSelection();\n\n    return true;\n  }\n\n  extractSelection(): EquationElement[] {\n    if (!this.hasSelection() || !this.activeContextPath) return [];\n\n    const context = this.getContext(this.activeContextPath);\n    if (!context) return [];\n\n    // Extract elements in selection range\n    const extractedElements = context.array.splice(\n      this.selection.startPosition,\n      this.selection.endPosition - this.selection.startPosition\n    );\n\n    // Move cursor to start of extracted selection\n    this.cursorPosition = this.selection.startPosition;\n    this.clearSelection();\n\n    return extractedElements;\n  }\n\n  getSelectionFormatting(): {\n    bold?: boolean;\n    italic?: boolean;\n    underline?: string | boolean;\n    cancel?: boolean;\n    color?: string;\n  } | null {\n    if (!this.hasSelection() || !this.activeContextPath) {\n      return null;\n    }\n\n    const context = this.getContext(this.activeContextPath);\n    if (!context) {\n      return null;\n    }\n\n    // Collect formatting from all selected text elements\n    const formattingCounts = {\n      bold: { true: 0, false: 0 },\n      italic: { true: 0, false: 0 },\n      underline: {} as Record<string, number>,\n      cancel: { true: 0, false: 0 },\n      color: {} as Record<string, number>,\n    };\n\n    let totalTextElements = 0;\n\n    for (let i = this.selection.startPosition; i < this.selection.endPosition; i++) {\n      if (i < context.array.length) {\n        const element = context.array[i];\n\n        if (element.type === \"text\") {\n          totalTextElements++;\n\n          // Count bold\n          const bold = element.bold || false;\n          formattingCounts.bold[bold as any]++;\n\n          // Count italic\n          const italic = element.italic || false;\n          formattingCounts.italic[italic as any]++;\n\n          // Count underline\n          let underline = \"none\";\n          if (element.wrappers?.underline) {\n            underline = element.wrappers.underline.type;\n          } else if (element.underline) {\n            underline = element.underline;\n          }\n          formattingCounts.underline[underline] = (formattingCounts.underline[underline] || 0) + 1;\n\n          // Count cancel\n          let cancel = false;\n          if (element.wrappers?.cancel) {\n            cancel = true;\n          } else if (element.cancel) {\n            cancel = element.cancel;\n          }\n          formattingCounts.cancel[cancel as any]++;\n\n          // Count color\n          let color = \"default\";\n          if (element.wrappers?.color) {\n            color = element.wrappers.color.value;\n          } else if (element.color) {\n            color = element.color;\n          }\n          formattingCounts.color[color] = (formattingCounts.color[color] || 0) + 1;\n        }\n      }\n    }\n\n    if (totalTextElements === 0) return null;\n\n    // Determine consistent formatting\n    const result: any = {};\n\n    // Bold: consistent if all elements have same value\n    if (formattingCounts.bold.true === totalTextElements) result.bold = true;\n    else if (formattingCounts.bold.false === totalTextElements) result.bold = false;\n\n    // Italic: consistent if all elements have same value\n    if (formattingCounts.italic.true === totalTextElements) result.italic = true;\n    else if (formattingCounts.italic.false === totalTextElements) result.italic = false;\n\n    // Underline: consistent if all elements have same value\n    const underlineTypes = Object.keys(formattingCounts.underline);\n    if (\n      underlineTypes.length === 1 &&\n      formattingCounts.underline[underlineTypes[0]] === totalTextElements\n    ) {\n      result.underline = underlineTypes[0];\n    }\n\n    // Cancel: consistent if all elements have same value\n    if (formattingCounts.cancel.true === totalTextElements) result.cancel = true;\n    else if (formattingCounts.cancel.false === totalTextElements) result.cancel = false;\n\n    // Color: consistent if all elements have same value\n    const colorTypes = Object.keys(formattingCounts.color);\n    if (colorTypes.length === 1 && formattingCounts.color[colorTypes[0]] === totalTextElements) {\n      result.color = colorTypes[0] === \"default\" ? undefined : colorTypes[0];\n    }\n\n    return result;\n  }\n\n  removeWrapperFormattingFromSelection(\n    wrapperType: \"cancel\" | \"underline\" | \"color\" | \"textMode\"\n  ): boolean {\n    if (!this.hasSelection() || !this.activeContextPath) {\n      return false;\n    }\n\n    // Use the selection's context path, not the active context path\n    const selectionContextPath = this.selection.contextPath || this.activeContextPath;\n    const context = this.getContext(selectionContextPath);\n    if (!context) {\n      return false;\n    }\n\n    // Remove specific wrapper type from selected elements using new multi-wrapper system\n    for (let i = this.selection.startPosition; i < this.selection.endPosition; i++) {\n      if (i < context.array.length) {\n        const element = context.array[i];\n\n        if (element.wrappers) {\n          // Remove the specific wrapper type\n          delete element.wrappers[wrapperType];\n\n          // Remove from order array\n          if (element.wrapperOrder) {\n            element.wrapperOrder = element.wrapperOrder.filter((w) => w !== wrapperType);\n          }\n\n          // Clean up empty wrappers object and order array\n          if (Object.keys(element.wrappers).length === 0) {\n            delete element.wrappers;\n            delete element.wrapperOrder;\n          }\n        }\n      }\n    }\n\n    // Clear selection after removing wrapper formatting\n    this.clearSelection();\n\n    return true;\n  }\n\n  applyWrapperFormattingToSelection(formatting: {\n    cancel?: boolean;\n    underline?: \"single\" | \"double\";\n    color?: string;\n    textMode?: boolean;\n  }): boolean {\n    if (!this.hasSelection() || !this.activeContextPath) {\n      return false;\n    }\n\n    // Use the selection's context path, not the active context path\n    const selectionContextPath = this.selection.contextPath || this.activeContextPath;\n\n    const context = this.getContext(selectionContextPath);\n\n    if (!context) {\n      return false;\n    }\n\n    // Generate shared wrapper IDs for this selection - all selected elements\n    // should share the same wrapper ID for continuous formatting\n    const sharedWrapperIds = {\n      cancel: this.equationBuilder.generateElementId(),\n      underline: this.equationBuilder.generateElementId(),\n      color: this.equationBuilder.generateElementId(),\n      textMode: this.equationBuilder.generateElementId(),\n    };\n\n    // Apply wrapper formatting to selected elements using new multi-wrapper system\n    let elementsProcessed = 0;\n\n    for (let i = this.selection.startPosition; i < this.selection.endPosition; i++) {\n      if (i < context.array.length) {\n        const element = context.array[i];\n        elementsProcessed++;\n\n        // Initialize wrappers object if it doesn't exist\n        if (!element.wrappers) {\n          element.wrappers = {};\n        }\n\n        // Apply each wrapper type independently with order tracking\n        if (formatting.cancel !== undefined) {\n          if (formatting.cancel) {\n            // Always use new ID to override any existing formatting\n            element.wrappers.cancel = { id: sharedWrapperIds.cancel };\n            // If cancel doesn't exist, add it to order tracking\n            if (!element.wrapperOrder || !element.wrapperOrder.includes(\"cancel\")) {\n              element.wrapperOrder = element.wrapperOrder || [];\n              element.wrapperOrder.push(\"cancel\");\n            }\n            // Keep existing order position if already present\n          } else {\n            delete element.wrappers.cancel;\n            // Remove from order array\n            if (element.wrapperOrder) {\n              element.wrapperOrder = element.wrapperOrder.filter((w) => w !== \"cancel\");\n            }\n          }\n        }\n\n        if (formatting.underline !== undefined) {\n          if (formatting.underline) {\n            // If underline doesn't exist, add it and track order\n            if (!element.wrappers.underline) {\n              element.wrappers.underline = {\n                id: sharedWrapperIds.underline,\n                type: formatting.underline,\n              };\n              element.wrapperOrder = element.wrapperOrder || [];\n              element.wrapperOrder.push(\"underline\");\n            } else {\n              // If underline already exists, update with new ID and type to override\n              element.wrappers.underline = {\n                id: sharedWrapperIds.underline,\n                type: formatting.underline,\n              };\n              // Keep existing order position\n            }\n          } else {\n            delete element.wrappers.underline;\n            // Remove from order array\n            if (element.wrapperOrder) {\n              element.wrapperOrder = element.wrapperOrder.filter((w) => w !== \"underline\");\n            }\n          }\n        }\n\n        if (formatting.color !== undefined) {\n          if (formatting.color) {\n            // Always use new ID to override any existing formatting\n            element.wrappers.color = {\n              id: sharedWrapperIds.color,\n              value: formatting.color,\n            };\n            // If color doesn't exist, add it to order tracking\n            if (!element.wrapperOrder || !element.wrapperOrder.includes(\"color\")) {\n              element.wrapperOrder = element.wrapperOrder || [];\n              element.wrapperOrder.push(\"color\");\n            }\n            // Keep existing order position if already present\n          } else {\n            delete element.wrappers.color;\n            // Remove from order array\n            if (element.wrapperOrder) {\n              element.wrapperOrder = element.wrapperOrder.filter((w) => w !== \"color\");\n            }\n          }\n        }\n\n        if (formatting.textMode !== undefined) {\n          if (formatting.textMode) {\n            // Apply text mode wrapper\n            element.wrappers.textMode = {\n              id: sharedWrapperIds.textMode,\n            };\n            // If textMode doesn't exist, add it to order tracking\n            if (!element.wrapperOrder || !element.wrapperOrder.includes(\"textMode\")) {\n              element.wrapperOrder = element.wrapperOrder || [];\n              element.wrapperOrder.push(\"textMode\");\n            }\n            // Keep existing order position if already present\n          } else {\n            delete element.wrappers.textMode;\n            // Remove from order array\n            if (element.wrapperOrder) {\n              element.wrapperOrder = element.wrapperOrder.filter((w) => w !== \"textMode\");\n            }\n          }\n        }\n\n        // Clean up empty wrappers object and order array\n        if (Object.keys(element.wrappers).length === 0) {\n          delete element.wrappers;\n          delete element.wrapperOrder;\n        }\n      }\n    }\n\n    // Clear selection after applying wrapper formatting\n    this.clearSelection();\n\n    return true;\n  }\n\n  applyFormattingToSelection(\n    formatting: Partial<Pick<EquationElement, \"bold\" | \"italic\" | \"underline\" | \"cancel\" | \"color\">>\n  ): boolean {\n    if (!this.hasSelection() || !this.activeContextPath) {\n      return false;\n    }\n\n    // Use the selection's context path, not the active context path\n    const selectionContextPath = this.selection.contextPath || this.activeContextPath;\n    const context = this.getContext(selectionContextPath);\n    if (!context) {\n      return false;\n    }\n\n    // Apply formatting to all elements in selection\n    let elementsModified = 0;\n    for (let i = this.selection.startPosition; i < this.selection.endPosition; i++) {\n      if (i < context.array.length) {\n        const element = context.array[i];\n\n        if (element.type === \"text\") {\n          // For text elements, apply all formatting normally\n          const isOperator = /[+\\-×÷=<>≤≥≠]/.test(element.value || \"\");\n\n          if (isOperator && formatting.bold !== undefined) {\n            // Skip bold for operators, but allow other formatting\n            const filteredFormatting = { ...formatting };\n            delete filteredFormatting.bold;\n            this.applyFormattingToElement(element, filteredFormatting);\n          } else {\n            this.applyFormattingToElement(element, formatting);\n          }\n          elementsModified++;\n        } else {\n          // For structures (fraction, sqrt, etc.), handle formatting differently\n          if (element.type === \"matrix\") {\n            // For matrices, handle different formatting types appropriately\n            if (formatting.bold !== undefined || formatting.italic !== undefined) {\n              // Bold and italic should apply to all matrix entries, not the structure\n              const entryFormatting = {\n                bold: formatting.bold,\n                italic: formatting.italic,\n              };\n              this.applyFormattingToStructureContents(element, entryFormatting);\n              elementsModified++;\n            }\n\n            // Other formatting (underline, color, cancel) can apply to the matrix structure\n            const structureFormatting = { ...formatting };\n            delete structureFormatting.bold;\n            delete structureFormatting.italic;\n\n            if (Object.keys(structureFormatting).length > 0) {\n              this.applyFormattingToElement(element, structureFormatting);\n              elementsModified++;\n            }\n          } else {\n            // For other structures, handle formatting differently\n            if (formatting.underline !== undefined) {\n              // For underline, apply only to the structure itself\n              this.applyStructureUnderline(element, formatting.underline);\n              elementsModified++;\n            }\n\n            // For other formatting (bold, italic, color), apply recursively to all text within\n            const recursiveFormatting = { ...formatting };\n            delete recursiveFormatting.underline;\n\n            if (Object.keys(recursiveFormatting).length > 0) {\n              this.applyFormattingToStructureContents(element, recursiveFormatting);\n              elementsModified++;\n            }\n          }\n        }\n      }\n    }\n\n    if (elementsModified > 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private applyFormattingToElement(element: EquationElement, formatting: any): void {\n    // Apply formatting properties (including false values for explicit roman/off states)\n    Object.keys(formatting).forEach((key) => {\n      if (formatting[key] !== undefined) {\n        (element as any)[key] = formatting[key];\n      }\n    });\n  }\n\n  isSelectionBold(): boolean {\n    if (!this.hasSelection() || !this.activeContextPath) return false;\n\n    const context = this.getContext(this.activeContextPath);\n    if (!context) return false;\n\n    // Check if all selected text elements are bold\n    let hasTextElements = false;\n    for (let i = this.selection.startPosition; i < this.selection.endPosition; i++) {\n      if (i < context.array.length) {\n        const element = context.array[i];\n        if (element.type === \"text\") {\n          hasTextElements = true;\n          // If any text element is not bold, selection is not fully bold\n          if (!element.bold) {\n            return false;\n          }\n        }\n      }\n    }\n\n    // Return true only if we found text elements and all are bold\n    return hasTextElements;\n  }\n\n  isSelectionItalic(): boolean {\n    if (!this.hasSelection() || !this.activeContextPath) return false;\n\n    const context = this.getContext(this.activeContextPath);\n    if (!context) return false;\n\n    // Check if all selected text elements are italic\n    let hasTextElements = false;\n    for (let i = this.selection.startPosition; i < this.selection.endPosition; i++) {\n      if (i < context.array.length) {\n        const element = context.array[i];\n        if (element.type === \"text\") {\n          hasTextElements = true;\n          // Check if element is explicitly italic\n          if (element.italic === true) {\n            continue;\n          }\n          // Check if element is naturally italic when not explicitly set\n          if (element.italic === undefined) {\n            // English letters are naturally italic in LaTeX math mode\n            if (/^[a-zA-Z]$/.test(element.value || \"\")) {\n              continue;\n            }\n          }\n          // Element is not italic\n          return false;\n        }\n      }\n    }\n\n    return hasTextElements;\n  }\n\n  isSelectionCancel(): boolean {\n    if (!this.hasSelection() || !this.activeContextPath) return false;\n\n    const context = this.getContext(this.activeContextPath);\n    if (!context) return false;\n\n    // Check if all selected elements have cancel wrapper (multi-wrapper system)\n    let hasElements = false;\n    for (let i = this.selection.startPosition; i < this.selection.endPosition; i++) {\n      if (i < context.array.length) {\n        const element = context.array[i];\n        hasElements = true;\n        // Check new wrapper system\n        if (element.wrappers?.cancel) {\n          continue; // This element has cancel\n        }\n        return false; // This element doesn't have cancel\n      }\n    }\n\n    return hasElements;\n  }\n\n  isSelectionUnderlined(): \"single\" | \"double\" | false {\n    if (!this.hasSelection() || !this.activeContextPath) return false;\n\n    const context = this.getContext(this.activeContextPath);\n    if (!context) return false;\n\n    // Check if all selected elements have underline wrapper (multi-wrapper system)\n    let hasElements = false;\n    let underlineStyle: \"single\" | \"double\" | undefined;\n\n    for (let i = this.selection.startPosition; i < this.selection.endPosition; i++) {\n      if (i < context.array.length) {\n        const element = context.array[i];\n        hasElements = true;\n\n        let elementUnderlineStyle: \"single\" | \"double\" | undefined;\n\n        // Check new wrapper system\n        if (element.wrappers?.underline) {\n          elementUnderlineStyle = element.wrappers.underline.type;\n        } else {\n          return false; // This element doesn't have underline\n        }\n\n        // Check consistency of underline style\n        if (!underlineStyle) {\n          underlineStyle = elementUnderlineStyle;\n        } else if (underlineStyle !== elementUnderlineStyle) {\n          return false; // Mixed styles\n        }\n      }\n    }\n\n    return hasElements && underlineStyle ? underlineStyle : false;\n  }\n\n  getElementContextPath(elementId: string, containerName: string): string {\n    if (this.activeContextPath === \"root\") {\n      return `root/${elementId}/${containerName}`;\n    }\n    return `${this.activeContextPath}/${elementId}/${containerName}`;\n  }\n\n  private applyStructureUnderline(element: EquationElement, underline?: \"single\" | \"double\"): void {\n    // Apply underline to the structure element itself\n    if (underline !== undefined) {\n      element.underline = underline;\n    }\n  }\n\n  private applyFormattingToStructureContents(\n    element: EquationElement,\n    formatting: Partial<Pick<EquationElement, \"bold\" | \"italic\" | \"cancel\" | \"color\">>\n  ): void {\n    // Recursively apply formatting to all text elements within the structure\n    const applyToArray = (array?: EquationElement[]) => {\n      if (!array) return;\n      array.forEach((el) => {\n        if (el.type === \"text\") {\n          const isOperator = /[+\\-×÷=<>≤≥≠]/.test(el.value || \"\");\n          if (isOperator && formatting.bold !== undefined) {\n            const filteredFormatting = { ...formatting };\n            delete filteredFormatting.bold;\n            this.applyFormattingToElement(el, filteredFormatting);\n          } else {\n            this.applyFormattingToElement(el, formatting);\n          }\n        } else {\n          // Recursively apply to nested structures\n          this.applyFormattingToStructureContents(el, formatting);\n        }\n      });\n    };\n\n    // Apply to all nested arrays in the structure\n    applyToArray(element.numerator);\n    applyToArray(element.denominator);\n    applyToArray(element.radicand);\n    applyToArray(element.index);\n    applyToArray(element.base);\n    applyToArray(element.superscript);\n    applyToArray(element.subscript);\n    applyToArray(element.content);\n    applyToArray(element.upperLimit);\n    applyToArray(element.lowerLimit);\n    applyToArray(element.operand);\n    applyToArray(element.function);\n    applyToArray(element.variable);\n    if (Array.isArray(element.order)) {\n      applyToArray(element.order);\n    }\n    applyToArray(element.integrand);\n    applyToArray(element.differentialVariable);\n    applyToArray(element.functionArgument);\n    applyToArray(element.functionBase);\n    applyToArray(element.functionConstraint);\n    applyToArray(element.functionName);\n\n    // Apply to matrix cells\n    if (element.cells && typeof element.cells === \"object\") {\n      Object.keys(element.cells).forEach((cellKey) => {\n        if (cellKey.startsWith(\"cell_\")) {\n          applyToArray(element.cells[cellKey]);\n        }\n      });\n    }\n  }\n}\n","import { getOperatorsNeedingInlineScaling, SYMBOL_CONFIG } from \"./centralized-config\";\r\n\r\nexport class FontMeasurementService {\r\n  private scaleRatios: Map<string, Map<string, number>> = new Map();\r\n  private currentFontKey: string = \"\";\r\n\r\n  // Get operators to measure from symbol config\r\n  private get operators() {\r\n    return Object.entries(SYMBOL_CONFIG)\r\n      .filter(([_, config]) => config.isLargeOperator && config.needsInlineScaling)\r\n      .map(([_, config]) => ({\r\n        symbol: config.unicode,\r\n        name: config.dataAttribute!,\r\n      }));\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  // Measures and calculates the scale ratios for supported large operators\r\n  measureAndSetScaleRatios(): Promise<Map<string, number>> {\r\n    return new Promise((resolve) => {\r\n      const fontKey = this.getCurrentFontKey();\r\n\r\n      // Check cache first\r\n      if (this.scaleRatios.has(fontKey)) {\r\n        const cachedRatios = this.scaleRatios.get(fontKey)!;\r\n        this.applyScaleRatios(cachedRatios);\r\n        resolve(cachedRatios);\r\n        return;\r\n      }\r\n\r\n      // Measure all operators\r\n      const ratios = new Map<string, number>();\r\n      let measurementIndex = 0;\r\n\r\n      const measureNext = () => {\r\n        if (measurementIndex >= this.operators.length) {\r\n          // All measurements complete\r\n          this.scaleRatios.set(fontKey, ratios);\r\n          this.applyScaleRatios(ratios);\r\n          resolve(ratios);\r\n          return;\r\n        }\r\n\r\n        const operator = this.operators[measurementIndex];\r\n        const { nolimitsElement, displaylimitsElement, container } = this.createMeasurementElements(operator.symbol);\r\n\r\n        // Wait for rendering\r\n        requestAnimationFrame(() => {\r\n          try {\r\n            // Measure the sizes\r\n            const nolimitsSize = this.getOperatorSize(nolimitsElement);\r\n            const displaylimitsSize = this.getOperatorSize(displaylimitsElement);\r\n\r\n            // Calculate ratio\r\n            const ratio = nolimitsSize.height / displaylimitsSize.height;\r\n\r\n            // Store ratio\r\n            ratios.set(operator.name, ratio);\r\n\r\n            // Cleanup\r\n            container.remove();\r\n\r\n            // Measure next operator\r\n            measurementIndex++;\r\n            measureNext();\r\n          } catch (error) {\r\n            // Use fallback ratio\r\n            ratios.set(operator.name, 0.6);\r\n            container.remove();\r\n            measurementIndex++;\r\n            measureNext();\r\n          }\r\n        });\r\n      };\r\n\r\n      // Start measuring\r\n      measureNext();\r\n    });\r\n  }\r\n\r\n  private createMeasurementElements(operatorSymbol: string) {\r\n    // Create invisible container\r\n    const container = document.createElement(\"div\");\r\n    container.style.position = \"absolute\";\r\n    container.style.left = \"-9999px\";\r\n    container.style.top = \"-9999px\";\r\n    container.style.visibility = \"hidden\";\r\n    container.style.pointerEvents = \"none\";\r\n\r\n    // Create nolimits element (target size)\r\n    const nolimitsWrapper = document.createElement(\"div\");\r\n    nolimitsWrapper.className = \"visual-equation-container\";\r\n    nolimitsWrapper.innerHTML = `\r\n      <math>\r\n        <mrow>\r\n          <msubsup>\r\n            <mo class=\"test-nolimits-operator\">${operatorSymbol}</mo>\r\n            <mrow><mi>□</mi></mrow>\r\n            <mrow><mi>□</mi></mrow>\r\n          </msubsup>\r\n        </mrow>\r\n      </math>\r\n    `;\r\n\r\n    // Create displaystyle limits element (current size)\r\n    const displaylimitsWrapper = document.createElement(\"div\");\r\n    displaylimitsWrapper.className = \"visual-equation-container\";\r\n    displaylimitsWrapper.innerHTML = `\r\n      <math>\r\n        <mrow displaystyle=\"true\">\r\n          <munderover>\r\n            <mo class=\"test-displaystyle-operator\">${operatorSymbol}</mo>\r\n            <mrow><mi>□</mi></mrow>\r\n            <mrow><mi>□</mi></mrow>\r\n          </munderover>\r\n        </mrow>\r\n      </math>\r\n    `;\r\n\r\n    container.appendChild(nolimitsWrapper);\r\n    container.appendChild(displaylimitsWrapper);\r\n    document.body.appendChild(container);\r\n\r\n    return {\r\n      nolimitsElement: nolimitsWrapper,\r\n      displaylimitsElement: displaylimitsWrapper,\r\n      container,\r\n    };\r\n  }\r\n\r\n  private getOperatorSize(container: HTMLElement): { width: number; height: number } {\r\n    const operator = container.querySelector(\"mo\");\r\n    if (!operator) {\r\n      throw new Error(\"Operator element not found\");\r\n    }\r\n\r\n    const rect = operator.getBoundingClientRect();\r\n    return {\r\n      width: rect.width,\r\n      height: rect.height,\r\n    };\r\n  }\r\n\r\n  private getCurrentFontKey(): string {\r\n    // Create a key based on current font settings\r\n    const computedStyle = window.getComputedStyle(document.body);\r\n    const fontFamily = computedStyle.getPropertyValue(\"font-family\");\r\n    const fontSize = computedStyle.getPropertyValue(\"font-size\");\r\n\r\n    return `${fontFamily}-${fontSize}`;\r\n  }\r\n\r\n  private applyScaleRatios(ratios: Map<string, number>): void {\r\n    // Create or update CSS custom properties for each operator\r\n    ratios.forEach((ratio, operatorName) => {\r\n      document.documentElement.style.setProperty(\r\n        `--inline-limits-scale-${operatorName}`,\r\n        ratio.toString()\r\n      );\r\n    });\r\n\r\n    // Ensure CSS rules exist\r\n    this.ensureScaleCSSRules();\r\n  }\r\n\r\n  private ensureScaleCSSRules(): void {\r\n    const styleId = \"inline-limits-dynamic-scale\";\r\n    let styleElement = document.getElementById(styleId) as HTMLStyleElement;\r\n\r\n    if (!styleElement) {\r\n      styleElement = document.createElement(\"style\");\r\n      styleElement.id = styleId;\r\n\r\n      // Get operators that need scaling from symbol config\r\n      const operatorsToScale = getOperatorsNeedingInlineScaling();\r\n\r\n      // Generate CSS rules for all operators that need scaling\r\n      const cssRules = operatorsToScale\r\n        .map(\r\n          (operator: string) => `\r\n        .equation-display mrow[displaystyle=\"true\"] .inline-limits[data-operator=\"${operator}\"] > mo,\r\n        .visual-equation-container mrow[displaystyle=\"true\"] .inline-limits[data-operator=\"${operator}\"] > mo {\r\n          transform: scale(var(--inline-limits-scale-${operator}, 0.6)) !important;\r\n        }`\r\n        )\r\n        .join(\"\\n\");\r\n\r\n      styleElement.textContent = `\r\n        /* Dynamic scaling for inline-limits operators */\r\n        ${cssRules}\r\n      `;\r\n      document.head.appendChild(styleElement);\r\n    }\r\n  }\r\n\r\n  // Call this when font settings change\r\n  invalidateCache(): void {\r\n    this.scaleRatios.clear();\r\n  }\r\n}\r\n","import { EquationElement } from \"../core/equation-builder\";\r\nimport { ContextManager } from \"../core/context-manager\";\r\nimport { getIntegralSymbol, UNICODE_TO_LATEX, FUNCTION_NAMES, FUNCTION_TYPE_MAP } from \"../core/centralized-config\";\r\n\r\nexport class DisplayRenderer {\r\n  private contextManager: ContextManager;\r\n  private globalFontSize: number = 12;\r\n  private inputHandler: any = null;\r\n\r\n  constructor(contextManager: ContextManager) {\r\n    this.contextManager = contextManager;\r\n  }\r\n\r\n  setInputHandler(inputHandler: any): void {\r\n    this.inputHandler = inputHandler;\r\n  }\r\n\r\n  setGlobalFontSize(size: number): void {\r\n    this.globalFontSize = size;\r\n  }\r\n\r\n  getGlobalFontSize(): number {\r\n    return this.globalFontSize;\r\n  }\r\n\r\n  renderEquation(elements: EquationElement[]): string {\r\n    const activeContextPath = this.contextManager.getActiveContextPath();\r\n\r\n    if (activeContextPath === null && elements.length === 0) {\r\n      return '<span class=\"empty-state\">Click here and start typing your equation</span>';\r\n    }\r\n\r\n    return this.generateMathML(elements, \"root\");\r\n  }\r\n\r\n  updateDisplay(displayElement: HTMLElement, elements: EquationElement[]): void {\r\n    const activeContextPath = this.contextManager.getActiveContextPath();\r\n\r\n    if (activeContextPath === null && elements.length === 0) {\r\n      displayElement.innerHTML =\r\n        '<span class=\"empty-state\">Click here and start typing your equation</span>';\r\n      displayElement.classList.remove(\"active\");\r\n      return;\r\n    }\r\n\r\n    displayElement.classList.toggle(\"active\", activeContextPath !== null);\r\n\r\n    const mathmlContent = this.generateMathML(elements, \"root\");\r\n    const visualHTML = `\r\n      <div class=\"visual-equation-container\" style=\"font-size: ${this.globalFontSize * 1.5}px; position: relative;\">\r\n        ${mathmlContent}\r\n        <div class=\"wrapper-overlays\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 1;\"></div>\r\n      </div>\r\n    `;\r\n\r\n    displayElement.innerHTML = visualHTML;\r\n\r\n    // Create wrapper overlays after DOM is updated\r\n    requestAnimationFrame(() => {\r\n      this.createWrapperOverlays(displayElement, elements);\r\n    });\r\n  }\r\n\r\n  private generateMathML(elements: EquationElement[], contextPath: string): string {\r\n    const activeContextPath = this.contextManager.getActiveContextPath();\r\n    const cursorPosition = this.contextManager.getCursorPosition();\r\n    const selection = this.contextManager.getSelection();\r\n\r\n    // Add active-context class to the container mrow if this is the active context\r\n    const isActiveContext = activeContextPath === contextPath;\r\n    const containerClass = isActiveContext ? \"active-context\" : \"\";\r\n    const containerClassAttr = containerClass ? ` class=\"${containerClass}\"` : \"\";\r\n\r\n    let mathmlContent = `<math><mrow data-context-path=\"${contextPath}\"${containerClassAttr}>`;\r\n\r\n    if (elements.length === 0 && contextPath === activeContextPath) {\r\n      mathmlContent += '<mspace class=\"cursor\" data-context-path=\"' + contextPath + '\" data-position=\"0\" />';\r\n    }\r\n\r\n    elements.forEach((element, index) => {\r\n      if (contextPath === activeContextPath && index === cursorPosition) {\r\n        mathmlContent += '<mspace class=\"cursor\" data-context-path=\"' + contextPath + '\" data-position=\"' + index + '\" />';\r\n      }\r\n      const elementPath = contextPath === 'root' ? `root/${element.id}` : `${contextPath}/${element.id}`;\r\n\r\n      // Check if this element is in the selection range\r\n      const isSelected = selection.isActive && \r\n        selection.contextPath === contextPath &&\r\n        index >= selection.startPosition &&\r\n        index < selection.endPosition;\r\n\r\n      mathmlContent += this.elementToMathML(element, elementPath, index, isSelected);\r\n    });\r\n\r\n    if (contextPath === activeContextPath && elements.length === cursorPosition) {\r\n      mathmlContent += '<mspace class=\"cursor\" data-context-path=\"' + contextPath + '\" data-position=\"' + elements.length + '\" />';\r\n    }\r\n\r\n    mathmlContent += \"</mrow></math>\";\r\n    return mathmlContent;\r\n  }\r\n\r\n  private elementToMathML(element: EquationElement, contextPath: string, position: number, isSelected: boolean = false): string {\r\n    const activeContextPath = this.contextManager.getActiveContextPath();\r\n    const isActive = activeContextPath === contextPath;\r\n\r\n    switch (element.type) {\r\n      case \"text\":\r\n        return this.textToMathML(element, isActive, contextPath, position, isSelected);\r\n      case \"fraction\":\r\n        return this.fractionToMathML(element, contextPath, isActive, position, isSelected);\r\n      case \"bevelled-fraction\":\r\n        return this.bevelledFractionToMathML(element, contextPath, isActive, position, isSelected);\r\n      case \"sqrt\":\r\n        return this.sqrtToMathML(element, contextPath, isActive, position, isSelected);\r\n      case \"nthroot\":\r\n        return this.nthRootToMathML(element, contextPath, isActive, position, isSelected);\r\n      case \"script\":\r\n        return this.scriptToMathML(element, contextPath, isActive, position, isSelected);\r\n      case \"bracket\":\r\n        return this.bracketToMathML(element, contextPath, isActive, position, isSelected);\r\n      case \"large-operator\":\r\n        return this.largeOperatorToMathML(element, contextPath, isActive, position, isSelected);\r\n      case \"derivative\":\r\n        return this.derivativeToMathML(element, contextPath, isActive, position, isSelected);\r\n      case \"integral\":\r\n        return this.integralToMathML(element, contextPath, isActive, position, isSelected);\r\n      case \"matrix\":\r\n        return this.matrixToMathML(element, contextPath, isActive, position, isSelected);\r\n      case \"stack\":\r\n        return this.stackToMathML(element, contextPath, isActive, position, isSelected);\r\n      case \"cases\":\r\n        return this.casesToMathML(element, contextPath, isActive, position, isSelected);\r\n      case \"accent\":\r\n        return this.accentToMathML(element, contextPath, isActive, position, isSelected);\r\n      case \"function\":\r\n        return this.functionToMathML(element, contextPath, isActive, position, isSelected);\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  private textToMathML(element: EquationElement, isActive: boolean, contextPath: string, position: number, isSelected: boolean = false): string {\r\n    let value = element.value || '&#x25A1;'; // Default to a placeholder square\r\n    \r\n    // Check if element is in text mode early to handle space escaping\r\n    const isTextMode = element.textMode === true || (element.wrappers && element.wrappers.textMode);\r\n\r\n    // Handle LaTeX spacing commands that might be parsed as text\r\n    if (value === \"\\\\,\") {\r\n      value = \"&#8201;\"; // Thin space (U+2009)\r\n    }\r\n\r\n    // In text mode, convert spaces to non-breaking spaces for proper display\r\n    if (isTextMode && value === \" \") {\r\n      value = \"&#160;\"; // Non-breaking space\r\n    }\r\n    const isOperator = /[+\\-−×÷=<>≤≥≠±∓·∗⋆∘•∼≃≈≡≅≇∝≮≯≰≱≺≻⪯⪰≪≫∩∪∖∈∋∉⊂⊃⊆⊇⊈⊉⊊⊋⊕⊖⊗⊘⊙◁▷≀∧∨⊢⊨⊤⊥⋈⋄≍≜∴∵]/.test(value);\r\n    const isVariable = /[a-zA-Z]/.test(value);\r\n    const isNumber = /[0-9]/.test(value);\r\n    const isSymbol = /[^\\w\\s]/.test(value);\r\n\r\n    let tag = \"mi\";\r\n    // In text mode, use mtext tag for proper text rendering\r\n    if (isTextMode) {\r\n      tag = \"mtext\";\r\n    } else if (isOperator) {\r\n      tag = \"mo\";\r\n    } else if (isNumber) {\r\n      tag = \"mn\";\r\n    }\r\n\r\n    let style = \"\";\r\n    // Check for direct color property (legacy)\r\n    if (element.color) style += `color: ${element.color};`;\r\n    // Check for wrapper color (multi-wrapper system)\r\n    if (element.wrappers?.color?.value) {\r\n      style += `color: ${element.wrappers.color.value};`;\r\n    }\r\n    if (element.bold) style += \"font-weight: bold;\";\r\n\r\n    // Add selection highlighting\r\n    if (isSelected) {\r\n      style += \"background-color: #0078d4; color: white; border-radius: 2px; padding: 1px 2px;\";\r\n    }\r\n\r\n    const styleAttr = style ? `style=\"${style}\"` : \"\";\r\n\r\n    // Handle italic styling using mathvariant attribute for mi elements, inline styles for others\r\n    let mathVariantAttr = \"\";\r\n    if (tag === \"mi\") {\r\n      // For <mi> elements, use mathvariant attribute to control italic behavior\r\n      let shouldBeItalic = false;\r\n\r\n      // Check if this is a function name that should be upright\r\n      const isFunctionName = FUNCTION_NAMES.includes(value);\r\n\r\n      if (element.italic === true) {\r\n        shouldBeItalic = true;\r\n      } else if (element.italic === false || isFunctionName) {\r\n        shouldBeItalic = false;\r\n      } else if (isVariable && !element.bold && element.italic !== false && !isTextMode) {\r\n        // Variables default to italic unless bold or explicitly set to normal or in text mode\r\n        shouldBeItalic = true;\r\n      }\r\n\r\n      // Set mathvariant to \"normal\" to override default italic behavior of <mi>\r\n      if (!shouldBeItalic) {\r\n        mathVariantAttr = 'mathvariant=\"normal\"';\r\n      }\r\n      // If shouldBeItalic is true, we don't set mathvariant and let <mi> use its default italic\r\n    } else if (tag === \"mtext\") {\r\n      // For mtext elements, ensure roman (non-italic) font by default\r\n      mathVariantAttr = 'mathvariant=\"normal\"';\r\n    } else {\r\n      // For non-mi elements (mo, mn), use inline styles as before\r\n      if (element.italic === true) {\r\n        style += \"font-style: italic;\";\r\n      } else if (element.italic === false) {\r\n        style += \"font-style: normal;\";\r\n      } else if (isVariable && !element.bold && element.italic !== false && !isTextMode) {\r\n        // Variables default to italic unless bold or explicitly set to normal or in text mode\r\n        style += \"font-style: italic;\";\r\n      }\r\n    }\r\n\r\n    const classNames = [];\r\n    if (isActive) classNames.push(\"active-element\");\r\n    if (isSelected) classNames.push(\"selected\");\r\n\r\n    // Add active-context class if this is the active context\r\n    const activeContextPath = this.contextManager.getActiveContextPath();\r\n    if (activeContextPath === contextPath) {\r\n      classNames.push(\"active-context\");\r\n    }\r\n\r\n    const classAttr = classNames.length > 0 ? `class=\"${classNames.join(\" \")}\"` : \"\";\r\n    const dataAttrs = `data-context-path=\"${contextPath}\" data-position=\"${position}\" data-element-id=\"${element.id}\"`;\r\n\r\n    // Update styleAttr if we modified style for non-mi elements\r\n    const finalStyleAttr = style ? `style=\"${style}\"` : \"\";\r\n\r\n    return `<${tag} ${finalStyleAttr} ${mathVariantAttr} ${classAttr} ${dataAttrs}>${value}</${tag}>`;\r\n  }\r\n\r\n  // Helper method to build style attributes for structure elements\r\n  private buildStructureStyle(element: EquationElement, isSelected: boolean): string {\r\n    let style = \"\";\r\n    \r\n    // Check for direct color property (legacy)\r\n    if (element.color) style += `color: ${element.color};`;\r\n    \r\n    // Check for wrapper color (multi-wrapper system)\r\n    if (element.wrappers?.color?.value) {\r\n      style += `color: ${element.wrappers.color.value};`;\r\n    }\r\n    \r\n    if (element.bold) style += \"font-weight: bold;\";\r\n    if (isSelected) {\r\n      style += \"background-color: #0078d4; color: white; border-radius: 3px; padding: 2px;\";\r\n    }\r\n    return style ? `style=\"${style}\"` : \"\";\r\n  }\r\n\r\n  private fractionToMathML(element: EquationElement, elementPath: string, isActive: boolean, position: number, isSelected: boolean = false): string {\r\n    const numeratorML = this.generateMathMLContent(`${elementPath}/numerator`, element.numerator);\r\n    const denominatorML = this.generateMathMLContent(`${elementPath}/denominator`, element.denominator);\r\n\r\n    // Add classes for active element, selection, and display mode\r\n    const classes = [];\r\n    if (isActive) classes.push(\"active-element\");\r\n    if (isSelected) classes.push(\"selected-structure\");\r\n    if (element.displayMode === \"display\") classes.push(\"display-fraction\");\r\n    const classAttr = classes.length > 0 ? `class=\"${classes.join(\" \")}\"` : \"\";\r\n\r\n    const styleAttr = this.buildStructureStyle(element, isSelected);\r\n\r\n    const dataAttrs = `data-context-path=\"${elementPath}\" data-position=\"${position}\" data-element-id=\"${element.id}\"`;\r\n\r\n    // Add displaystyle attribute for display mode fractions\r\n    const displayStyle = element.displayMode === \"display\" ? 'displaystyle=\"true\"' : \"\";\r\n\r\n    return `<mfrac ${displayStyle} ${classAttr} ${styleAttr} ${dataAttrs}>\r\n      <mrow data-context-path=\"${elementPath}/numerator\">${numeratorML}</mrow>\r\n      <mrow data-context-path=\"${elementPath}/denominator\">${denominatorML}</mrow>\r\n    </mfrac>`;\r\n  }\r\n\r\n  private bevelledFractionToMathML(element: EquationElement, elementPath: string, isActive: boolean, position: number, isSelected: boolean = false): string {\r\n    const numeratorML = this.generateMathMLContent(`${elementPath}/numerator`, element.numerator);\r\n    const denominatorML = this.generateMathMLContent(`${elementPath}/denominator`, element.denominator);\r\n    const classAttr = isActive ? 'class=\"active-element\"' : '';\r\n    const dataAttrs = `data-context-path=\"${elementPath}\" data-position=\"${position}\"`;\r\n\r\n    return `<mrow ${classAttr} ${dataAttrs}>\r\n      <mrow data-context-path=\"${elementPath}/numerator\">${numeratorML}</mrow>\r\n      <mo>/</mo>\r\n      <mrow data-context-path=\"${elementPath}/denominator\">${denominatorML}</mrow>\r\n    </mrow>`;\r\n  }\r\n\r\n  private sqrtToMathML(element: EquationElement, elementPath: string, isActive: boolean, position: number, isSelected: boolean = false): string {\r\n    const radicandML = this.generateMathMLContent(`${elementPath}/radicand`, element.radicand);\r\n    const classes = [];\r\n    if (isActive) classes.push(\"active-element\");\r\n    if (isSelected) classes.push(\"selected-structure\");\r\n\r\n    const classAttr = classes.length > 0 ? `class=\"${classes.join(\" \")}\"` : \"\";\r\n\r\n    const styleAttr = this.buildStructureStyle(element, isSelected);\r\n\r\n    const dataAttrs = `data-context-path=\"${elementPath}\" data-position=\"${position}\" data-element-id=\"${element.id}\"`;\r\n\r\n    return `<msqrt ${classAttr} ${styleAttr} ${dataAttrs}>\r\n      <mrow data-context-path=\"${elementPath}/radicand\">${radicandML}</mrow>\r\n    </msqrt>`;\r\n  }\r\n\r\n  private nthRootToMathML(element: EquationElement, elementPath: string, isActive: boolean, position: number, isSelected: boolean = false): string {\r\n    const indexML = this.generateMathMLContent(`${elementPath}/index`, element.index);\r\n    const radicandML = this.generateMathMLContent(`${elementPath}/radicand`, element.radicand);\r\n    const classes = [];\r\n    if (isActive) classes.push(\"active-element\");\r\n    if (isSelected) classes.push(\"selected-structure\");\r\n    const classAttr = classes.length > 0 ? `class=\"${classes.join(\" \")}\"` : \"\";\r\n    const styleAttr = this.buildStructureStyle(element, isSelected);\r\n    const dataAttrs = `data-context-path=\"${elementPath}\" data-position=\"${position}\" data-element-id=\"${element.id}\"`;\r\n\r\n    return `<mroot ${classAttr} ${styleAttr} ${dataAttrs}>\r\n      <mrow data-context-path=\"${elementPath}/radicand\">${radicandML}</mrow>\r\n      <mrow data-context-path=\"${elementPath}/index\">${indexML}</mrow>\r\n    </mroot>`;\r\n  }\r\n\r\n  private scriptToMathML(element: EquationElement, elementPath: string, isActive: boolean, position: number, isSelected: boolean = false): string {\r\n    const baseML = this.generateMathMLContent(`${elementPath}/base`, element.base);\r\n    const classes = [];\r\n    if (isActive) classes.push(\"active-element\");\r\n    if (isSelected) classes.push(\"selected-structure\");\r\n    const classAttr = classes.length > 0 ? `class=\"${classes.join(\" \")}\"` : \"\";\r\n\r\n    const styleAttr = this.buildStructureStyle(element, isSelected);\r\n\r\n    const dataAttrs = `data-context-path=\"${elementPath}\" data-position=\"${position}\" data-element-id=\"${element.id}\"`;\r\n\r\n    if (element.superscript && element.subscript) {\r\n      const supML = this.generateMathMLContent(`${elementPath}/superscript`, element.superscript);\r\n      const subML = this.generateMathMLContent(`${elementPath}/subscript`, element.subscript);\r\n      return `<msubsup ${classAttr} ${styleAttr} ${dataAttrs}>\r\n        <mrow data-context-path=\"${elementPath}/base\">${baseML}</mrow>\r\n        <mrow data-context-path=\"${elementPath}/subscript\">${subML}</mrow>\r\n        <mrow data-context-path=\"${elementPath}/superscript\">${supML}</mrow>\r\n      </msubsup>`;\r\n    } else if (element.superscript) {\r\n      const supML = this.generateMathMLContent(`${elementPath}/superscript`, element.superscript);\r\n      return `<msup ${classAttr} ${styleAttr} ${dataAttrs}>\r\n        <mrow data-context-path=\"${elementPath}/base\">${baseML}</mrow>\r\n        <mrow data-context-path=\"${elementPath}/superscript\">${supML}</mrow>\r\n      </msup>`;\r\n    } else if (element.subscript) {\r\n      const subML = this.generateMathMLContent(`${elementPath}/subscript`, element.subscript);\r\n      return `<msub ${classAttr} ${styleAttr} ${dataAttrs}>\r\n        <mrow data-context-path=\"${elementPath}/base\">${baseML}</mrow>\r\n        <mrow data-context-path=\"${elementPath}/subscript\">${subML}</mrow>\r\n      </msub>`;\r\n    }\r\n    return `<mrow data-context-path=\"${elementPath}\">${baseML}</mrow>`;\r\n  }\r\n\r\n  private bracketToMathML(element: EquationElement, elementPath: string, isActive: boolean, position: number, isSelected: boolean = false): string {\r\n    const contentML = this.generateMathMLContent(`${elementPath}/content`, element.content);\r\n\r\n    // Brackets will automatically size based on their content\r\n    // Using stretchy=\"true\" allows brackets to stretch to match content height\r\n    const leftBracket = element.leftBracketSymbol ? \r\n      `<mo stretchy=\"true\" symmetric=\"true\">${element.leftBracketSymbol}</mo>` : '';\r\n    const rightBracket = element.rightBracketSymbol ? \r\n      `<mo stretchy=\"true\" symmetric=\"true\">${element.rightBracketSymbol}</mo>` : '';\r\n\r\n    const classes = [];\r\n    if (isActive) classes.push(\"active-element\");\r\n    if (isSelected) classes.push(\"selected-structure\");\r\n    const classAttr = classes.length > 0 ? `class=\"${classes.join(\" \")}\"` : \"\";\r\n    const dataAttrs = `data-context-path=\"${elementPath}\" data-position=\"${position}\"`;\r\n\r\n    // Create the basic bracket structure\r\n    const bracketContent = `<mrow ${classAttr} ${dataAttrs}>\r\n      ${leftBracket}\r\n      <mrow data-context-path=\"${elementPath}/content\">${contentML}</mrow>\r\n      ${rightBracket}\r\n    </mrow>`;\r\n\r\n    // Check if this bracket has superscript/subscript (evaluation brackets)\r\n    if (element.superscript && element.subscript) {\r\n      const supML = this.generateMathMLContent(`${elementPath}/superscript`, element.superscript);\r\n      const subML = this.generateMathMLContent(`${elementPath}/subscript`, element.subscript);\r\n      return `<msubsup ${classAttr} ${dataAttrs}>\r\n        ${bracketContent}\r\n        <mrow data-context-path=\"${elementPath}/subscript\">${subML}</mrow>\r\n        <mrow data-context-path=\"${elementPath}/superscript\">${supML}</mrow>\r\n      </msubsup>`;\r\n    } else if (element.superscript) {\r\n      const supML = this.generateMathMLContent(`${elementPath}/superscript`, element.superscript);\r\n      return `<msup ${classAttr} ${dataAttrs}>\r\n        ${bracketContent}\r\n        <mrow data-context-path=\"${elementPath}/superscript\">${supML}</mrow>\r\n      </msup>`;\r\n    } else if (element.subscript) {\r\n      const subML = this.generateMathMLContent(`${elementPath}/subscript`, element.subscript);\r\n      return `<msub ${classAttr} ${dataAttrs}>\r\n        ${bracketContent}\r\n        <mrow data-context-path=\"${elementPath}/subscript\">${subML}</mrow>\r\n      </msub>`;\r\n    }\r\n\r\n    return bracketContent;\r\n  }\r\n\r\n  private largeOperatorToMathML(element: EquationElement, elementPath: string, isActive: boolean, position: number, isSelected: boolean = false): string {\r\n    const operator = element.operator || '&#x2211;';\r\n    const operandML = this.generateMathMLContent(`${elementPath}/operand`, element.operand);\r\n    const classes = [];\r\n    if (isActive) classes.push(\"active-element\");\r\n    if (isSelected) classes.push(\"selected-structure\");\r\n    const classAttr = classes.length > 0 ? `class=\"${classes.join(\" \")}\"` : \"\";\r\n    const styleAttr = this.buildStructureStyle(element, isSelected);\r\n    const dataAttrs = `data-context-path=\"${elementPath}\" data-position=\"${position}\" data-element-id=\"${element.id}\"`;\r\n\r\n    // Check if this is marked as an indefinite integral\r\n    const isIndefiniteIntegral = (element as any).isIndefiniteIntegral === true;\r\n\r\n    // Add displaystyle attribute for display mode OR limits mode (to force proper limit positioning)\r\n    const displayStyle = (element.displayMode === 'display' || element.limitMode === 'limits') ? 'displaystyle=\"true\"' : '';\r\n\r\n    // Get data-operator attribute for all operator types\r\n    const operatorData = this.getOperatorDataAttribute(operator);\r\n\r\n    let operatorML = \"\";\r\n    if (isIndefiniteIntegral) {\r\n      // Simple indefinite integral without limits\r\n      operatorML = `<mo ${classAttr} ${dataAttrs}>${operator}</mo>`;\r\n    } else if (element.limitMode === \"limits\") {\r\n      const upperML = this.generateMathMLContent(`${elementPath}/upperLimit`, element.upperLimit);\r\n      const lowerML = this.generateMathMLContent(`${elementPath}/lowerLimit`, element.lowerLimit);\r\n      // Distinguish regular limits from display limits for sizing\r\n      const limitsClass = element.displayMode === \"display\" ? \"display-limits\" : \"inline-limits\";\r\n      const limitsClasses = [limitsClass];\r\n      if (isSelected) limitsClasses.push(\"selected-structure\");\r\n      operatorML = `<munderover class=\"${limitsClasses.join(\" \")}\" ${operatorData} ${dataAttrs}>\r\n        <mo>${operator}</mo>\r\n        <mrow data-context-path=\"${elementPath}/lowerLimit\">${lowerML}</mrow>\r\n        <mrow data-context-path=\"${elementPath}/upperLimit\">${upperML}</mrow>\r\n      </munderover>`;\r\n    } else {\r\n      const upperML = this.generateMathMLContent(`${elementPath}/upperLimit`, element.upperLimit);\r\n      const lowerML = this.generateMathMLContent(`${elementPath}/lowerLimit`, element.lowerLimit);\r\n      operatorML = `<msubsup ${classAttr} ${dataAttrs}>\r\n        <mo>${operator}</mo>\r\n        <mrow data-context-path=\"${elementPath}/lowerLimit\">${lowerML}</mrow>\r\n        <mrow data-context-path=\"${elementPath}/upperLimit\">${upperML}</mrow>\r\n      </msubsup>`;\r\n    }\r\n\r\n    // Wrap everything in mrow with displaystyle and include operand\r\n    // Add data-operator to the wrapper so CSS can target cursors within any integral\r\n    const wrapperClasses = [];\r\n    if (isSelected) wrapperClasses.push(\"selected-structure\");\r\n    const wrapperClassAttr =\r\n      wrapperClasses.length > 0 ? ` class=\"${wrapperClasses.join(\" \")}\"` : \"\";\r\n    return `<mrow ${displayStyle} ${operatorData}${wrapperClassAttr} ${styleAttr} data-element-id=\"${element.id}\">\r\n      ${operatorML}\r\n      <mrow data-context-path=\"${elementPath}/operand\">${operandML}</mrow>\r\n    </mrow>`;\r\n  }\r\n\r\n  private getOperatorDataAttribute(operator: string): string {\r\n    // Convert operator symbol to LaTeX command, then use that as the name\r\n    const latexCommand = UNICODE_TO_LATEX[operator];\r\n    const operatorName = latexCommand ? latexCommand.substring(1) : \"unknown\"; // Remove the backslash\r\n    return `data-operator=\"${operatorName}\"`;\r\n  }\r\n\r\n  private derivativeToMathML(element: EquationElement, elementPath: string, isActive: boolean, position: number, isSelected: boolean = false): string {\r\n    const classes = [];\r\n    if (isActive) classes.push(\"active-element\");\r\n    if (isSelected) classes.push(\"selected-structure\");\r\n    const classAttr = classes.length > 0 ? `class=\"${classes.join(\" \")}\"` : \"\";\r\n    const dataAttrs = `data-context-path=\"${elementPath}\" data-position=\"${position}\" data-element-id=\"${element.id}\"`;\r\n\r\n    // Add displaystyle attribute for display mode derivatives\r\n    const displayStyle = element.displayMode === \"display\" ? 'displaystyle=\"true\"' : \"\";\r\n\r\n    // Check current differential style preference from context manager\r\n    const isDifferentialItalic = this.getDifferentialStylePreference();\r\n    // For partial derivatives, ∂ is always italic regardless of differential style preference\r\n    const mathVariantAttr = (isDifferentialItalic || element.isPartial) ? \"\" : 'mathvariant=\"normal\"';\r\n    \r\n    // Determine differential symbol: ∂ for partial derivatives, d for regular derivatives\r\n    const differentialSymbol = element.isPartial ? \"∂\" : \"d\";\r\n\r\n    // Check if this is long form derivative\r\n    if (element.isLongForm) {\r\n      return this.derivativeLongFormToMathML(element, elementPath, isActive, position, isSelected, displayStyle, mathVariantAttr, differentialSymbol);\r\n    }\r\n\r\n    // Generate content for each part (standard form)\r\n    const functionML = this.generateMathMLContent(`${elementPath}/function`, element.function);\r\n    const variableML = this.generateMathMLContent(`${elementPath}/variable`, element.variable);\r\n\r\n    let numeratorContent = \"\";\r\n    let denominatorContent = \"\";\r\n\r\n    if (typeof element.order === \"number\") {\r\n      // Numeric order (1, 2, 3, ...)\r\n      if (element.order === 1) {\r\n        numeratorContent = `<mi ${mathVariantAttr}>${differentialSymbol}</mi>${functionML}`;\r\n        denominatorContent = `<mi ${mathVariantAttr}>${differentialSymbol}</mi>${variableML}`;\r\n      } else {\r\n        numeratorContent = `<msup>\r\n          <mi ${mathVariantAttr}>${differentialSymbol}</mi>\r\n          <mn>${element.order}</mn>\r\n        </msup>${functionML}`;\r\n        denominatorContent = `<mi ${mathVariantAttr}>${differentialSymbol}</mi><msup>\r\n          ${variableML}\r\n          <mn>${element.order}</mn>\r\n        </msup>`;\r\n      }\r\n    } else {\r\n      // nth order with custom expression\r\n      const orderML = this.generateMathMLContent(`${elementPath}/order`, element.order);\r\n      numeratorContent = `<msup>\r\n        <mi ${mathVariantAttr}>${differentialSymbol}</mi>\r\n        <mrow data-context-path=\"${elementPath}/order\">${orderML}</mrow>\r\n      </msup>${functionML}`;\r\n\r\n      // For denominator, create a read-only copy without editable context\r\n      const readOnlyOrderML = element.order && element.order.length > 0 ? \r\n        element.order.map(el => el.value || '').join('') : '';\r\n      denominatorContent = `<mi ${mathVariantAttr}>${differentialSymbol}</mi><msup>\r\n        ${variableML}\r\n        <mi>${readOnlyOrderML || \"&#x25A1;\"}</mi>\r\n      </msup>`;\r\n    }\r\n\r\n    return `<mfrac ${displayStyle} ${classAttr} ${dataAttrs}>\r\n      <mrow data-context-path=\"${elementPath}/function\">${numeratorContent}</mrow>\r\n      <mrow data-context-path=\"${elementPath}/variable\">${denominatorContent}</mrow>\r\n    </mfrac>`;\r\n  }\r\n\r\n  private getDifferentialStylePreference(): boolean {\r\n    // Get differential style from input handler (true = italic, false = roman)\r\n    if (this.inputHandler && typeof this.inputHandler.getDifferentialStyleForLatex === \"function\") {\r\n      // Invert the logic since getDifferentialStyleForLatex returns true for roman (physics package)\r\n      // but we need true for italic display\r\n      return !this.inputHandler.getDifferentialStyleForLatex();\r\n    }\r\n    return true; // Default to italic if no input handler\r\n  }\r\n\r\n  private derivativeLongFormToMathML(element: EquationElement, elementPath: string, isActive: boolean, position: number, isSelected: boolean, displayStyle: string, mathVariantAttr: string, differentialSymbol: string = \"d\"): string {\r\n    const classes = [];\r\n    if (isActive) classes.push(\"active-element\");\r\n    if (isSelected) classes.push(\"selected-structure\");\r\n    const classAttr = classes.length > 0 ? `class=\"${classes.join(\" \")}\"` : \"\";\r\n    const dataAttrs = `data-context-path=\"${elementPath}\" data-position=\"${position}\" data-element-id=\"${element.id}\"`;\r\n\r\n    // Generate content for each part\r\n    const functionML = this.generateMathMLContent(`${elementPath}/function`, element.function);\r\n    const variableML = this.generateMathMLContent(`${elementPath}/variable`, element.variable);\r\n\r\n    let fractionContent = \"\";\r\n\r\n    if (typeof element.order === \"number\") {\r\n      // Numeric order (1, 2, 3, ...)\r\n      if (element.order === 1) {\r\n        // d/dx or ∂/∂x format\r\n        fractionContent = `<mfrac ${displayStyle}>\r\n          <mi ${mathVariantAttr}>${differentialSymbol}</mi>\r\n          <mrow data-context-path=\"${elementPath}/variable\">\r\n            <mi ${mathVariantAttr}>${differentialSymbol}</mi>\r\n            ${variableML}\r\n          </mrow>\r\n        </mfrac>`;\r\n      } else {\r\n        // d^n/dx^n or ∂^n/∂x^n format\r\n        fractionContent = `<mfrac ${displayStyle}>\r\n          <msup>\r\n            <mi ${mathVariantAttr}>${differentialSymbol}</mi>\r\n            <mn>${element.order}</mn>\r\n          </msup>\r\n          <mrow data-context-path=\"${elementPath}/variable\">\r\n            <mi ${mathVariantAttr}>${differentialSymbol}</mi>\r\n            <msup>\r\n              ${variableML}\r\n              <mn>${element.order}</mn>\r\n            </msup>\r\n          </mrow>\r\n        </mfrac>`;\r\n      }\r\n    } else {\r\n      // nth order with custom expression\r\n      const orderML = this.generateMathMLContent(`${elementPath}/order`, element.order);\r\n\r\n      // For denominator, create a read-only copy without editable context to prevent shared input\r\n      const readOnlyOrderML = element.order && element.order.length > 0 ? \r\n        element.order.map(el => el.value || '').join('') : '';\r\n\r\n      fractionContent = `<mfrac ${displayStyle}>\r\n        <msup>\r\n          <mi ${mathVariantAttr}>${differentialSymbol}</mi>\r\n          <mrow data-context-path=\"${elementPath}/order\">${orderML}</mrow>\r\n        </msup>\r\n        <mrow data-context-path=\"${elementPath}/variable\">\r\n          <mi ${mathVariantAttr}>${differentialSymbol}</mi>\r\n          <msup>\r\n            ${variableML}\r\n            <mi>${readOnlyOrderML || \"&#x25A1;\"}</mi>\r\n          </msup>\r\n        </mrow>\r\n      </mfrac>`;\r\n    }\r\n\r\n    // Long form\r\n    return `<mrow ${classAttr} ${dataAttrs}>\r\n      ${fractionContent}\r\n      <mrow data-context-path=\"${elementPath}/function\">${functionML}</mrow>\r\n    </mrow>`;\r\n  }\r\n\r\n  private integralToMathML(element: EquationElement, elementPath: string, isActive: boolean, position: number, isSelected: boolean = false): string {\r\n    const classes = [];\r\n    if (isActive) classes.push(\"active-element\");\r\n    if (isSelected) classes.push(\"selected-structure\");\r\n    const classAttr = classes.length > 0 ? `class=\"${classes.join(\" \")}\"` : \"\";\r\n    const dataAttrs = `data-context-path=\"${elementPath}\" data-position=\"${position}\" data-element-id=\"${element.id}\"`;\r\n\r\n    // Add displaystyle attribute for display mode integrals\r\n    const displayStyle = element.displayMode === \"display\" ? 'displaystyle=\"true\"' : \"\";\r\n\r\n    // Get the integral symbol based on type\r\n    const integralSymbol = getIntegralSymbol(element.integralType || \"single\");\r\n\r\n    // Check differential style preference\r\n    const isDifferentialItalic = element.integralStyle === \"italic\";\r\n    const mathVariantAttr = isDifferentialItalic ? \"\" : 'mathvariant=\"normal\"';\r\n\r\n    // Generate content for integrand and differential variable\r\n    const integrandML = this.generateMathMLContent(`${elementPath}/integrand`, element.integrand);\r\n    const differentialVariableML = this.generateMathMLContent(`${elementPath}/differentialVariable`, element.differentialVariable);\r\n\r\n    let integralOperatorML = \"\";\r\n\r\n    if (element.isDefinite) {\r\n      // Definite integral with limits\r\n      const hasUpperLimit = element.upperLimit !== undefined;\r\n      const hasLowerLimit = element.lowerLimit !== undefined;\r\n      \r\n      const upperML = hasUpperLimit ? this.generateMathMLContent(`${elementPath}/upperLimit`, element.upperLimit) : \"\";\r\n      const lowerML = hasLowerLimit ? this.generateMathMLContent(`${elementPath}/lowerLimit`, element.lowerLimit) : \"\";\r\n\r\n      // Use limitMode to determine positioning: \"limits\" = above/below, \"nolimits\" = side\r\n      const useAboveBelow = element.limitMode === \"limits\" || (element.limitMode === \"default\" && element.displayMode === \"display\");\r\n\r\n      if (hasUpperLimit && hasLowerLimit) {\r\n        // Both upper and lower limits\r\n        if (useAboveBelow) {\r\n          integralOperatorML = `<munderover>\r\n            <mo>${integralSymbol}</mo>\r\n            <mrow data-context-path=\"${elementPath}/lowerLimit\">${lowerML}</mrow>\r\n            <mrow data-context-path=\"${elementPath}/upperLimit\">${upperML}</mrow>\r\n          </munderover>`;\r\n        } else {\r\n          integralOperatorML = `<msubsup>\r\n            <mo>${integralSymbol}</mo>\r\n            <mrow data-context-path=\"${elementPath}/lowerLimit\">${lowerML}</mrow>\r\n            <mrow data-context-path=\"${elementPath}/upperLimit\">${upperML}</mrow>\r\n          </msubsup>`;\r\n        }\r\n      } else if (hasLowerLimit) {\r\n        // Only lower limit (subscript or under)\r\n        if (useAboveBelow) {\r\n          integralOperatorML = `<munder>\r\n            <mo>${integralSymbol}</mo>\r\n            <mrow data-context-path=\"${elementPath}/lowerLimit\">${lowerML}</mrow>\r\n          </munder>`;\r\n        } else {\r\n          integralOperatorML = `<msub>\r\n            <mo>${integralSymbol}</mo>\r\n            <mrow data-context-path=\"${elementPath}/lowerLimit\">${lowerML}</mrow>\r\n          </msub>`;\r\n        }\r\n      } else if (hasUpperLimit) {\r\n        // Only upper limit (superscript or over)\r\n        if (useAboveBelow) {\r\n          integralOperatorML = `<mover>\r\n            <mo>${integralSymbol}</mo>\r\n            <mrow data-context-path=\"${elementPath}/upperLimit\">${upperML}</mrow>\r\n          </mover>`;\r\n        } else {\r\n          integralOperatorML = `<msup>\r\n            <mo>${integralSymbol}</mo>\r\n            <mrow data-context-path=\"${elementPath}/upperLimit\">${upperML}</mrow>\r\n          </msup>`;\r\n        }\r\n      } else {\r\n        // No limits (shouldn't happen for definite integrals, but handle gracefully)\r\n        integralOperatorML = `<mo>${integralSymbol}</mo>`;\r\n      }\r\n    } else {\r\n      // Indefinite integral without limits\r\n      integralOperatorML = `<mo>${integralSymbol}</mo>`;\r\n    }\r\n\r\n    // Combine all parts: integral symbol, integrand, space, d, variable\r\n    return `<mrow ${displayStyle} ${classAttr} ${dataAttrs}>\r\n      ${integralOperatorML}\r\n      <mrow data-context-path=\"${elementPath}/integrand\">${integrandML}</mrow>\r\n      <mspace width=\"0.2em\"/>\r\n      <mi ${mathVariantAttr}>d</mi>\r\n      <mrow data-context-path=\"${elementPath}/differentialVariable\">${differentialVariableML}</mrow>\r\n    </mrow>`;\r\n  }\r\n\r\n  private matrixToMathML(element: EquationElement, elementPath: string, isActive: boolean, position: number, isSelected: boolean = false): string {\r\n    const { rows, cols, cells, matrixType } = element;\r\n\r\n    if (!rows || !cols || !cells) {\r\n      return \"<mtext>Invalid Matrix</mtext>\";\r\n    }\r\n\r\n    // Generate the matrix content\r\n    let matrixContent = \"<mtable>\";\r\n\r\n    for (let row = 0; row < rows; row++) {\r\n      matrixContent += \"<mtr>\";\r\n      for (let col = 0; col < cols; col++) {\r\n        const cellPath = `${elementPath}/cell_${row}_${col}`;\r\n        const cellElements = cells[`cell_${row}_${col}`] || [];\r\n\r\n        const cellContent = this.generateMathMLContent(cellPath, cellElements);\r\n        matrixContent += `<mtd>${cellContent}</mtd>`;\r\n      }\r\n      matrixContent += \"</mtr>\";\r\n    }\r\n\r\n    matrixContent += \"</mtable>\";\r\n\r\n    // Wrap with brackets based on matrix type\r\n    return this.wrapMatrixWithBrackets(matrixContent, matrixType || 'parentheses', elementPath, position, isSelected, element);\r\n  }\r\n\r\n  private stackToMathML(element: EquationElement, elementPath: string, isActive: boolean, position: number, isSelected: boolean = false): string {\r\n    const { rows, cols, cells } = element;\r\n\r\n    if (!rows || !cols || !cells) {\r\n      return \"<mtext>Invalid Stack</mtext>\";\r\n    }\r\n\r\n    // Generate the stack content using mtable\r\n    let stackContent = \"<mtable>\";\r\n\r\n    for (let row = 0; row < rows; row++) {\r\n      stackContent += \"<mtr>\";\r\n      for (let col = 0; col < cols; col++) {\r\n        const cellPath = `${elementPath}/cell_${row}_${col}`;\r\n        const cellElements = cells[`cell_${row}_${col}`] || [];\r\n\r\n        const cellContent = this.generateMathMLContent(cellPath, cellElements);\r\n        stackContent += `<mtd>${cellContent}</mtd>`;\r\n      }\r\n      stackContent += \"</mtr>\";\r\n    }\r\n\r\n    stackContent += \"</mtable>\";\r\n\r\n    // Stack has no brackets - just return the table content\r\n    const classes: string[] = [];\r\n    if (isSelected) classes.push(\"selected-structure\");\r\n\r\n    const classAttr = classes.length > 0 ? `class=\"${classes.join(\" \")}\"` : \"\";\r\n    const dataAttrs = `data-context-path=\"${elementPath}\" data-position=\"${position}\" data-element-id=\"${element.id}\"`;\r\n\r\n    return `<mrow ${classAttr} ${dataAttrs}>${stackContent}</mrow>`;\r\n  }\r\n\r\n  private casesToMathML(element: EquationElement, elementPath: string, isActive: boolean, position: number, isSelected: boolean = false): string {\r\n    const { rows, cols, cells } = element;\r\n\r\n    if (!rows || !cols || !cells) {\r\n      return \"<mtext>Invalid Cases</mtext>\";\r\n    }\r\n\r\n    // Generate the cases content using mtable\r\n    let casesContent = \"<mtable>\";\r\n\r\n    for (let row = 0; row < rows; row++) {\r\n      casesContent += \"<mtr>\";\r\n      for (let col = 0; col < cols; col++) {\r\n        const cellPath = `${elementPath}/cell_${row}_${col}`;\r\n        const cellElements = cells[`cell_${row}_${col}`] || [];\r\n\r\n        const cellContent = this.generateMathMLContent(cellPath, cellElements);\r\n        casesContent += `<mtd>${cellContent}</mtd>`;\r\n      }\r\n      casesContent += \"</mtr>\";\r\n    }\r\n\r\n    casesContent += \"</mtable>\";\r\n\r\n    // Wrap with left brace only\r\n    return this.wrapCasesWithBrace(casesContent, elementPath, position, isSelected, element);\r\n  }\r\n\r\n  private wrapCasesWithBrace(casesContent: string, elementPath: string, position: number, isSelected: boolean, element: EquationElement): string {\r\n    const classes: string[] = [];\r\n    if (isSelected) classes.push(\"selected-structure\");\r\n\r\n    const classAttr = classes.length > 0 ? `class=\"${classes.join(\" \")}\"` : \"\";\r\n\r\n    const styleAttr = this.buildStructureStyle(element, isSelected);\r\n    const dataAttrs = `data-context-path=\"${elementPath}\" data-position=\"${position}\" data-element-id=\"${element.id}\"`;\r\n\r\n    // Cases only have a left brace\r\n    return `<mrow ${classAttr} ${styleAttr} ${dataAttrs}>\r\n      <mo stretchy=\"true\">{</mo>\r\n      ${casesContent}\r\n    </mrow>`;\r\n  }\r\n\r\n  private wrapMatrixWithBrackets(matrixContent: string, matrixType: string, elementPath: string, position: number, isSelected: boolean, element: EquationElement): string {\r\n    const classes: string[] = [];\r\n    if (isSelected) classes.push(\"selected-structure\");\r\n\r\n    const classAttr = classes.length > 0 ? `class=\"${classes.join(\" \")}\"` : \"\";\r\n\r\n    const styleAttr = this.buildStructureStyle(element, isSelected);\r\n    const dataAttrs = `data-context-path=\"${elementPath}\" data-position=\"${position}\" data-element-id=\"${element.id}\"`;\r\n\r\n    switch (matrixType) {\r\n      case \"parentheses\":\r\n        return `<mrow ${classAttr} ${styleAttr} ${dataAttrs}>\r\n          <mo stretchy=\"true\">(</mo>\r\n          ${matrixContent}\r\n          <mo stretchy=\"true\">)</mo>\r\n        </mrow>`;\r\n      case \"brackets\":\r\n        return `<mrow ${classAttr} ${styleAttr} ${dataAttrs}>\r\n          <mo stretchy=\"true\">[</mo>\r\n          ${matrixContent}\r\n          <mo stretchy=\"true\">]</mo>\r\n        </mrow>`;\r\n      case \"braces\":\r\n        return `<mrow ${classAttr} ${styleAttr} ${dataAttrs}>\r\n          <mo stretchy=\"true\">{</mo>\r\n          ${matrixContent}\r\n          <mo stretchy=\"true\">}</mo>\r\n        </mrow>`;\r\n      case \"bars\":\r\n        return `<mrow ${classAttr} ${styleAttr} ${dataAttrs}>\r\n          <mo stretchy=\"true\">|</mo>\r\n          ${matrixContent}\r\n          <mo stretchy=\"true\">|</mo>\r\n        </mrow>`;\r\n      case \"double-bars\":\r\n        return `<mrow ${classAttr} ${styleAttr} ${dataAttrs}>\r\n          <mo stretchy=\"true\">∥</mo>\r\n          ${matrixContent}\r\n          <mo stretchy=\"true\">∥</mo>\r\n        </mrow>`;\r\n      case \"none\":\r\n      default:\r\n        return `<mrow ${classAttr} ${styleAttr} ${dataAttrs}>${matrixContent}</mrow>`;\r\n    }\r\n  }\r\n\r\n  private accentToMathML(\r\n    element: EquationElement,\r\n    elementPath: string,\r\n    isActive: boolean,\r\n    position: number,\r\n    isSelected: boolean = false\r\n  ): string {\r\n    const basePath = `${elementPath}/${element.id}/accentBase`;\r\n    const baseContent = this.generateMathMLContent(basePath, element.accentBase);\r\n\r\n    // Build attributes\r\n    const classes: string[] = [];\r\n    if (isSelected) classes.push(\"selected-structure\");\r\n\r\n    const classAttr = classes.length > 0 ? `class=\"${classes.join(\" \")}\"` : \"\";\r\n    const styleAttr = this.buildStructureStyle(element, isSelected);\r\n    const dataAttrs = `data-context-path=\"${elementPath}\" data-position=\"${position}\" data-element-id=\"${element.id}\"`;\r\n\r\n    // Get the accent symbol and determine if it should stretch\r\n    const accentSymbol = this.getAccentSymbol(element.accentType || \"hat\");\r\n    const isStretchy = this.isStretchyAccent(element.accentType || \"hat\");\r\n    const stretchyAttr = isStretchy ? ' stretchy=\"true\"' : '';\r\n\r\n    // For wide accents, apply background color directly\r\n    // For single accents, we'll use overlay approach for precise positioning\r\n    const isSingleAccent = !isStretchy;\r\n    let styledBaseContent = baseContent;\r\n    \r\n    if (!isSingleAccent) {\r\n      // Wide accents: apply light grey background directly\r\n      const baseStyle = 'style=\"background-color: #f0f0f0; border-radius: 2px; padding: 1px 2px; display: inline-block;\"';\r\n      styledBaseContent = `<mrow ${baseStyle} data-context-path=\"${basePath}\">${baseContent}</mrow>`;\r\n    } else {\r\n      // Single accents: use plain content\r\n      styledBaseContent = `<mrow data-context-path=\"${basePath}\">${baseContent}</mrow>`;\r\n    }\r\n\r\n    if (element.accentPosition === \"under\") {\r\n      // Handle braces with labels\r\n      if (\r\n        (element.accentType === \"underbrace\" &&\r\n          element.accentLabel &&\r\n          element.accentLabel.length > 0) ||\r\n        element.accentType === \"labeledunderbrace\"\r\n      ) {\r\n        const labelPath = `${elementPath}/${element.id}/accentLabel`;\r\n        const labelContent = this.generateMathMLContent(labelPath, element.accentLabel);\r\n        return `<munder ${classAttr} ${styleAttr} ${dataAttrs}>\r\n          <munder>\r\n            ${styledBaseContent}\r\n            <mo${stretchyAttr}>${accentSymbol}</mo>\r\n          </munder>\r\n          ${labelContent}\r\n        </munder>`;\r\n      } else {\r\n        return `<munder ${classAttr} ${styleAttr} ${dataAttrs}>\r\n          ${styledBaseContent}\r\n          <mo${stretchyAttr}>${accentSymbol}</mo>\r\n        </munder>`;\r\n      }\r\n    } else {\r\n      // Handle braces with labels\r\n      if (\r\n        (element.accentType === \"overbrace\" &&\r\n          element.accentLabel &&\r\n          element.accentLabel.length > 0) ||\r\n        element.accentType === \"labeledoverbrace\"\r\n      ) {\r\n        const labelPath = `${elementPath}/${element.id}/accentLabel`;\r\n        const labelContent = this.generateMathMLContent(labelPath, element.accentLabel);\r\n        return `<mover ${classAttr} ${styleAttr} ${dataAttrs}>\r\n          <mover>\r\n            ${styledBaseContent}\r\n            <mo${stretchyAttr}>${accentSymbol}</mo>\r\n          </mover>\r\n          ${labelContent}\r\n        </mover>`;\r\n      } else {\r\n        return `<mover ${classAttr} ${styleAttr} ${dataAttrs}>\r\n          ${styledBaseContent}\r\n          <mo${stretchyAttr}>${accentSymbol}</mo>\r\n        </mover>`;\r\n      }\r\n    }\r\n  }\r\n\r\n  private getAccentSymbol(accentType: string): string {\r\n    switch (accentType) {\r\n      case \"hat\":\r\n        return \"^\";\r\n      case \"tilde\":\r\n        return \"~\";\r\n      case \"bar\":\r\n        return \"‾\";\r\n      case \"dot\":\r\n        return \"·\";\r\n      case \"ddot\":\r\n        return \"¨\";\r\n      case \"vec\":\r\n        return \"→\";\r\n      case \"widehat\":\r\n        return \"^\"; // hat symbol for wide hat\r\n      case \"widetilde\":\r\n        return \"∼\"; // tilde operator for wide tilde\r\n      case \"widebar\":\r\n        return \"‾\"; // line for wide bar (will be stretchy)\r\n      case \"overrightarrow\":\r\n        return \"⟶\"; // long rightwards arrow for overrightarrow (more stretchable)\r\n      case \"overleftarrow\":\r\n        return \"⟵\"; // long leftwards arrow for overleftarrow (more stretchable)\r\n      case \"overleftrightarrow\":\r\n        return \"⟷\"; // left right arrow for overleftrightarrow (stretchable)\r\n      case \"overbrace\":\r\n        return \"⏞\";\r\n      case \"underbrace\":\r\n        return \"⏟\";\r\n      case \"labeledoverbrace\":\r\n        return \"⏞\"; // same symbol as overbrace\r\n      case \"labeledunderbrace\":\r\n        return \"⏟\"; // same symbol as underbrace\r\n      case \"overparen\":\r\n        return \"⏜\"; // arc over symbol for overparen\r\n      case \"underparen\":\r\n        return \"⏝\"; // arc under symbol for underparen\r\n      default:\r\n        return \"^\";\r\n    }\r\n  }\r\n\r\n  private isStretchyAccent(accentType: string): boolean {\r\n    // Wide accents and line-based accents should stretch\r\n    switch (accentType) {\r\n      case \"widehat\":\r\n      case \"widetilde\":\r\n      case \"widebar\":\r\n      case \"overrightarrow\":\r\n      case \"overleftarrow\":\r\n      case \"overleftrightarrow\":\r\n      case \"overbrace\":\r\n      case \"underbrace\":\r\n      case \"labeledoverbrace\":\r\n      case \"labeledunderbrace\":\r\n      case \"overparen\":\r\n      case \"underparen\":\r\n        return true;\r\n      // Single-character accents should NOT stretch (maintain fixed size)\r\n      case \"hat\":\r\n      case \"tilde\":\r\n      case \"bar\":\r\n      case \"dot\":\r\n      case \"ddot\":\r\n      case \"vec\":\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  private createWrapperOverlays(displayElement: HTMLElement, elements: EquationElement[]): void {\r\n    const overlayContainer = displayElement.querySelector(\".wrapper-overlays\") as HTMLElement;\r\n    if (!overlayContainer) return;\r\n\r\n    // Clear existing overlays\r\n    overlayContainer.innerHTML = \"\";\r\n\r\n    // Collect all underlined elements and group them by wrapper ID\r\n    const underlineGroups = new Map<string, { elements: HTMLElement[], type: \"single\" | \"double\" }>();\r\n    // Collect all canceled elements and group them by wrapper ID\r\n    const cancelGroups = new Map<string, HTMLElement[]>();\r\n\r\n    this.findElementsWithWrappers(elements, (element, domElement) => {\r\n      if (element.wrappers) {\r\n        // Handle underline wrappers\r\n        if (element.wrappers.underline) {\r\n          const wrapperId = element.wrappers.underline.id;\r\n          if (!underlineGroups.has(wrapperId)) {\r\n            underlineGroups.set(wrapperId, {\r\n              elements: [],\r\n              type: element.wrappers.underline.type,\r\n            });\r\n          }\r\n          underlineGroups.get(wrapperId)!.elements.push(domElement);\r\n        }\r\n\r\n        // Handle cancel wrappers\r\n        if (element.wrappers.cancel) {\r\n          const wrapperId = element.wrappers.cancel.id;\r\n          if (!cancelGroups.has(wrapperId)) {\r\n            cancelGroups.set(wrapperId, []);\r\n          }\r\n          cancelGroups.get(wrapperId)!.push(domElement);\r\n        }\r\n      }\r\n    });\r\n\r\n    // Create underlines for each group\r\n    underlineGroups.forEach((group, wrapperId) => {\r\n      this.createGroupedUnderlineOverlay(overlayContainer, group.elements, group.type);\r\n    });\r\n\r\n    // Create cancel overlays for each group\r\n    cancelGroups.forEach((elements, wrapperId) => {\r\n      this.createGroupedCancelOverlay(overlayContainer, elements);\r\n    });\r\n  }\r\n\r\n  private findElementsWithWrappers(\r\n    elements: EquationElement[],\r\n    callback: (element: EquationElement, domElement: HTMLElement) => void\r\n  ): void {\r\n    elements.forEach((element) => {\r\n      if (element.wrappers && Object.keys(element.wrappers).length > 0) {\r\n        // Find the DOM element for this equation element\r\n        const domElement = document.querySelector(`[data-element-id=\"${element.id}\"]`) as HTMLElement;\r\n        if (domElement) {\r\n          callback(element, domElement);\r\n        }\r\n      }\r\n\r\n      // Recursively check nested elements\r\n      if (element.numerator) this.findElementsWithWrappers(element.numerator, callback);\r\n      if (element.denominator) this.findElementsWithWrappers(element.denominator, callback);\r\n      if (element.base) this.findElementsWithWrappers(element.base, callback);\r\n      if (element.superscript) this.findElementsWithWrappers(element.superscript, callback);\r\n      if (element.subscript) this.findElementsWithWrappers(element.subscript, callback);\r\n      if (element.radicand) this.findElementsWithWrappers(element.radicand, callback);\r\n      if (element.index) this.findElementsWithWrappers(element.index, callback);\r\n      if (element.content) this.findElementsWithWrappers(element.content, callback);\r\n      if (element.function) this.findElementsWithWrappers(element.function, callback);\r\n      if (element.variable) this.findElementsWithWrappers(element.variable, callback);\r\n      if (element.integrand) this.findElementsWithWrappers(element.integrand, callback);\r\n      if (element.differentialVariable) this.findElementsWithWrappers(element.differentialVariable, callback);\r\n      if (element.operand) this.findElementsWithWrappers(element.operand, callback);\r\n      if (element.upperLimit) this.findElementsWithWrappers(element.upperLimit, callback);\r\n      if (element.lowerLimit) this.findElementsWithWrappers(element.lowerLimit, callback);\r\n\r\n      // Handle accent elements\r\n      if (element.accentBase) this.findElementsWithWrappers(element.accentBase, callback);\r\n      if (element.accentLabel) this.findElementsWithWrappers(element.accentLabel, callback);\r\n\r\n      // Handle matrix, stack, and cases cells\r\n      if (element.cells) {\r\n        Object.values(element.cells).forEach((cellElements) => {\r\n          this.findElementsWithWrappers(cellElements, callback);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private createGroupedUnderlineOverlay(overlayContainer: HTMLElement, elements: HTMLElement[], type: \"single\" | \"double\"): void {\r\n    if (elements.length === 0) return;\r\n\r\n    const containerRect = overlayContainer.getBoundingClientRect();\r\n\r\n    // Find the leftmost position, rightmost position, and lowest bottom\r\n    let leftmost = Infinity;\r\n    let rightmost = -Infinity;\r\n    let lowestBottom = -Infinity;\r\n\r\n    elements.forEach((element) => {\r\n      const rect = element.getBoundingClientRect();\r\n      leftmost = Math.min(leftmost, rect.left);\r\n      rightmost = Math.max(rightmost, rect.right);\r\n      lowestBottom = Math.max(lowestBottom, rect.bottom);\r\n    });\r\n\r\n    // Calculate position relative to overlay container\r\n    const left = leftmost - containerRect.left;\r\n    const width = rightmost - leftmost;\r\n    const top = lowestBottom - containerRect.top + 1; // Position slightly below the lowest element\r\n\r\n    if (type === \"double\") {\r\n      // Create double underline\r\n      const underline1 = document.createElement(\"div\");\r\n      underline1.style.cssText = `\r\n        position: absolute;\r\n        left: ${left}px;\r\n        top: ${top}px;\r\n        width: ${width}px;\r\n        height: 1px;\r\n        background-color: currentColor;\r\n        pointer-events: none;\r\n      `;\r\n\r\n      const underline2 = document.createElement(\"div\");\r\n      underline2.style.cssText = `\r\n        position: absolute;\r\n        left: ${left}px;\r\n        top: ${top + 3}px;\r\n        width: ${width}px;\r\n        height: 1px;\r\n        background-color: currentColor;\r\n        pointer-events: none;\r\n      `;\r\n\r\n      overlayContainer.appendChild(underline1);\r\n      overlayContainer.appendChild(underline2);\r\n    } else {\r\n      // Create single underline\r\n      const underline = document.createElement(\"div\");\r\n      underline.style.cssText = `\r\n        position: absolute;\r\n        left: ${left}px;\r\n        top: ${top}px;\r\n        width: ${width}px;\r\n        height: 1px;\r\n        background-color: currentColor;\r\n        pointer-events: none;\r\n      `;\r\n\r\n      overlayContainer.appendChild(underline);\r\n    }\r\n  }\r\n\r\n  private createGroupedCancelOverlay(overlayContainer: HTMLElement, elements: HTMLElement[]): void {\r\n    if (elements.length === 0) return;\r\n\r\n    const containerRect = overlayContainer.getBoundingClientRect();\r\n\r\n    // Find the bounding box of all elements\r\n    let leftmost = Infinity;\r\n    let rightmost = -Infinity;\r\n    let topmost = Infinity;\r\n    let bottommost = -Infinity;\r\n\r\n    elements.forEach((element) => {\r\n      const rect = element.getBoundingClientRect();\r\n      leftmost = Math.min(leftmost, rect.left);\r\n      rightmost = Math.max(rightmost, rect.right);\r\n      topmost = Math.min(topmost, rect.top);\r\n      bottommost = Math.max(bottommost, rect.bottom);\r\n    });\r\n\r\n    // Calculate position and size relative to overlay container\r\n    const left = leftmost - containerRect.left;\r\n    const top = topmost - containerRect.top;\r\n    const width = rightmost - leftmost;\r\n    const height = bottommost - topmost;\r\n\r\n    // Create SVG for the diagonal line\r\n    const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n    svg.style.cssText = `\r\n      position: absolute;\r\n      left: ${left}px;\r\n      top: ${top}px;\r\n      width: ${width}px;\r\n      height: ${height}px;\r\n      pointer-events: none;\r\n      overflow: visible;\r\n    `;\r\n\r\n    // Create the diagonal line from top-left to bottom-right\r\n    const line = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\r\n    line.setAttribute(\"x1\", String(width));\r\n    line.setAttribute(\"x2\", \"0\");\r\n    line.setAttribute(\"y1\", \"0\");\r\n    line.setAttribute(\"y2\", String(height));\r\n    line.setAttribute(\"stroke\", \"black\");\r\n    line.setAttribute(\"stroke-width\", \"1.5\");\r\n\r\n    svg.appendChild(line);\r\n    overlayContainer.appendChild(svg);\r\n  }\r\n\r\n  private functionToMathML(element: EquationElement, contextPath: string, isActive: boolean, position: number, isSelected: boolean = false): string {\r\n    const elementPath = `${contextPath}/${element.id}`;\r\n    \r\n    // Build class attribute for selection\r\n    const classes = [];\r\n    if (isActive) classes.push(\"active-element\");\r\n    if (isSelected) classes.push(\"selected-structure\");\r\n    const classAttr = classes.length > 0 ? `class=\"${classes.join(\" \")}\"` : \"\";\r\n    \r\n    const dataAttrs = `data-context-path=\"${elementPath}\" data-position=\"${position}\" data-element-id=\"${element.id}\" ${classAttr}`;\r\n    \r\n    // Get function type to determine structure\r\n    const functionType = element.functionType || \"\";\r\n    \r\n    // Generate content for different function parts\r\n    const argumentContent = this.generateMathMLContent(`${elementPath}/functionArgument`, element.functionArgument);\r\n    const baseContent = this.generateMathMLContent(`${elementPath}/functionBase`, element.functionBase);\r\n    const constraintContent = this.generateMathMLContent(`${elementPath}/functionConstraint`, element.functionConstraint);\r\n    \r\n    // Use centralized function type mapping\r\n    const structureType = FUNCTION_TYPE_MAP[functionType] || functionType;\r\n    \r\n    // Check if this is a user-defined function type\r\n    const isUserDefinedFunction = [\"function\", \"functionsub\", \"functionlim\"].includes(functionType!);\r\n    \r\n    // Handle user-defined functions first\r\n    if (isUserDefinedFunction) {\r\n      const nameContent = this.generateMathMLContent(`${elementPath}/functionName`, element.functionName);\r\n      \r\n      if (functionType === \"function\") {\r\n        // Simple user-defined function\r\n        return `<mrow ${dataAttrs}>\r\n          ${nameContent}\r\n          <mrow>${argumentContent}</mrow>\r\n        </mrow>`;\r\n        \r\n      } else if (functionType === \"functionsub\") {\r\n        // User-defined function with subscript\r\n        return `<mrow ${dataAttrs}>\r\n          <msub>\r\n            ${nameContent}\r\n            <mrow>${baseContent}</mrow>\r\n          </msub>\r\n          <mrow>${argumentContent}</mrow>\r\n        </mrow>`;\r\n        \r\n      } else if (functionType === \"functionlim\") {\r\n        // User-defined function with underscript\r\n        return `<mrow ${dataAttrs}>\r\n          <munder>\r\n            ${nameContent}\r\n            <mrow>${constraintContent}</mrow>\r\n          </munder>\r\n          <mrow>${argumentContent}</mrow>\r\n        </mrow>`;\r\n      }\r\n    }\r\n    \r\n    // Handle built-in functions\r\n    if (structureType === \"simple\") {\r\n      // Built-in simple functions: show predefined function name with argument\r\n      const functionNames: { [key: string]: string } = {\r\n        \"sin\": \"sin\", \"cos\": \"cos\", \"tan\": \"tan\", \"sec\": \"sec\", \"csc\": \"csc\", \"cot\": \"cot\",\r\n        \"asin\": \"sin⁻¹\", \"acos\": \"cos⁻¹\", \"atan\": \"tan⁻¹\",\r\n        \"log\": \"log\", \"ln\": \"ln\",\r\n        \"sinh\": \"sinh\", \"cosh\": \"cosh\", \"tanh\": \"tanh\",\r\n        \"asinh\": \"sinh⁻¹\", \"acosh\": \"cosh⁻¹\", \"atanh\": \"tanh⁻¹\"\r\n      };\r\n      const functionName = functionNames[functionType] || functionType;\r\n      \r\n      return `<mrow ${dataAttrs}>\r\n        <mo mathvariant=\"normal\">${functionName}</mo>\r\n        <mrow>${argumentContent}</mrow>\r\n      </mrow>`;\r\n      \r\n    } else if (structureType === \"functionsub\") {\r\n      // Built-in functions with subscript (like log_n)\r\n      return `<mrow ${dataAttrs}>\r\n        <msub>\r\n          <mo mathvariant=\"normal\">log</mo>\r\n          <mrow>${baseContent}</mrow>\r\n        </msub>\r\n        <mrow>${argumentContent}</mrow>\r\n      </mrow>`;\r\n      \r\n    } else if (structureType === \"functionlim\") {\r\n      // Built-in limit operators with underscript\r\n      const operatorNames: { [key: string]: string } = {\r\n        \"max\": \"max\", \"min\": \"min\", \"lim\": \"lim\",\r\n        \"argmax\": \"argmax\", \"argmin\": \"argmin\"\r\n      };\r\n      const operatorName = operatorNames[functionType] || functionType;\r\n      \r\n      return `<mrow ${dataAttrs}>\r\n        <munder>\r\n          <mo mathvariant=\"normal\">${operatorName}</mo>\r\n          <mrow>${constraintContent}</mrow>\r\n        </munder>\r\n        <mrow>${argumentContent}</mrow>\r\n      </mrow>`;\r\n      \r\n    }\r\n    \r\n    // Fallback\r\n    return `<mrow ${dataAttrs}><mrow>${argumentContent}</mrow></mrow>`;\r\n  }\r\n\r\n  private generateMathMLContent(contextPath: string, elements?: EquationElement[]): string {\r\n    if (!elements || elements.length === 0) {\r\n      const activeContextPath = this.contextManager.getActiveContextPath();\r\n      if (activeContextPath === contextPath) {\r\n        return `<mspace class=\"cursor\" data-context-path=\"${contextPath}\" data-position=\"0\" />`;\r\n      }\r\n      // Add active-context class to empty placeholder squares when they're in the active context\r\n      const isActiveContext = activeContextPath === contextPath;\r\n      const activeClass = isActiveContext ? \" active-context\" : \"\";\r\n      return `<mi class=\"placeholder-square${activeClass}\" data-context-path=\"${contextPath}\" data-position=\"0\">&#x25A1;</mi>`;\r\n    }\r\n    return this.generateMathML(elements, contextPath);\r\n  }\r\n}\r\n","import { EquationBuilder, EquationElement } from \"../core/equation-builder\";\r\nimport { ContextManager } from \"../core/context-manager\";\r\nimport { DisplayRenderer } from \"./display-renderer\";\r\nimport { LATEX_TO_UNICODE, getSymbolInfo, isSymbolDefaultItalic, hasMixedBrackets, FUNCTION_TYPE_MAP } from \"../core/centralized-config\";\r\n\r\nexport class InputHandler {\r\n  private equationBuilder: EquationBuilder;\r\n  private contextManager: ContextManager;\r\n  private displayRenderer: DisplayRenderer;\r\n  private displayElement: HTMLElement;\r\n  private isDragging = false;\r\n  private dragStartPosition = 0;\r\n  public onSelectionChange?: () => void;\r\n  private differentialStyle: \"italic\" | \"roman\" = \"italic\"; // Default to italic\r\n  private isInlineStyle: boolean = false; // Default to display style\r\n  private isTextMode: boolean = false; // Default to math mode\r\n\r\n  constructor(\r\n    equationBuilder: EquationBuilder,\r\n    contextManager: ContextManager,\r\n    displayRenderer: DisplayRenderer,\r\n    displayElement: HTMLElement\r\n  ) {\r\n    this.equationBuilder = equationBuilder;\r\n    this.contextManager = contextManager;\r\n    this.displayRenderer = displayRenderer;\r\n    this.displayElement = displayElement;\r\n  }\r\n\r\n  handleKeyPress(e: KeyboardEvent): void {\r\n    const key = e.key;\r\n\r\n    if (key === \"Backspace\") {\r\n      e.preventDefault();\r\n      this.handleBackspace();\r\n    } else if (key === \"Delete\") {\r\n      e.preventDefault();\r\n      this.handleDelete();\r\n    } else if (key === \"ArrowLeft\") {\r\n      e.preventDefault();\r\n      if (e.ctrlKey && e.shiftKey) {\r\n        // Ctrl+Shift+Left: Extend selection by whole structure\r\n        this.contextManager.extendSelectionToStructure(-1);\r\n      } else if (e.shiftKey) {\r\n        // Shift+Left: Extend selection by character\r\n        this.contextManager.extendSelection(-1);\r\n      } else if (e.ctrlKey) {\r\n        // Ctrl+Left: Enter structure to the left\r\n        this.contextManager.clearSelection();\r\n        this.contextManager.enterAdjacentStructure(\"left\");\r\n        // Ensure focus and cursor visibility after entering structure\r\n        setTimeout(() => {\r\n          this.focusHiddenInput();\r\n          this.scrollCursorIntoView();\r\n        }, 10);\r\n      } else {\r\n        // Left: Move cursor by character\r\n        this.contextManager.clearSelection();\r\n        this.contextManager.moveCursor(-1);\r\n      }\r\n      this.updateDisplay();\r\n    } else if (key === \"ArrowRight\") {\r\n      e.preventDefault();\r\n      if (e.ctrlKey && e.shiftKey) {\r\n        // Ctrl+Shift+Right: Extend selection by whole structure\r\n        this.contextManager.extendSelectionToStructure(1);\r\n      } else if (e.shiftKey) {\r\n        // Shift+Right: Extend selection by character\r\n        this.contextManager.extendSelection(1);\r\n      } else if (e.ctrlKey) {\r\n        // Ctrl+Right: Enter structure to the right\r\n        this.contextManager.clearSelection();\r\n        this.contextManager.enterAdjacentStructure(\"right\");\r\n        // Ensure focus and cursor visibility after entering structure\r\n        setTimeout(() => {\r\n          this.focusHiddenInput();\r\n          this.scrollCursorIntoView();\r\n        }, 10);\r\n      } else {\r\n        // Right: Move cursor by character\r\n        this.contextManager.clearSelection();\r\n        this.contextManager.moveCursor(1);\r\n      }\r\n      this.updateDisplay();\r\n    } else if (key === \"ArrowUp\" || key === \"ArrowDown\") {\r\n      e.preventDefault();\r\n      if (e.ctrlKey && e.shiftKey) {\r\n        // Ctrl+Shift+Up/Down: Select parent structure or current context\r\n        if (key === \"ArrowUp\") {\r\n          this.contextManager.selectParentStructure();\r\n        } else {\r\n          this.contextManager.selectCurrentContext();\r\n        }\r\n      } else if (!e.shiftKey) {\r\n        this.contextManager.clearSelection();\r\n        this.contextManager.navigateUpDown(key);\r\n      } else {\r\n        // With shift, maintain selection while navigating\r\n        this.contextManager.navigateUpDown(key);\r\n      }\r\n      this.updateDisplay();\r\n    } else if (key === \"Tab\") {\r\n      e.preventDefault();\r\n      this.contextManager.clearSelection();\r\n      // Tab cycles through structure fields\r\n      this.contextManager.navigateTab();\r\n      this.updateDisplay();\r\n    } else if (e.ctrlKey && key.toLowerCase() === \"a\") {\r\n      e.preventDefault();\r\n      this.selectAll();\r\n    } else if (e.ctrlKey && key.toLowerCase() === \"b\") {\r\n      e.preventDefault();\r\n      this.toggleBold();\r\n    } else if (e.ctrlKey && e.shiftKey && key.toLowerCase() === \"t\") {\r\n      e.preventDefault();\r\n      this.toggleTextMode();\r\n    } else if (e.ctrlKey && e.shiftKey && key === \" \") {\r\n      // Ctrl+Shift+Space: Select entire matrix when inside matrix cell\r\n      e.preventDefault();\r\n      this.selectEntireMatrix();\r\n    } else if (e.ctrlKey && key === \" \") {\r\n      // Ctrl+Space: Select structure at cursor\r\n      e.preventDefault();\r\n      if (this.contextManager.selectStructureAtCursor()) {\r\n        this.updateDisplay();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  handleInput(e: Event): void {\r\n    const input = e.target as HTMLInputElement;\r\n    const char = input.value.slice(-1);\r\n    input.value = \"\";\r\n\r\n    if (this.contextManager.isActive() && char) {\r\n      let processedChar = char;\r\n\r\n      // Check if we're in a function name context (should be treated as text mode)\r\n      const currentContextPath = this.contextManager.getActiveContextPath();\r\n      const isInFunctionName = currentContextPath.endsWith(\"/functionName\");\r\n\r\n      // Only convert operators in math mode (not in text mode or function names)\r\n      if (!this.isTextMode && !isInFunctionName) {\r\n        // Convert + and - to proper mathematical operator symbols\r\n        if (char === \"+\") {\r\n          processedChar = \"+\"; // Keep as regular plus but ensure it's treated as operator\r\n        } else if (char === \"-\") {\r\n          processedChar = \"−\"; // Proper minus sign (U+2212), not hyphen-minus\r\n        }\r\n      }\r\n\r\n      // Sanitize the character before inserting\r\n      const sanitizedChar = this.sanitizeInputChar(processedChar);\r\n      \r\n      if (sanitizedChar) {\r\n        // Create text element with default styling\r\n        const element = this.equationBuilder.createTextElement(sanitizedChar);\r\n\r\n        // In text mode, apply text wrapper formatting and don't apply italic\r\n        if (this.isTextMode) {\r\n          element.textMode = true;\r\n          element.italic = false;\r\n        } else if (isInFunctionName) {\r\n          // For function names, don't set textMode (operatorname handles styling)\r\n          // but do set italic to false for upright text\r\n          element.italic = false;\r\n        } else {\r\n          // Apply default italic styling based on character type (math mode)\r\n          const shouldBeItalic = this.getDefaultItalicForSymbol(sanitizedChar, sanitizedChar);\r\n          if (shouldBeItalic !== undefined) {\r\n            element.italic = shouldBeItalic;\r\n          }\r\n        }\r\n\r\n        // Insert the element instead of just the text\r\n        this.contextManager.insertElementAtCursor(element);\r\n        this.updateDisplay();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDisplayClick(e: MouseEvent): void {\r\n    e.stopPropagation();\r\n    const target = e.target as HTMLElement;\r\n\r\n    // Check if click is on scrollbar area more precisely\r\n    const rect = this.displayElement.getBoundingClientRect();\r\n    const clickX = e.clientX - rect.left;\r\n    const clickY = e.clientY - rect.top;\r\n\r\n    // Check if click is in the horizontal scrollbar area (bottom of the element)\r\n    if (clickY > this.displayElement.clientHeight) {\r\n      return; // Don't move cursor when clicking on horizontal scrollbar\r\n    }\r\n\r\n    // Check if click is in the vertical scrollbar area (right edge)\r\n    if (clickX > this.displayElement.clientWidth) {\r\n      return; // Don't move cursor when clicking on vertical scrollbar\r\n    }\r\n\r\n    // Find an element with a context path, starting from the clicked element\r\n    let contextElement: HTMLElement | null = null;\r\n\r\n    // Strategy: Find the most appropriate context level for editing\r\n    // We want to find the container that represents an editable context (root, numerator, denominator, etc.)\r\n\r\n    // Start with the clicked target and traverse up to find the right context level\r\n    let currentElement: HTMLElement | null = target;\r\n\r\n    while (currentElement) {\r\n      const contextPath = currentElement.dataset.contextPath;\r\n\r\n      if (contextPath) {\r\n        // Check if this is an appropriate editing context level\r\n        if (\r\n          contextPath === \"root\" ||\r\n          contextPath.endsWith(\"/numerator\") ||\r\n          contextPath.endsWith(\"/denominator\") ||\r\n          contextPath.endsWith(\"/radicand\") ||\r\n          contextPath.endsWith(\"/index\") ||\r\n          contextPath.endsWith(\"/base\") ||\r\n          contextPath.endsWith(\"/superscript\") ||\r\n          contextPath.endsWith(\"/subscript\") ||\r\n          contextPath.match(/\\/cell_\\d+_\\d+$/) || // Matrix, stack, and cases cell pattern\r\n          contextPath.endsWith(\"/content\") ||\r\n          contextPath.endsWith(\"/lowerLimit\") ||\r\n          contextPath.endsWith(\"/upperLimit\") ||\r\n          contextPath.endsWith(\"/operand\") ||\r\n          contextPath.endsWith(\"/function\") ||\r\n          contextPath.endsWith(\"/variable\") ||\r\n          contextPath.endsWith(\"/order\") ||\r\n          contextPath.endsWith(\"/integrand\") ||\r\n          contextPath.endsWith(\"/differentialVariable\") ||\r\n          contextPath.endsWith(\"/accentBase\") ||\r\n          contextPath.endsWith(\"/accentLabel\") ||\r\n          contextPath.endsWith(\"/functionArgument\") ||\r\n          contextPath.endsWith(\"/functionBase\") ||\r\n          contextPath.endsWith(\"/functionConstraint\") ||\r\n          contextPath.endsWith(\"/functionName\")\r\n        ) {\r\n          contextElement = currentElement;\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Move up to parent element\r\n      currentElement = currentElement.parentElement;\r\n    }\r\n\r\n    // If we still don't have one, look for the main equation container\r\n    if (!contextElement) {\r\n      contextElement = target.closest(\".equation-container\") as HTMLElement;\r\n      if (!contextElement && target.classList.contains(\"equation-container\")) {\r\n        contextElement = target;\r\n      }\r\n    }\r\n\r\n    // Don't clear selection if clicking on formatting buttons, dropdowns, or tab panel\r\n    const isFormattingClick =\r\n      target.closest(\".format-btn\") ||\r\n      target.closest(\".tab-panel\") ||\r\n      target.closest(\".underline-dropdown-container\") ||\r\n      target.closest(\".underline-dropdown\") ||\r\n      target.closest(\".color-dropdown-container\") ||\r\n      target.closest(\".color-panel\") ||\r\n      target.closest(\".font-size-container\") ||\r\n      target.closest(\".font-size-dropdown\");\r\n\r\n    // Clear selection unless this is part of a drag operation or formatting click\r\n    // Don't clear selection immediately on mouse down - wait to see if it's a drag\r\n    if (!isFormattingClick) {\r\n      // Only clear selection if this is not a mouse down event that could start a drag\r\n      // We'll clear it in handleMouseUp if no dragging occurred\r\n      if (this.isDragging === false && e.type !== \"mousedown\") {\r\n        this.contextManager.clearSelection();\r\n        // Notify that selection changed\r\n        if (this.onSelectionChange) {\r\n          this.onSelectionChange();\r\n        }\r\n      }\r\n    }\r\n\r\n    if (contextElement) {\r\n      const path = contextElement.dataset.contextPath;\r\n\r\n      if (path) {\r\n        // Enter the appropriate context\r\n        if (path === \"root\") {\r\n          this.contextManager.enterRootContext();\r\n        } else {\r\n          this.contextManager.enterContextPath(path);\r\n        }\r\n\r\n        // Get the context and calculate position\r\n        const context = this.contextManager.getContext(path);\r\n        if (context) {\r\n          const position = this.getClickPosition(e, contextElement, context.array);\r\n          this.contextManager.setCursorPosition(position);\r\n          this.dragStartPosition = position;\r\n        }\r\n      } else {\r\n        // No path found, default to root\r\n        this.contextManager.enterRootContext();\r\n        const position = this.getClickPosition(\r\n          e,\r\n          contextElement,\r\n          this.equationBuilder.getEquation()\r\n        );\r\n        this.contextManager.setCursorPosition(position);\r\n        this.dragStartPosition = position;\r\n      }\r\n    } else {\r\n      // No context element found - default to root context and try to position smartly\r\n      this.contextManager.enterRootContext();\r\n      const equation = this.equationBuilder.getEquation();\r\n\r\n      if (equation.length === 0) {\r\n        // Empty equation, position at start\r\n        this.contextManager.setCursorPosition(0);\r\n        this.dragStartPosition = 0;\r\n      } else {\r\n        // Try to use the general click position logic for the main container\r\n        const mainContainer = this.displayElement.querySelector(\r\n          '[data-context-path=\"root\"]'\r\n        ) as HTMLElement;\r\n        if (mainContainer) {\r\n          const position = this.getClickPosition(e, mainContainer, equation);\r\n          this.contextManager.setCursorPosition(position);\r\n          this.dragStartPosition = position;\r\n        } else {\r\n          // Fallback to end of equation\r\n          this.contextManager.setCursorPosition(equation.length);\r\n          this.dragStartPosition = equation.length;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.focusHiddenInput();\r\n    this.updateDisplay();\r\n  }\r\n\r\n  handleDocumentClick(event: Event): void {\r\n    const display = this.displayElement;\r\n    const tabPanel = document.querySelector(\".tab-panel\");\r\n    const target = event.target as HTMLElement;\r\n\r\n    // Check if clicked element is a formatting button or dropdown\r\n    const isFormattingClick =\r\n      target.closest(\".format-btn\") ||\r\n      target.closest(\".underline-dropdown-container\") ||\r\n      target.closest(\".underline-dropdown\") ||\r\n      target.closest(\".color-dropdown-container\") ||\r\n      target.closest(\".color-panel\") ||\r\n      target.closest(\".font-size-container\") ||\r\n      target.closest(\".font-size-dropdown\");\r\n\r\n    if (\r\n      this.contextManager.isActive() &&\r\n      display &&\r\n      !display.contains(target) &&\r\n      tabPanel &&\r\n      !tabPanel.contains(target) &&\r\n      !isFormattingClick // Don't exit editing mode when clicking formatting buttons\r\n    ) {\r\n      this.contextManager.exitEditingMode();\r\n      this.blurHiddenInput();\r\n      this.updateDisplay();\r\n    }\r\n  }\r\n\r\n  handleFontSizeChange(e: Event): void {\r\n    const input = e.target as HTMLInputElement;\r\n    const newSize = parseInt(input.value);\r\n\r\n    if (!isNaN(newSize) && newSize >= 6 && newSize <= 144) {\r\n      this.displayRenderer.setGlobalFontSize(newSize);\r\n      this.updateDisplay();\r\n    }\r\n  }\r\n\r\n  insertSymbol(symbol: string): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    // Convert LaTeX commands to Unicode symbols for display\r\n    const unicodeSymbol = this.convertLatexToUnicode(symbol);\r\n\r\n    // Create text element with default styling based on symbol type\r\n    const element = this.equationBuilder.createTextElement(unicodeSymbol);\r\n\r\n    // Apply default italic styling based on symbol configuration\r\n    const shouldBeItalic = this.getDefaultItalicForSymbol(symbol, unicodeSymbol);\r\n    if (shouldBeItalic !== undefined) {\r\n      element.italic = shouldBeItalic;\r\n    }\r\n\r\n    // Insert the element instead of just the text\r\n    this.contextManager.insertElementAtCursor(element);\r\n    this.updateDisplay();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  private getDefaultItalicForSymbol(originalSymbol: string, unicodeSymbol: string): boolean | undefined {\r\n    // Check if we have explicit configuration for this LaTeX symbol\r\n    const symbolInfo = getSymbolInfo(originalSymbol);\r\n    if (symbolInfo) {\r\n      return symbolInfo.defaultItalic;\r\n    }\r\n\r\n    // Handle direct text input (English letters)\r\n    if (originalSymbol === unicodeSymbol) {\r\n      // English lowercase and uppercase letters are naturally italic\r\n      if (/^[a-zA-Z]$/.test(unicodeSymbol)) {\r\n        return undefined; // naturally italic\r\n      }\r\n      // Numbers should render normally without italic formatting\r\n      if (/^[0-9]$/.test(unicodeSymbol)) {\r\n        return undefined; // Let numbers render normally\r\n      }\r\n      // Basic operators should not be italic\r\n      if (/^[+\\-=<>(){}[\\]|]$/.test(unicodeSymbol)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // No default - let normal rendering logic decide\r\n    return undefined;\r\n  }\r\n\r\n  private convertLatexToUnicode(latex: string): string {\r\n    return LATEX_TO_UNICODE[latex] || latex;\r\n  }\r\n\r\n  insertFraction(): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    const fraction = this.equationBuilder.createFractionElement();\r\n    this.contextManager.insertElementAtCursor(fraction);\r\n\r\n    // Move context into the new fraction's numerator\r\n    const numeratorPath = this.contextManager.getElementContextPath(fraction.id, \"numerator\");\r\n    this.contextManager.enterContextPath(numeratorPath, 0);\r\n\r\n    this.updateDisplay();\r\n    this.equationBuilder.updateParenthesesScaling();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  insertDisplayFraction(): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    const displayFraction = this.equationBuilder.createDisplayFractionElement();\r\n    this.contextManager.insertElementAtCursor(displayFraction);\r\n\r\n    // Move context into the new display fraction's numerator\r\n    const numeratorPath = this.contextManager.getElementContextPath(displayFraction.id, \"numerator\");\r\n    this.contextManager.enterContextPath(numeratorPath, 0);\r\n\r\n    this.updateDisplay();\r\n    this.equationBuilder.updateParenthesesScaling();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  insertBevelledFraction(): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    const bevelledFraction = this.equationBuilder.createBevelledFractionElement();\r\n    this.contextManager.insertElementAtCursor(bevelledFraction);\r\n\r\n    // Move context into the new bevelled fraction's numerator\r\n    const numeratorPath = this.contextManager.getElementContextPath(bevelledFraction.id, \"numerator\");\r\n    this.contextManager.enterContextPath(numeratorPath, 0);\r\n\r\n    this.updateDisplay();\r\n    this.equationBuilder.updateParenthesesScaling();\r\n  }\r\n\r\n  insertSquareRoot(): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    const sqrtElement = this.equationBuilder.createSquareRootElement();\r\n    this.contextManager.insertElementAtCursor(sqrtElement);\r\n\r\n    // Move context into the new sqrt's radicand\r\n    const radicandPath = this.contextManager.getElementContextPath(sqrtElement.id, \"radicand\");\r\n    this.contextManager.enterContextPath(radicandPath, 0);\r\n\r\n    this.updateDisplay();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  insertNthRoot(): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    const nthRootElement = this.equationBuilder.createNthRootElement();\r\n    this.contextManager.insertElementAtCursor(nthRootElement);\r\n\r\n    // Move context into the new nthroot's index\r\n    const indexPath = this.contextManager.getElementContextPath(nthRootElement.id, \"index\");\r\n    this.contextManager.enterContextPath(indexPath, 0);\r\n\r\n    this.updateDisplay();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  insertScript(type: \"superscript\" | \"subscript\"): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    const scriptElement = this.equationBuilder.createScriptElement(\r\n      type === \"superscript\",\r\n      type === \"subscript\"\r\n    );\r\n    this.contextManager.insertElementAtCursor(scriptElement);\r\n\r\n    // Move context into the new script's base first\r\n    const basePath = this.contextManager.getElementContextPath(scriptElement.id, \"base\");\r\n    this.contextManager.enterContextPath(basePath, 0);\r\n\r\n    this.updateDisplay();\r\n  }\r\n\r\n  insertSuperscriptSubscript(): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    const scriptElement = this.equationBuilder.createScriptElement(true, true);\r\n    this.contextManager.insertElementAtCursor(scriptElement);\r\n\r\n    // Move context into the new script's base first\r\n    const basePath = this.contextManager.getElementContextPath(scriptElement.id, \"base\");\r\n    this.contextManager.enterContextPath(basePath, 0);\r\n\r\n    this.updateDisplay();\r\n  }\r\n\r\n  insertBracket(leftSymbol: string, rightSymbol: string): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    const bracketElement = this.equationBuilder.createBracketElement(leftSymbol, rightSymbol);\r\n    this.contextManager.insertElementAtCursor(bracketElement);\r\n\r\n    // Update bracket nesting depths\r\n    this.equationBuilder.updateBracketNesting();\r\n\r\n    // Move context into the new bracket's content\r\n    const contentPath = this.contextManager.getElementContextPath(bracketElement.id, \"content\");\r\n    this.contextManager.enterContextPath(contentPath, 0);\r\n\r\n    this.updateDisplay();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  insertCustomBrackets(leftBracket: string, rightBracket: string): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    // Check if we're in a derivative function context and validate brackets\r\n    const activeContextPath = this.contextManager.getActiveContextPath();\r\n    if (activeContextPath && activeContextPath.includes(\"function\")) {\r\n      const context = this.contextManager.getContext(activeContextPath);\r\n      if (context && context.parent?.type === \"derivative\") {\r\n        // Check if this creates mixed brackets\r\n        const currentText = context.array.map((el: any) => el.value || \"\").join(\"\");\r\n        const newText = currentText + leftBracket + rightBracket;\r\n        if (hasMixedBrackets(newText)) {\r\n          this.contextManager.showMixedBracketsError();\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    const bracketElement = this.equationBuilder.createBracketElement(leftBracket, rightBracket);\r\n    this.contextManager.insertElementAtCursor(bracketElement);\r\n\r\n    // Update bracket nesting depths\r\n    this.equationBuilder.updateBracketNesting();\r\n\r\n    // Move context into the new bracket's content\r\n    const contentPath = this.contextManager.getElementContextPath(bracketElement.id, \"content\");\r\n    this.contextManager.enterContextPath(contentPath, 0);\r\n\r\n    this.updateDisplay();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  insertSummation(): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    // Create the summation script element with both subscript and superscript\r\n    const summationElement = this.equationBuilder.createScriptElement(true, true);\r\n\r\n    // Set the base to the summation symbol\r\n    const sumSymbol = this.equationBuilder.createTextElement(\"∑\");\r\n    summationElement.base = [sumSymbol];\r\n\r\n    this.contextManager.insertElementAtCursor(summationElement);\r\n\r\n    // Move context into the subscript first (lower limit)\r\n    const subscriptPath = this.contextManager.getElementContextPath(summationElement.id, \"subscript\");\r\n    this.contextManager.enterContextPath(subscriptPath, 0);\r\n\r\n    this.updateDisplay();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  insertLargeOperator(\r\n    operator: string,\r\n    displayMode: \"inline\" | \"display\" = \"inline\",\r\n    limitMode: \"default\" | \"nolimits\" | \"limits\" = \"default\"\r\n  ): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    const largeOperatorElement = this.equationBuilder.createLargeOperatorElement(operator, displayMode, limitMode);\r\n    \r\n    this.contextManager.insertElementAtCursor(largeOperatorElement);\r\n\r\n    // Move context into the operand first for better UX\r\n    const operandPath = this.contextManager.getElementContextPath(largeOperatorElement.id, \"operand\");\r\n    this.contextManager.enterContextPath(operandPath, 0);\r\n\r\n    this.updateDisplay();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  insertAccent(accentType: string, position: \"over\" | \"under\"): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    if (this.contextManager.hasSelection()) {\r\n      // Apply to selection (extract and wrap)\r\n      const selectedElements = this.contextManager.extractSelection();\r\n      const accentElement = this.equationBuilder.createAccentElement(\r\n        accentType,\r\n        position,\r\n        selectedElements\r\n      );\r\n      this.contextManager.insertElementAtCursor(accentElement);\r\n\r\n      // For labeled braces, move cursor to label area\r\n      if (accentType === \"labeledoverbrace\" || accentType === \"labeledunderbrace\") {\r\n        const labelPath = this.contextManager.getElementContextPath(accentElement.id, \"accentLabel\");\r\n        this.contextManager.enterContextPath(labelPath, 0);\r\n      }\r\n    } else {\r\n      // Insert new with empty base (creates editable input box)\r\n      const accentElement = this.equationBuilder.createAccentElement(\r\n        accentType,\r\n        position,\r\n        [] // Empty array creates an input box like fractions\r\n      );\r\n      this.contextManager.insertElementAtCursor(accentElement);\r\n\r\n      // Set cursor inside accent base\r\n      const basePath = this.contextManager.getElementContextPath(accentElement.id, \"accentBase\");\r\n      this.contextManager.enterContextPath(basePath, 0);\r\n    }\r\n\r\n    this.updateDisplay();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  // Integral insertion methods\r\n  insertIntegral(\r\n    integralType: \"single\" | \"double\" | \"triple\" | \"contour\" = \"single\",\r\n    displayMode: \"inline\" | \"display\" = \"inline\",\r\n    isDefinite: boolean = false,\r\n    limitMode: \"default\" | \"nolimits\" | \"limits\" = \"default\",\r\n    limitConfig: \"both\" | \"lower-only\" | \"upper-only\" | \"none\" = \"both\"\r\n  ): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    // Create integral element with the current differential style\r\n    const integralElement = this.equationBuilder.createIntegralElement(\r\n      integralType,\r\n      displayMode,\r\n      this.differentialStyle === \"roman\" ? \"roman\" : \"italic\",\r\n      isDefinite,\r\n      limitMode,\r\n      limitConfig\r\n    );\r\n\r\n    this.contextManager.insertElementAtCursor(integralElement);\r\n\r\n    // Move context into the integrand (first input block)\r\n    const integrandPath = this.contextManager.getElementContextPath(\r\n      integralElement.id,\r\n      \"integrand\"\r\n    );\r\n    this.contextManager.enterContextPath(integrandPath, 0);\r\n\r\n    this.updateDisplay();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  // Convenience methods for specific integral types\r\n  insertSingleIntegral(displayMode: \"inline\" | \"display\" = \"inline\"): void {\r\n    this.insertIntegral(\"single\", displayMode, false);\r\n  }\r\n\r\n  insertDoubleIntegral(displayMode: \"inline\" | \"display\" = \"inline\"): void {\r\n    this.insertIntegral(\"double\", displayMode, false);\r\n  }\r\n\r\n  insertTripleIntegral(displayMode: \"inline\" | \"display\" = \"inline\"): void {\r\n    this.insertIntegral(\"triple\", displayMode, false);\r\n  }\r\n\r\n  insertTripleIntegralSubscript(displayMode: \"inline\" | \"display\" = \"inline\"): void {\r\n    this.insertIntegral(\"triple\", displayMode, true, \"nolimits\", \"lower-only\");\r\n  }\r\n\r\n  insertTripleIntegralLower(displayMode: \"inline\" | \"display\" = \"inline\"): void {\r\n    this.insertIntegral(\"triple\", displayMode, true, \"limits\", \"lower-only\");\r\n  }\r\n\r\n  insertDoubleIntegralSubscript(displayMode: \"inline\" | \"display\" = \"inline\"): void {\r\n    this.insertIntegral(\"double\", displayMode, true, \"nolimits\", \"lower-only\");\r\n  }\r\n\r\n  insertDoubleIntegralLower(displayMode: \"inline\" | \"display\" = \"inline\"): void {\r\n    this.insertIntegral(\"double\", displayMode, true, \"limits\", \"lower-only\");\r\n  }\r\n\r\n  insertContourIntegral(displayMode: \"inline\" | \"display\" = \"inline\"): void {\r\n    this.insertIntegral(\"contour\", displayMode, false);\r\n  }\r\n\r\n  insertContourIntegralSubscript(displayMode: \"inline\" | \"display\" = \"inline\"): void {\r\n    this.insertIntegral(\"contour\", displayMode, true, \"nolimits\", \"lower-only\");\r\n  }\r\n\r\n  insertContourIntegralLower(displayMode: \"inline\" | \"display\" = \"inline\"): void {\r\n    this.insertIntegral(\"contour\", displayMode, true, \"limits\", \"lower-only\");\r\n  }\r\n\r\n  insertDefiniteIntegral(\r\n    integralType: \"single\" | \"double\" | \"triple\" | \"contour\" = \"single\",\r\n    displayMode: \"inline\" | \"display\" = \"inline\",\r\n    limitMode: \"nolimits\" | \"limits\" = \"nolimits\"\r\n  ): void {\r\n    this.insertIntegral(integralType, displayMode, true, limitMode);\r\n  }\r\n\r\n  // Legacy method - redirects to new implementation\r\n  insertIndefiniteIntegral(displayMode: \"inline\" | \"display\" = \"inline\"): void {\r\n    // Use the new integral method\r\n    this.insertSingleIntegral(displayMode);\r\n  }\r\n\r\n  private updateDisplay(): void {\r\n    // Recalculate bracket nesting depths before rendering to ensure visual sizing is correct\r\n    this.equationBuilder.updateBracketNesting();\r\n\r\n    this.displayRenderer.updateDisplay(this.displayElement, this.equationBuilder.getEquation());\r\n\r\n    // Ensure the hidden input is focused if we are in an active context\r\n    // Use setTimeout to ensure focus happens after DOM updates are complete\r\n    if (this.contextManager.isActive()) {\r\n      setTimeout(() => {\r\n        this.focusHiddenInput();\r\n        this.scrollCursorIntoView();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  private focusHiddenInput(): void {\r\n    const hiddenInput = document.getElementById(\"hiddenInput\") as HTMLInputElement;\r\n    if (hiddenInput) {\r\n      hiddenInput.focus();\r\n    }\r\n  }\r\n\r\n  private blurHiddenInput(): void {\r\n    const hiddenInput = document.getElementById(\"hiddenInput\") as HTMLInputElement;\r\n    if (hiddenInput) {\r\n      hiddenInput.blur();\r\n    }\r\n  }\r\n\r\n  private scrollCursorIntoView(): void {\r\n    const cursor = this.displayElement.querySelector(\".cursor\") as HTMLElement;\r\n    if (cursor) {\r\n      // Scroll the cursor into view horizontally\r\n      cursor.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"nearest\",\r\n        inline: \"nearest\",\r\n      });\r\n    }\r\n  }\r\n\r\n  private isMatrixCellPath(contextPath: string): boolean {\r\n    return /\\/cell_\\d+_\\d+$/.test(contextPath);\r\n  }\r\n\r\n  private getMatrixElementFromCellPath(\r\n    cellPath: string\r\n  ): { matrixPath: string; matrixElement: any } | null {\r\n    const match = cellPath.match(/^(.*?)\\/cell_\\d+_\\d+$/);\r\n    if (!match) return null;\r\n\r\n    const matrixPath = match[1];\r\n\r\n    // Find the matrix element by traversing the path\r\n    const pathParts = matrixPath.split(\"/\");\r\n    let currentContext = this.equationBuilder.getEquation();\r\n\r\n    // Skip 'root' if present\r\n    let startIndex = pathParts[0] === \"root\" ? 1 : 0;\r\n\r\n    for (let i = startIndex; i < pathParts.length; i++) {\r\n      const part = pathParts[i];\r\n      const element = currentContext.find((el: any) => el.id === part);\r\n\r\n      if (!element) return null;\r\n\r\n      if (i === pathParts.length - 1) {\r\n        // This should be the matrix element\r\n        if (element.type === \"matrix\") {\r\n          return { matrixPath, matrixElement: element };\r\n        }\r\n      } else {\r\n        // Navigate deeper into the structure\r\n        const nextPart = pathParts[i + 1];\r\n        currentContext = (element as any)[nextPart];\r\n        if (!currentContext) return null;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  selectEntireMatrix(): void {\r\n    const currentPath = this.contextManager.getActiveContextPath();\r\n    if (!currentPath || !this.isMatrixCellPath(currentPath)) {\r\n      return;\r\n    }\r\n\r\n    const matrixInfo = this.getMatrixElementFromCellPath(currentPath);\r\n    if (!matrixInfo) return;\r\n\r\n    // Use Ctrl+Space functionality to select the entire matrix structure\r\n    if (this.contextManager.selectStructureAtCursor()) {\r\n      this.updateDisplay();\r\n    }\r\n  }\r\n\r\n  handleMouseDown(e: MouseEvent): void {\r\n    this.isDragging = false;\r\n\r\n    this.handleDisplayClick(e);\r\n  }\r\n\r\n  handleMouseMove(e: MouseEvent): void {\r\n    if (e.buttons === 1 && this.contextManager.isActive()) {\r\n      // Left mouse button is down\r\n      this.isDragging = true;\r\n      const target = e.target as HTMLElement;\r\n\r\n      // Find an element with a context path, starting from the clicked element\r\n      let contextElement = target.closest(\"[data-context-path]\") as HTMLElement;\r\n\r\n      // If we didn't find a context element, look for the main equation container\r\n      if (!contextElement) {\r\n        contextElement = target.closest(\".equation-container\") as HTMLElement;\r\n      }\r\n\r\n      if (contextElement) {\r\n        const path = contextElement.dataset.contextPath;\r\n        const currentPath = this.contextManager.getActiveContextPath();\r\n\r\n        // Only allow selection within the same context\r\n        if (path === currentPath) {\r\n          const context = this.contextManager.getContext(path!);\r\n          if (context) {\r\n            const currentPosition = this.getClickPosition(e, contextElement, context.array);\r\n\r\n            this.contextManager.setSelection(this.dragStartPosition, currentPosition, path!);\r\n\r\n            // Update cursor position to the end of selection for consistent state\r\n            const selection = this.contextManager.getSelection();\r\n            this.contextManager.setCursorPosition(selection.endPosition);\r\n\r\n            this.updateDisplay();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleMouseUp(e: MouseEvent): void {\r\n    // If we weren't dragging, clear any existing selection (this was a simple click)\r\n    if (!this.isDragging) {\r\n      // Don't clear selection if clicking on formatting buttons\r\n      const target = e.target as HTMLElement;\r\n      const isFormattingClick =\r\n        target.closest(\".format-btn\") ||\r\n        target.closest(\".tab-panel\") ||\r\n        target.closest(\".underline-dropdown-container\") ||\r\n        target.closest(\".underline-dropdown\") ||\r\n        target.closest(\".color-dropdown-container\") ||\r\n        target.closest(\".color-panel\") ||\r\n        target.closest(\".font-size-container\") ||\r\n        target.closest(\".font-size-dropdown\");\r\n\r\n      if (!isFormattingClick) {\r\n        this.contextManager.clearSelection();\r\n      }\r\n    }\r\n\r\n    this.isDragging = false;\r\n\r\n    // Notify that selection may have changed\r\n    if (this.onSelectionChange) {\r\n      this.onSelectionChange();\r\n    }\r\n  }\r\n\r\n  private getClickPosition(e: MouseEvent, container: HTMLElement, elements: any[]): number {\r\n    // If no elements, return position 0\r\n    if (elements.length === 0) {\r\n      return 0;\r\n    }\r\n\r\n    const clickX = e.clientX;\r\n    const containerRect = container.getBoundingClientRect();\r\n    const containerPath = container.dataset.contextPath;\r\n\r\n    // For character-level positioning, we need to look at ALL visible elements in the container\r\n    // regardless of their exact context path, but prioritize those that match our context\r\n    const allVisibleElements = Array.from(container.querySelectorAll('mi, mo, mn, mfrac, msqrt, msup, msub, msubsup, mroot')).filter(el => {\r\n      const element = el as HTMLElement;\r\n      return !element.classList.contains(\"cursor\") && element.dataset.position !== undefined;\r\n    });\r\n\r\n    if (allVisibleElements.length === 0) {\r\n      // No visible elements, determine position based on click location\r\n      const relativeX = clickX - containerRect.left;\r\n      return relativeX < containerRect.width / 2 ? 0 : elements.length;\r\n    }\r\n\r\n    // Sort elements by their visual position (left to right)\r\n    allVisibleElements.sort((a, b) => {\r\n      const aRect = a.getBoundingClientRect();\r\n      const bRect = b.getBoundingClientRect();\r\n      return aRect.left - bRect.left;\r\n    });\r\n\r\n    // Get the rightmost element to check if we're clicking far to the right\r\n    const lastElement = allVisibleElements[allVisibleElements.length - 1] as HTMLElement;\r\n    const lastElementRect = lastElement.getBoundingClientRect();\r\n\r\n    // If clicking far to the right of the last element (beyond its right edge + some margin),\r\n    // position at the end of the equation\r\n    if (clickX > lastElementRect.right + 10) {\r\n      return elements.length;\r\n    }\r\n\r\n    // Find the closest insertion point based on visual position\r\n    for (let i = 0; i < allVisibleElements.length; i++) {\r\n      const element = allVisibleElements[i] as HTMLElement;\r\n      const elementRect = element.getBoundingClientRect();\r\n\r\n      // For fine-grained positioning, check both left edge and center\r\n      const elementLeft = elementRect.left;\r\n      const elementCenter = elementRect.left + elementRect.width / 2;\r\n      const elementRight = elementRect.right;\r\n\r\n      // If click is very close to the left edge, position before this element\r\n      if (clickX <= elementLeft + 2) {\r\n        const position = parseInt(element.dataset.position || \"0\", 10);\r\n        return Math.max(0, Math.min(position, elements.length));\r\n      }\r\n\r\n      // If click is before the center, position before this element\r\n      if (clickX < elementCenter) {\r\n        const position = parseInt(element.dataset.position || \"0\", 10);\r\n        return Math.max(0, Math.min(position, elements.length));\r\n      }\r\n\r\n      // If this is the last element and click is after its center, position after it\r\n      if (i === allVisibleElements.length - 1 && clickX >= elementCenter) {\r\n        const position = parseInt(element.dataset.position || \"0\", 10);\r\n        return Math.max(0, Math.min(position + 1, elements.length));\r\n      }\r\n    }\r\n\r\n    // If we get here, click was after all elements\r\n    return elements.length;\r\n  }\r\n\r\n  private selectAll(): void {\r\n    if (!this.contextManager.isActive()) return;\r\n\r\n    const context = this.contextManager.getCurrentContext();\r\n    if (context) {\r\n      this.contextManager.setSelection(0, context.array.length);\r\n      this.updateDisplay();\r\n    }\r\n  }\r\n\r\n  toggleBold(): void {\r\n    if (!this.contextManager.hasSelection()) {\r\n      return;\r\n    }\r\n\r\n    // Check if selected text is already bold to determine toggle action\r\n    const isBold = this.contextManager.isSelectionBold();\r\n\r\n    if (isBold) {\r\n      this.contextManager.applyFormattingToSelection({ bold: false });\r\n    } else {\r\n      this.contextManager.applyFormattingToSelection({ bold: true });\r\n    }\r\n\r\n    this.contextManager.clearSelection(); // Clear selection after formatting\r\n    this.updateDisplay();\r\n  }\r\n\r\n  toggleItalic(): void {\r\n    if (!this.contextManager.hasSelection()) {\r\n      return;\r\n    }\r\n\r\n    // Check if selected text is already italic to determine toggle action\r\n    const isItalic = this.contextManager.isSelectionItalic();\r\n\r\n    if (isItalic) {\r\n      this.contextManager.applyFormattingToSelection({ italic: false });\r\n    } else {\r\n      this.contextManager.applyFormattingToSelection({ italic: true });\r\n    }\r\n\r\n    this.contextManager.clearSelection(); // Clear selection after formatting\r\n    this.updateDisplay();\r\n  }\r\n\r\n  toggleCancel(): void {\r\n    if (!this.contextManager.hasSelection()) {\r\n      return;\r\n    }\r\n\r\n    // Check if selection already has cancel formatting\r\n    const isAlreadyCancelled = this.contextManager.isSelectionCancel();\r\n\r\n    if (isAlreadyCancelled) {\r\n      // Remove cancel formatting\r\n      this.contextManager.removeWrapperFormattingFromSelection(\"cancel\");\r\n    } else {\r\n      // Apply cancel formatting\r\n      const success = this.contextManager.applyWrapperFormattingToSelection({ cancel: true });\r\n    }\r\n\r\n    this.updateDisplay();\r\n  }\r\n\r\n  setUnderlineStyle(underlineType: \"none\" | \"single\" | \"double\"): void {\r\n    if (!this.contextManager.hasSelection()) {\r\n      return;\r\n    }\r\n\r\n    if (underlineType === \"none\") {\r\n      // Remove underline wrapper formatting\r\n      this.contextManager.removeWrapperFormattingFromSelection(\"underline\");\r\n    } else {\r\n      // Check if selection already has the same underline style\r\n      const currentUnderline = this.contextManager.isSelectionUnderlined();\r\n\r\n      if (currentUnderline === underlineType) {\r\n        // Toggle off if clicking the same style\r\n        this.contextManager.removeWrapperFormattingFromSelection(\"underline\");\r\n      } else {\r\n        // Apply new underline style (will replace any existing underline)\r\n        this.contextManager.applyWrapperFormattingToSelection({\r\n          underline: underlineType as \"single\" | \"double\",\r\n        });\r\n      }\r\n    }\r\n\r\n    this.updateDisplay();\r\n  }\r\n\r\n  getSelectionFormatting(): { bold?: boolean; italic?: boolean; underline?: string | boolean; cancel?: boolean; color?: string } | null {\r\n    return this.contextManager.getSelectionFormatting();\r\n  }\r\n\r\n  setTextColor(color: string): void {\r\n    if (!this.contextManager.hasSelection()) {\r\n      return;\r\n    }\r\n\r\n    // If black is selected, remove color formatting (toggle off)\r\n    if (color === \"black\" || color === \"#000000\") {\r\n      this.contextManager.removeWrapperFormattingFromSelection(\"color\");\r\n    } else {\r\n      // Use wrapper formatting for color to enable structural-level coloring\r\n      this.contextManager.applyWrapperFormattingToSelection({ color: color });\r\n    }\r\n\r\n    this.updateDisplay();\r\n  }\r\n\r\n  toggleTextMode(): void {\r\n    this.isTextMode = !this.isTextMode;\r\n    // Apply or remove text mode formatting to selection if there is one\r\n    if (this.contextManager.hasSelection()) {\r\n      if (this.isTextMode) {\r\n        this.contextManager.applyWrapperFormattingToSelection({ textMode: true });\r\n      } else {\r\n        this.contextManager.removeWrapperFormattingFromSelection(\"textMode\");\r\n      }\r\n    }\r\n    // Always update display to reflect the mode change\r\n    this.updateDisplay();\r\n  }\r\n\r\n  getTextMode(): boolean {\r\n    return this.isTextMode;\r\n  }\r\n\r\n  private handleBackspace(): void {\r\n    if (this.contextManager.hasSelection()) {\r\n      this.contextManager.deleteSelection();\r\n      this.equationBuilder.updateBracketNesting();\r\n      this.updateDisplay();\r\n      this.equationBuilder.updateParenthesesScaling();\r\n    } else if (this.contextManager.handleBackspace()) {\r\n      this.equationBuilder.updateBracketNesting();\r\n      this.updateDisplay();\r\n      this.equationBuilder.updateParenthesesScaling();\r\n    }\r\n  }\r\n\r\n  private handleDelete(): void {\r\n    if (this.contextManager.hasSelection()) {\r\n      this.contextManager.deleteSelection();\r\n      this.equationBuilder.updateBracketNesting();\r\n      this.updateDisplay();\r\n      this.equationBuilder.updateParenthesesScaling();\r\n    } else if (this.contextManager.handleDelete()) {\r\n      this.equationBuilder.updateBracketNesting();\r\n      this.updateDisplay();\r\n      this.equationBuilder.updateParenthesesScaling();\r\n    }\r\n  }\r\n\r\n  private sanitizeInputChar(char: string): string {\r\n    const charCode = char.charCodeAt(0);\r\n\r\n    // Block backslash ('\\') due to issues in MathJax\r\n    if (char === \"\\\\\") {\r\n      return \"\";\r\n    }\r\n\r\n    // Allow space (32) only in text mode or function name contexts\r\n    if (char === \" \") {\r\n      const currentContextPath = this.contextManager.getActiveContextPath();\r\n      const isInFunctionName = currentContextPath.endsWith(\"/functionName\");\r\n      return (this.isTextMode || isInFunctionName) ? char : \"\";\r\n    }\r\n\r\n    // Block control characters (0-31, 127)\r\n    if (charCode < 32 || charCode === 127) {\r\n      return \"\";\r\n    }\r\n\r\n    // Allow all other characters including $ % ^ _ ~ # & { }\r\n    // The LaTeX converter will handle proper escaping when converting to LaTeX\r\n    return char;\r\n  }\r\n\r\n  setDifferentialStyle(style: \"italic\" | \"roman\"): void {\r\n    this.differentialStyle = style;\r\n  }\r\n\r\n  setInlineStyle(isInline: boolean): void {\r\n    this.isInlineStyle = isInline;\r\n  }\r\n\r\n  updateExistingEquationStyle(isInline: boolean): void {\r\n    // This would update existing equations to reflect the new style\r\n    // For now, new equations will use the selected style\r\n    this.updateDisplay();\r\n  }\r\n\r\n  updateExistingDifferentialStyle(style: \"italic\" | \"roman\"): void {\r\n    // Find all existing 'd' elements in the equation and update their style\r\n    const equation = this.equationBuilder.getEquation();\r\n    this.updateDifferentialStyleRecursive(equation, style);\r\n\r\n    // Refresh the display to show the changes\r\n    this.updateDisplay();\r\n  }\r\n\r\n  private updateDifferentialStyleRecursive(elements: EquationElement[], style: \"italic\" | \"roman\"): void {\r\n    elements.forEach(element => {\r\n      // Check if this is a 'd' text element\r\n      if (element.type === \"text\" && element.value === \"d\") {\r\n        if (style === \"roman\") {\r\n          element.italic = false;\r\n        } else {\r\n          // Remove the italic property to use default behavior\r\n          delete element.italic;\r\n        }\r\n      }\r\n\r\n      // Recursively check child elements\r\n      if (element.numerator) this.updateDifferentialStyleRecursive(element.numerator, style);\r\n      if (element.denominator) this.updateDifferentialStyleRecursive(element.denominator, style);\r\n      if (element.radicand) this.updateDifferentialStyleRecursive(element.radicand, style);\r\n      if (element.index) this.updateDifferentialStyleRecursive(element.index, style);\r\n      if (element.base) this.updateDifferentialStyleRecursive(element.base, style);\r\n      if (element.superscript) this.updateDifferentialStyleRecursive(element.superscript, style);\r\n      if (element.subscript) this.updateDifferentialStyleRecursive(element.subscript, style);\r\n      if (element.content) this.updateDifferentialStyleRecursive(element.content, style);\r\n      if (element.lowerLimit) this.updateDifferentialStyleRecursive(element.lowerLimit, style);\r\n      if (element.upperLimit) this.updateDifferentialStyleRecursive(element.upperLimit, style);\r\n      if (element.operand) this.updateDifferentialStyleRecursive(element.operand, style);\r\n    });\r\n  }\r\n\r\n  insertDerivative(type: \"first\" | \"second\" | \"nth\", displayMode?: \"display\" | \"inline\"): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    // Create derivative element with appropriate order\r\n    let order: number | EquationElement[];\r\n    if (type === \"first\") {\r\n      order = 1;\r\n    } else if (type === \"second\") {\r\n      order = 2;\r\n    } else {\r\n      // nth derivative\r\n      order = [];\r\n    }\r\n\r\n    const derivative = this.equationBuilder.createDerivativeElement(\r\n      order,\r\n      displayMode === \"inline\" ? \"inline\" : \"display\"\r\n    );\r\n\r\n    // Insert the derivative element\r\n    this.contextManager.insertElementAtCursor(derivative);\r\n\r\n    // Move cursor to appropriate position for user input\r\n    let targetPath: string;\r\n    if (type === \"nth\") {\r\n      // Move to the order input for nth derivative\r\n      targetPath = this.contextManager.getElementContextPath(derivative.id, \"order\");\r\n      this.contextManager.enterContextPath(targetPath, 0);\r\n    } else {\r\n      // Move to function input\r\n      targetPath = this.contextManager.getElementContextPath(derivative.id, \"function\");\r\n      this.contextManager.enterContextPath(targetPath, 0);\r\n    }\r\n    this.updateDisplay();\r\n    this.equationBuilder.updateParenthesesScaling();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  insertDerivativeLongForm(type: \"first\" | \"nth\", displayMode?: \"display\" | \"inline\"): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    // Create derivative element with appropriate order and long form flag\r\n    let order: number | EquationElement[];\r\n    if (type === \"first\") {\r\n      order = 1;\r\n    } else {\r\n      // nth derivative\r\n      order = [];\r\n    }\r\n\r\n    const derivative = this.equationBuilder.createDerivativeElement(\r\n      order,\r\n      displayMode === \"inline\" ? \"inline\" : \"display\",\r\n      true // isLongForm flag\r\n    );\r\n\r\n    // Insert the derivative element\r\n    this.contextManager.insertElementAtCursor(derivative);\r\n\r\n    // Move cursor to appropriate position for user input\r\n    let targetPath: string;\r\n    if (type === \"nth\") {\r\n      // Move to the order input for nth derivative\r\n      targetPath = this.contextManager.getElementContextPath(derivative.id, \"order\");\r\n      this.contextManager.enterContextPath(targetPath, 0);\r\n    } else {\r\n      // Move to the variable input first (the d/dx part)\r\n      targetPath = this.contextManager.getElementContextPath(derivative.id, \"variable\");\r\n      this.contextManager.enterContextPath(targetPath, 0);\r\n    }\r\n    this.updateDisplay();\r\n    this.equationBuilder.updateParenthesesScaling();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  getDifferentialStyleForLatex(): boolean {\r\n    // Return true if roman style should use physics package, false for italic/standard LaTeX\r\n    return this.differentialStyle === \"roman\";\r\n  }\r\n\r\n  // Partial derivative methods\r\n  insertPartialDerivative(type: \"first\" | \"second\" | \"nth\", displayMode?: \"display\" | \"inline\"): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    // Create partial derivative element with appropriate order\r\n    let order: number | EquationElement[];\r\n    if (type === \"first\") {\r\n      order = 1;\r\n    } else if (type === \"second\") {\r\n      order = 2;\r\n    } else {\r\n      // nth derivative - order will be an element array\r\n      order = [];\r\n    }\r\n\r\n    const derivative = this.equationBuilder.createDerivativeElement(\r\n      order,\r\n      displayMode || (this.isInlineStyle ? \"inline\" : \"display\"),\r\n      false, // not long form\r\n      true   // is partial\r\n    );\r\n\r\n    this.contextManager.insertElementAtCursor(derivative);\r\n\r\n    // Move cursor to appropriate position for user input\r\n    let targetPath: string;\r\n    if (type === \"nth\") {\r\n      // Move to the order input for nth partial derivative\r\n      targetPath = this.contextManager.getElementContextPath(derivative.id, \"order\");\r\n      this.contextManager.enterContextPath(targetPath, 0);\r\n    } else {\r\n      // Move to the variable input first (the ∂/∂x part)\r\n      targetPath = this.contextManager.getElementContextPath(derivative.id, \"variable\");\r\n      this.contextManager.enterContextPath(targetPath, 0);\r\n    }\r\n    this.updateDisplay();\r\n    this.equationBuilder.updateParenthesesScaling();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  insertPartialDerivativeLongForm(type: \"first\" | \"nth\", displayMode?: \"display\" | \"inline\"): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    // Create partial derivative element with appropriate order and long form flag\r\n    let order: number | EquationElement[];\r\n    if (type === \"first\") {\r\n      order = 1;\r\n    } else {\r\n      // nth partial derivative\r\n      order = [];\r\n    }\r\n\r\n    const derivative = this.equationBuilder.createDerivativeElement(\r\n      order,\r\n      displayMode || (this.isInlineStyle ? \"inline\" : \"display\"),\r\n      true,  // is long form\r\n      true   // is partial\r\n    );\r\n\r\n    this.contextManager.insertElementAtCursor(derivative);\r\n\r\n    // Move cursor to appropriate position for user input\r\n    let targetPath: string;\r\n    if (type === \"nth\") {\r\n      // Move to the order input for nth partial derivative\r\n      targetPath = this.contextManager.getElementContextPath(derivative.id, \"order\");\r\n      this.contextManager.enterContextPath(targetPath, 0);\r\n    } else {\r\n      // Move to the variable input first (the ∂/∂x part)\r\n      targetPath = this.contextManager.getElementContextPath(derivative.id, \"variable\");\r\n      this.contextManager.enterContextPath(targetPath, 0);\r\n    }\r\n    this.updateDisplay();\r\n    this.equationBuilder.updateParenthesesScaling();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  createMatrix(rows: number, cols: number, matrixType: \"parentheses\" | \"brackets\" | \"braces\" | \"bars\" | \"double-bars\" | \"none\"): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    // Create matrix element with empty cells\r\n    const matrixElement = this.equationBuilder.createMatrixElement(rows, cols, matrixType);\r\n\r\n    // Get the current context path before insertion\r\n    const currentContextPath = this.contextManager.getActiveContextPath() || \"root\";\r\n\r\n    // Insert matrix into equation\r\n    this.contextManager.insertElementAtCursor(matrixElement);\r\n\r\n    // Navigate to first cell (top-left)\r\n    const matrixPath = `${currentContextPath}/${matrixElement.id}`;\r\n    this.contextManager.enterContextPath(`${matrixPath}/cell_0_0`, 0);\r\n\r\n    this.updateDisplay();\r\n    this.equationBuilder.updateParenthesesScaling();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  insertStack(rows: number, cols: number): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    // Create stack element with empty cells\r\n    const stackElement = this.equationBuilder.createStackElement(rows, cols);\r\n\r\n    // Get the current context path before insertion\r\n    const currentContextPath = this.contextManager.getActiveContextPath() || \"root\";\r\n\r\n    // Insert stack into equation\r\n    this.contextManager.insertElementAtCursor(stackElement);\r\n\r\n    // Navigate to first cell (top-left)\r\n    const stackPath = `${currentContextPath}/${stackElement.id}`;\r\n    this.contextManager.enterContextPath(`${stackPath}/cell_0_0`, 0);\r\n\r\n    this.updateDisplay();\r\n    this.equationBuilder.updateParenthesesScaling();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  insertCases(rows: number, cols: number): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    // Create cases element with empty cells\r\n    const casesElement = this.equationBuilder.createCasesElement(rows, cols);\r\n\r\n    // Get the current context path before insertion\r\n    const currentContextPath = this.contextManager.getActiveContextPath() || \"root\";\r\n\r\n    // Insert cases into equation\r\n    this.contextManager.insertElementAtCursor(casesElement);\r\n\r\n    // Navigate to first cell (top-left)\r\n    const casesPath = `${currentContextPath}/${casesElement.id}`;\r\n    this.contextManager.enterContextPath(`${casesPath}/cell_0_0`, 0);\r\n\r\n    this.updateDisplay();\r\n    this.equationBuilder.updateParenthesesScaling();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  insertFunction(functionType: string): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    // Create function element\r\n    const functionElement = this.equationBuilder.createFunctionElement(functionType);\r\n    this.contextManager.insertElementAtCursor(functionElement);\r\n\r\n    // Use centralized function type mapping to determine which part to enter first\r\n    const structureType = FUNCTION_TYPE_MAP[functionType];\r\n    if (!structureType) {\r\n      console.warn(`Unknown function type: ${functionType}`);\r\n      return;\r\n    }\r\n\r\n    // Move cursor to the appropriate part based on function type\r\n    if (structureType === \"simple\") {\r\n      // For simple functions, move to the argument\r\n      const argumentPath = this.contextManager.getElementContextPath(functionElement.id, \"functionArgument\");\r\n      this.contextManager.enterContextPath(argumentPath, 0);\r\n      \r\n    } else if (structureType === \"functionsub\") {\r\n      // For functions with subscript (like base-n logarithm), move to base first\r\n      const basePath = this.contextManager.getElementContextPath(functionElement.id, \"functionBase\");\r\n      this.contextManager.enterContextPath(basePath, 0);\r\n      \r\n    } else if (structureType === \"functionlim\") {\r\n      // For limit operators, move to constraint first\r\n      const constraintPath = this.contextManager.getElementContextPath(functionElement.id, \"functionConstraint\");\r\n      this.contextManager.enterContextPath(constraintPath, 0);\r\n      \r\n    } else if (structureType === \"function\") {\r\n      // For general user-defined functions, move to name first\r\n      const namePath = this.contextManager.getElementContextPath(functionElement.id, \"functionName\");\r\n      this.contextManager.enterContextPath(namePath, 0);\r\n    }\r\n\r\n    this.updateDisplay();\r\n    this.focusHiddenInput();\r\n  }\r\n\r\n  insertEvaluationBracket(bracketType: \"bar\" | \"square\"): void {\r\n    if (!this.contextManager.isActive()) {\r\n      this.contextManager.enterRootContext();\r\n    }\r\n\r\n    const evaluationElement = this.equationBuilder.createEvaluationBracketElement(bracketType);\r\n    this.contextManager.insertElementAtCursor(evaluationElement);\r\n\r\n    // Update bracket nesting depths\r\n    this.equationBuilder.updateBracketNesting();\r\n\r\n    // Move context into the bracket's content (function F)\r\n    const contentPath = this.contextManager.getElementContextPath(evaluationElement.id, \"content\");\r\n    this.contextManager.enterContextPath(contentPath, 0);\r\n\r\n    this.updateDisplay();\r\n    this.focusHiddenInput();\r\n  }\r\n}\r\n","export class TabController {\r\n  private tabNav: HTMLElement;\r\n  private tabContent: HTMLElement;\r\n  private tabNavContainer: HTMLElement;\r\n  private leftScrollBtn: HTMLButtonElement;\r\n  private rightScrollBtn: HTMLButtonElement;\r\n  private isDragging: boolean = false;\r\n  private startX: number = 0;\r\n  private scrollLeft: number = 0;\r\n\r\n  constructor(tabNav: HTMLElement, tabContent: HTMLElement) {\r\n    this.tabNav = tabNav;\r\n    this.tabContent = tabContent;\r\n    this.tabNavContainer = tabNav.parentElement as HTMLElement;\r\n    this.leftScrollBtn = document.getElementById(\"tabScrollLeft\") as HTMLButtonElement;\r\n    this.rightScrollBtn = document.getElementById(\"tabScrollRight\") as HTMLButtonElement;\r\n    this.setupEventListeners();\r\n    this.updateScrollButtons();\r\n  }\r\n\r\n  private setupEventListeners(): void {\r\n    // Tab click handlers\r\n    this.tabNav.addEventListener(\"click\", (e) => {\r\n      const target = e.target as HTMLElement;\r\n      const button = target.closest(\".tab-btn\");\r\n      if (!button) return;\r\n\r\n      const tabId = (button as HTMLElement).dataset.tab;\r\n      if (!tabId) return;\r\n\r\n      this.activateTab(tabId);\r\n    });\r\n\r\n    // Scroll button handlers\r\n    this.leftScrollBtn.addEventListener(\"click\", () => {\r\n      this.scrollTabs(-100);\r\n    });\r\n\r\n    this.rightScrollBtn.addEventListener(\"click\", () => {\r\n      this.scrollTabs(100);\r\n    });\r\n\r\n    // Scroll event to update button states\r\n    this.tabNav.addEventListener(\"scroll\", () => {\r\n      this.updateScrollButtons();\r\n    });\r\n\r\n    // Drag to scroll functionality\r\n    this.tabNav.addEventListener(\"mousedown\", (e) => {\r\n      this.isDragging = true;\r\n      this.startX = e.pageX - this.tabNav.offsetLeft;\r\n      this.scrollLeft = this.tabNav.scrollLeft;\r\n      this.tabNav.style.cursor = \"grabbing\";\r\n      e.preventDefault();\r\n    });\r\n\r\n    document.addEventListener(\"mousemove\", (e) => {\r\n      if (!this.isDragging) return;\r\n      e.preventDefault();\r\n      const x = e.pageX - this.tabNav.offsetLeft;\r\n      const walk = (x - this.startX) * 2;\r\n      this.tabNav.scrollLeft = this.scrollLeft - walk;\r\n    });\r\n\r\n    document.addEventListener(\"mouseup\", () => {\r\n      this.isDragging = false;\r\n      this.tabNav.style.cursor = \"default\";\r\n    });\r\n\r\n    // Prevent text selection during drag\r\n    this.tabNav.addEventListener(\"selectstart\", (e) => {\r\n      if (this.isDragging) e.preventDefault();\r\n    });\r\n  }\r\n\r\n  private activateTab(tabId: string): void {\r\n    // Deactivate all tabs and panes\r\n    this.tabNav.querySelectorAll(\".tab-btn\").forEach((btn) => btn.classList.remove(\"active\"));\r\n    document.querySelectorAll(\".tab-pane\").forEach((pane) => pane.classList.remove(\"active\"));\r\n\r\n    // Activate the clicked tab and its corresponding pane\r\n    const tabButton = this.tabNav.querySelector(`[data-tab=\"${tabId}\"]`);\r\n    if (tabButton) {\r\n      tabButton.classList.add(\"active\");\r\n    }\r\n\r\n    const activePane = document.getElementById(tabId);\r\n    if (activePane) {\r\n      activePane.classList.add(\"active\");\r\n    }\r\n  }\r\n\r\n  getActiveTabId(): string | null {\r\n    const activeButton = this.tabNav.querySelector(\".tab-btn.active\") as HTMLElement;\r\n    return activeButton ? activeButton.dataset.tab || null : null;\r\n  }\r\n\r\n  setActiveTab(tabId: string): void {\r\n    this.activateTab(tabId);\r\n  }\r\n\r\n  private scrollTabs(amount: number): void {\r\n    this.tabNav.scrollBy({\r\n      left: amount,\r\n      behavior: \"smooth\",\r\n    });\r\n  }\r\n\r\n  private updateScrollButtons(): void {\r\n    const { scrollLeft, scrollWidth, clientWidth } = this.tabNav;\r\n\r\n    // Update left button state\r\n    if (this.leftScrollBtn) {\r\n      this.leftScrollBtn.disabled = scrollLeft <= 0;\r\n    }\r\n\r\n    // Update right button state\r\n    if (this.rightScrollBtn) {\r\n      this.rightScrollBtn.disabled = scrollLeft >= scrollWidth - clientWidth - 1;\r\n    }\r\n  }\r\n}\r\n","declare const MathJax: any;\r\n\r\nexport interface SvgPositionInfo {\r\n  baseline: number;\r\n  fractionBars: Array<{ y: number; width: number; height: number; x: number; isMain: boolean }>;\r\n  mainFractionBar: { y: number; width: number; height: number; x: number } | null;\r\n  totalHeight: number;\r\n  totalWidth: number;\r\n}\r\n\r\nexport class MathJaxService {\r\n  async renderLatexToSvg(latex: string): Promise<SVGElement> {\r\n    try {\r\n      const tempDiv = document.getElementById(\"mathjax-renderer\") as HTMLDivElement;\r\n      if (!tempDiv) {\r\n        throw new Error(\"MathJax renderer element not found.\");\r\n      }\r\n\r\n      // Detect if LaTeX contains \\displaystyle operators\r\n      // If so, use display mode; otherwise, use inline mode\r\n      const hasDisplayStyle = latex.includes(\"\\\\displaystyle\");\r\n      const mathMode = hasDisplayStyle ? `\\\\[${latex}\\\\]` : `\\\\(${latex}\\\\)`;\r\n\r\n      tempDiv.innerHTML = mathMode;\r\n\r\n      MathJax.texReset();\r\n      await MathJax.typesetPromise([tempDiv]);\r\n\r\n      const mjxContainer = tempDiv.querySelector(\"mjx-container\");\r\n      const svg = mjxContainer?.querySelector(\"svg\");\r\n\r\n      if (!svg) {\r\n        throw new Error(\"Failed to find SVG in MathJax output.\");\r\n      }\r\n\r\n      const svgClone = svg.cloneNode(true) as SVGElement;\r\n      tempDiv.innerHTML = \"\";\r\n\r\n      return svgClone;\r\n    } catch (error) {\r\n      throw new Error(\"Failed to convert equation to image. Please check the syntax.\");\r\n    }\r\n  }\r\n\r\n  extractSvgPositionInfo(svg: SVGElement): SvgPositionInfo {\r\n    const viewBox = svg.getAttribute(\"viewBox\");\r\n    if (!viewBox) {\r\n      throw new Error(\"SVG missing viewBox attribute.\");\r\n    }\r\n\r\n    const [minX, minY, vbWidth, vbHeight] = viewBox.split(\" \").map(parseFloat);\r\n\r\n    // Extract baseline from MathJax style\r\n    const originalStyle = svg.getAttribute(\"style\") || \"\";\r\n    let baseline = 0;\r\n    const verticalAlignMatch = originalStyle.match(/vertical-align:\\s*([-\\d.]+)ex/);\r\n    if (verticalAlignMatch) {\r\n      baseline = parseFloat(verticalAlignMatch[1]);\r\n    }\r\n\r\n    // Find all fraction bars (thin horizontal rectangles)\r\n    const fractionBars: Array<{ y: number; width: number; height: number; x: number; isMain: boolean }> = [];\r\n    const rects = svg.querySelectorAll(\"rect\");\r\n\r\n    rects.forEach((rect) => {\r\n      const rectHeight = parseFloat(rect.getAttribute(\"height\") || \"0\");\r\n      const rectWidth = parseFloat(rect.getAttribute(\"width\") || \"0\");\r\n      const rectY = parseFloat(rect.getAttribute(\"y\") || \"0\");\r\n      const rectX = parseFloat(rect.getAttribute(\"x\") || \"0\");\r\n\r\n      // Identify fraction bars as thin horizontal rectangles\r\n      if (rectHeight < vbHeight * 0.05 && rectWidth > vbWidth * 0.1) {\r\n        fractionBars.push({\r\n          y: rectY,\r\n          width: rectWidth,\r\n          height: rectHeight,\r\n          x: rectX,\r\n          isMain: false,\r\n        });\r\n      }\r\n    });\r\n\r\n    // Identify the main fraction bar\r\n    let mainFractionBar: { y: number; width: number; height: number; x: number } | null = null;\r\n\r\n    if (fractionBars.length > 0) {\r\n      const centerY = minY + vbHeight / 2;\r\n\r\n      const sortedBars = [...fractionBars].sort((a, b) => {\r\n        const widthDiff = b.width - a.width;\r\n        if (Math.abs(widthDiff) > vbWidth * 0.1) {\r\n          return widthDiff;\r\n        }\r\n        const aDistFromCenter = Math.abs(a.y - centerY);\r\n        const bDistFromCenter = Math.abs(b.y - centerY);\r\n        return aDistFromCenter - bDistFromCenter;\r\n      });\r\n\r\n      mainFractionBar = sortedBars[0];\r\n\r\n      const mainIndex = fractionBars.findIndex((bar) =>\r\n          bar.y === mainFractionBar!.y &&\r\n          bar.width === mainFractionBar!.width &&\r\n          bar.x === mainFractionBar!.x\r\n      );\r\n      if (mainIndex !== -1) {\r\n        fractionBars[mainIndex].isMain = true;\r\n      }\r\n    }\r\n\r\n    return {\r\n      baseline,\r\n      fractionBars,\r\n      mainFractionBar,\r\n      totalHeight: vbHeight,\r\n      totalWidth: vbWidth,\r\n    };\r\n  }\r\n\r\n  isMathJaxReady(): boolean {\r\n    return typeof MathJax !== \"undefined\" && MathJax.startup;\r\n  }\r\n\r\n  async waitForMathJaxReady(): Promise<void> {\r\n    if (!this.isMathJaxReady()) {\r\n      throw new Error(\"MathJax is not defined.\");\r\n    }\r\n\r\n    try {\r\n      await MathJax.startup.promise;\r\n    } catch (error) {\r\n      throw new Error(\"Could not load MathJax.\");\r\n    }\r\n  }\r\n}\r\n","import { EquationBuilder } from \"../core/equation-builder\";\r\nimport { LatexConverter } from \"../core/latex-converter\";\r\n\r\nexport class OfficeService {\r\n  private equationBuilder: EquationBuilder;\r\n  private latexConverter: LatexConverter;\r\n  private onEquationLoadedCallback?: (latex: string) => Promise<void>;\r\n\r\n  constructor(equationBuilder: EquationBuilder, latexConverter: LatexConverter) {\r\n    this.equationBuilder = equationBuilder;\r\n    this.latexConverter = latexConverter;\r\n  }\r\n\r\n  setEquationLoadedCallback(callback: (latex: string) => Promise<void>): void {\r\n    this.onEquationLoadedCallback = callback;\r\n  }\r\n\r\n  async insertEquationToWord(\r\n    svgString: string,\r\n    width: number,\r\n    height: number,\r\n    baselineOffsetPt: number,\r\n    latex: string\r\n  ): Promise<void> {\r\n    try {\r\n      // Log SVG size information\r\n      const svgSizeBytes = new Blob([svgString]).size;\r\n      const svgSizeKB = svgSizeBytes / 1024;\r\n      console.log(`SVG Image dimensions: ${width}x${height}px`);\r\n      console.log(`SVG String size: ${svgSizeBytes} bytes (${svgSizeKB.toFixed(2)} KB)`);\r\n      \r\n      // Convert SVG string to base64\r\n      let base64Svg: string;\r\n      try {\r\n        base64Svg = btoa(\r\n          encodeURIComponent(svgString).replace(/%([0-9A-F]{2})/g, (match, p1) =>\r\n            String.fromCharCode(parseInt(p1, 16))\r\n          )\r\n        );\r\n        const base64SizeKB = base64Svg.length / 1024;\r\n        console.log(`Base64 SVG length: ${base64Svg.length} chars (${base64SizeKB.toFixed(2)} KB)`);\r\n      } catch (base64Error) {\r\n        console.error(\"Base64 conversion failed:\", base64Error);\r\n        throw new Error(\"Failed to convert SVG to base64\");\r\n      }\r\n\r\n      await Word.run(async (context) => {\r\n        console.log(\"Inside Word.run context\");\r\n        const selection = context.document.getSelection();\r\n        console.log(\"Got document selection\");\r\n\r\n        // Add unique prefix to LaTeX for reliable equation detection\r\n        const prefixedLatex = `hlleqed ${latex}`;\r\n\r\n        // Check OOXML size first to determine optimal insertion method\r\n        const ooxml = this.createInlineImageWithPositionOoxml(base64Svg, width, height, baselineOffsetPt, prefixedLatex);\r\n        const ooxmlSizeKB = ooxml.length / 1024;\r\n        console.log(`OOXML size: ${ooxmlSizeKB.toFixed(1)}KB`);\r\n\r\n        // Check for matrix/complex content that may fail with OOXML\r\n        const hasMatrixContent = latex.includes('matrix') || latex.includes('pmatrix') || latex.includes('bmatrix') ||\r\n                                latex.includes('cases') || latex.includes('array');\r\n        \r\n        if (true) {\r\n          // Phase 1: Use OOXML for simple equations (non-matrix content)\r\n          console.log(`Attempting OOXML for simple equation (${ooxmlSizeKB.toFixed(1)}KB)...`);\r\n\r\n          try {\r\n            selection.insertOoxml(ooxml, Word.InsertLocation.replace);\r\n            await context.sync();\r\n            console.log(\"OOXML insertion successful\");\r\n            return; // Early return on success\r\n          } catch (ooxmlError) {\r\n            console.log(\"OOXML insertion failed, falling back to PNG:\", ooxmlError);\r\n          }\r\n        } else {\r\n          console.log(`Matrix/Array content detected - OOXML insertion not supported by Word (SVG: ${svgSizeKB.toFixed(1)}KB, Base64: ${(base64Svg.length/1024).toFixed(1)}KB)`);\r\n          console.log(\"Using PNG approach instead...\");\r\n        }\r\n\r\n        // Phase 2: PNG approach for matrices or OOXML failures\r\n        console.log(\"Attempting PNG conversion and insertion...\");\r\n\r\n        try {\r\n          console.log(\"Converting SVG to PNG...\");\r\n\r\n          const pngBase64 = await this.convertSvgToPng(svgString, width, height);\r\n          const pngSizeKB = (pngBase64.length * 3) / 4 / 1024; // Base64 overhead ~33%\r\n          console.log(`PNG conversion successful, size: ${pngSizeKB.toFixed(1)}KB`);\r\n\r\n          if (pngSizeKB < 50) { // Try PNG insertion if under 50KB\r\n            console.log(\"Attempting PNG insertion via insertInlinePictureFromBase64...\");\r\n\r\n            // Try different data URL formats\r\n            const formats = [\r\n              `data:image/png;base64,${pngBase64}`,\r\n              pngBase64, // Try without data: prefix\r\n            ];\r\n\r\n            let insertionSucceeded = false;\r\n\r\n            for (let i = 0; i < formats.length && !insertionSucceeded; i++) {\r\n              try {\r\n                console.log(`Trying PNG format ${i + 1}:`, formats[i].substring(0, 50) + \"...\");\r\n                \r\n                const inlinePicture = selection.insertInlinePictureFromBase64(formats[i], Word.InsertLocation.replace);\r\n                \r\n                // Set size using point-based dimensions (convert from pixels)\r\n                const widthPt = width * (72 / 96); // Convert pixels to points\r\n                const heightPt = height * (72 / 96);\r\n                inlinePicture.width = widthPt;\r\n                inlinePicture.height = heightPt;\r\n\r\n                await context.sync();\r\n\r\n                // Apply baseline positioning using preview API\r\n                if (baselineOffsetPt !== 0) {\r\n                  const range = inlinePicture.getRange();\r\n                  range.font.position = baselineOffsetPt;\r\n                  console.log(`Applied baseline offset: ${baselineOffsetPt}pt`);\r\n                }\r\n\r\n                // Set alt text after successful insertion\r\n                inlinePicture.altTextDescription = prefixedLatex;\r\n                await context.sync();\r\n\r\n                console.log(\"PNG insertion with alt text and baseline positioning successful\");\r\n                insertionSucceeded = true;\r\n              } catch (formatError) {\r\n                console.log(`PNG format ${i + 1} failed:`, formatError);\r\n              }\r\n            }\r\n\r\n            if (!insertionSucceeded) {\r\n              throw new Error(\"All PNG formats failed\");\r\n            }\r\n          } else {\r\n            throw new Error(\"PNG too large, falling back to text\");\r\n          }\r\n        } catch (pngError) {\r\n          console.log(\"PNG conversion/insertion failed:\", pngError);\r\n\r\n          // Final fallback: text only\r\n          console.log(\"All image insertion methods failed, using text fallback\");\r\n          selection.insertText(`[EQUATION: ${latex}]`, Word.InsertLocation.replace);\r\n          await context.sync();\r\n          console.log(\"Text fallback successful\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Word.run failed:\", error);\r\n      console.error(\"LaTeX that caused the error:\", latex);\r\n      throw error; // Re-throw to maintain the original error flow\r\n    }\r\n  }\r\n\r\n  setupEquationImageHandler(): void {\r\n    Office.context.document.addHandlerAsync(Office.EventType.DocumentSelectionChanged, () =>\r\n      this.handleSelectionChange()\r\n    );\r\n  }\r\n\r\n  private async handleSelectionChange(): Promise<void> {\r\n    try {\r\n      await Word.run(async (context) => {\r\n        const selection = context.document.getSelection();\r\n        selection.load(\"inlinePictures\");\r\n        await context.sync();\r\n\r\n        if (selection.inlinePictures.items.length > 0) {\r\n          const picture = selection.inlinePictures.items[0];\r\n          picture.load(\"altTextDescription\");\r\n          await context.sync();\r\n\r\n          const altText = picture.altTextDescription;\r\n\r\n          if (altText && altText.trim()) {\r\n            // Check if this is an equation created by our editor (has \"hlleqed \" prefix)\r\n            if (altText.startsWith(\"hlleqed \")) {\r\n              // Remove the prefix to get the original LaTeX\r\n              const originalLatex = altText.substring(8); // Remove \"hlleqed \" (8 characters)\r\n              const loaded = await this.loadEquationFromLatex(originalLatex);\r\n              if (loaded && this.onEquationLoadedCallback) {\r\n                await this.onEquationLoadedCallback(originalLatex);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  private async loadEquationFromLatex(latex: string): Promise<boolean> {\r\n    try {\r\n      const parsedEquation = this.latexConverter.parseFromLatex(latex);\r\n      if (parsedEquation) {\r\n        this.equationBuilder.setEquation(parsedEquation);\r\n        // Update bracket nesting after loading the equation\r\n        this.equationBuilder.updateBracketNesting();\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error(\"Error loading equation from LaTeX:\", error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private createInlineImageWithPositionOoxml(\r\n    base64Svg: string,\r\n    width: number,\r\n    height: number,\r\n    baselineOffsetPt: number = 0,\r\n    altText: string = \"\"\r\n  ): string {\r\n    const widthInEmus = Math.round(width * 9525);\r\n    const heightInEmus = Math.round(height * 9525);\r\n\r\n    const imageId = \"rId\" + Math.random().toString(36).substring(2, 12);\r\n    const documentRelsId = \"rId1\";\r\n    const uniqueId = Math.floor(Math.random() * 1000000) + 1;\r\n\r\n    const positionHalfPt = Math.round(baselineOffsetPt * 2);\r\n\r\n    const ooxml = `\r\n<pkg:package xmlns:pkg=\"http://schemas.microsoft.com/office/2006/xmlPackage\">\r\n  <pkg:part pkg:name=\"/_rels/.rels\" pkg:contentType=\"application/vnd.openxmlformats-package.relationships+xml\">\r\n    <pkg:xmlData>\r\n      <Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\r\n        <Relationship Id=\"${documentRelsId}\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"word/document.xml\"/>\r\n      </Relationships>\r\n    </pkg:xmlData>\r\n  </pkg:part>\r\n  <pkg:part pkg:name=\"/word/_rels/document.xml.rels\" pkg:contentType=\"application/vnd.openxmlformats-package.relationships+xml\">\r\n    <pkg:xmlData>\r\n      <Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\r\n        <Relationship Id=\"${imageId}\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\" Target=\"media/image1.svg\"/>\r\n      </Relationships>\r\n    </pkg:xmlData>\r\n  </pkg:part>\r\n  <pkg:part pkg:name=\"/word/media/image1.svg\" pkg:contentType=\"image/svg+xml\">\r\n    <pkg:binaryData>${base64Svg}</pkg:binaryData>\r\n  </pkg:part>\r\n  <pkg:part pkg:name=\"/word/document.xml\" pkg:contentType=\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\">\r\n    <pkg:xmlData>\r\n      <w:document xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\" xmlns:wp=\"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing\" xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\" xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\">\r\n        <w:body>\r\n          <w:p>\r\n            <w:r>\r\n              ${positionHalfPt !== 0 ? `<w:rPr>\r\n                <w:position w:val=\"${positionHalfPt}\"/>\r\n              </w:rPr>` : ''}\r\n              <w:drawing>\r\n                <wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\r\n                  <wp:extent cx=\"${widthInEmus}\" cy=\"${heightInEmus}\"/>\r\n                  <wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\r\n                  <wp:docPr id=\"${uniqueId}\" name=\"Math Equation\" descr=\"${altText}\"/>\r\n                  <wp:cNvGraphicFramePr/>\r\n                  <a:graphic>\r\n                    <a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\r\n                      <pic:pic>\r\n                        <pic:nvPicPr>\r\n                          <pic:cNvPr id=\"${uniqueId}\" name=\"Math Equation\" descr=\"${altText}\"/>\r\n                          <pic:cNvPicPr/>\r\n                        </pic:nvPicPr>\r\n                        <pic:blipFill>\r\n                          <a:blip r:embed=\"${imageId}\"/>\r\n                          <a:stretch>\r\n                            <a:fillRect/>\r\n                          </a:stretch>\r\n                        </pic:blipFill>\r\n                        <pic:spPr>\r\n                          <a:xfrm>\r\n                            <a:off x=\"0\" y=\"0\"/>\r\n                            <a:ext cx=\"${widthInEmus}\" cy=\"${heightInEmus}\"/>\r\n                          </a:xfrm>\r\n                          <a:prstGeom prst=\"rect\">\r\n                            <a:avLst/>\r\n                          </a:prstGeom>\r\n                        </pic:spPr>\r\n                      </pic:pic>\r\n                    </a:graphicData>\r\n                  </a:graphic>\r\n                </wp:inline>\r\n              </w:drawing>\r\n            </w:r>\r\n          </w:p>\r\n        </w:body>\r\n      </w:document>\r\n    </pkg:xmlData>\r\n  </pkg:part>\r\n</pkg:package>`.trim();\r\n\r\n    return ooxml;\r\n  }\r\n\r\n  private async convertSvgToPng(svgString: string, width: number, height: number): Promise<string> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        console.log(\"Starting SVG to PNG conversion...\");\r\n\r\n        // Create SVG blob\r\n        const svgBlob = new Blob([svgString], { type: \"image/svg+xml;charset=utf-8\" });\r\n        const svgUrl = URL.createObjectURL(svgBlob);\r\n\r\n        // Create image element\r\n        const img = new Image();\r\n\r\n        img.onload = () => {\r\n          try {\r\n            // Calculate high-DPI dimensions\r\n            const dpr = window.devicePixelRatio || 1;\r\n            const canvasWidth = Math.round(width * dpr * 2); // 2x for extra quality\r\n            const canvasHeight = Math.round(height * dpr * 2);\r\n\r\n            console.log(`Canvas dimensions: ${canvasWidth}x${canvasHeight} (DPR: ${dpr})`);\r\n\r\n            // Create canvas\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = canvasWidth;\r\n            canvas.height = canvasHeight;\r\n\r\n            const ctx = canvas.getContext(\"2d\");\r\n            if (!ctx) {\r\n              throw new Error(\"Failed to get 2D context\");\r\n            }\r\n\r\n            // Set high quality rendering\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.imageSmoothingQuality = \"high\";\r\n\r\n            // Fill with white background for better contrast\r\n            ctx.fillStyle = \"white\";\r\n            ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n            // Draw SVG image scaled up\r\n            ctx.drawImage(img, 0, 0, canvasWidth, canvasHeight);\r\n\r\n            // Convert to PNG blob\r\n            canvas.toBlob(\r\n              (blob) => {\r\n                if (!blob) {\r\n                  reject(new Error(\"Failed to convert canvas to blob\"));\r\n                  return;\r\n                }\r\n\r\n                console.log(`PNG blob created, size: ${blob.size} bytes`);\r\n\r\n                // Convert blob to base64\r\n                const reader = new FileReader();\r\n                reader.onload = () => {\r\n                  const base64 = (reader.result as string).split(\",\")[1];\r\n                  console.log(`PNG base64 length: ${base64.length}`);\r\n\r\n                  // Clean up\r\n                  URL.revokeObjectURL(svgUrl);\r\n\r\n                  resolve(base64);\r\n                };\r\n                reader.onerror = () => reject(new Error(\"Failed to read PNG blob\"));\r\n                reader.readAsDataURL(blob);\r\n              },\r\n              \"image/png\",\r\n              1.0\r\n            ); // Maximum quality\r\n          } catch (drawError) {\r\n            URL.revokeObjectURL(svgUrl);\r\n            reject(drawError);\r\n          }\r\n        };\r\n\r\n        img.onerror = () => {\r\n          URL.revokeObjectURL(svgUrl);\r\n          reject(new Error(\"Failed to load SVG image\"));\r\n        };\r\n\r\n        // Load SVG\r\n        img.src = svgUrl;\r\n      } catch (error) {\r\n        console.error(\"SVG to PNG conversion error:\", error);\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { SvgPositionInfo } from \"./mathjax-service\";\r\n\r\nexport interface ProcessedSvgResult {\r\n  svgString: string;\r\n  width: number;\r\n  height: number;\r\n  baselineOffsetPt: number;\r\n}\r\n\r\nexport class SvgProcessor {\r\n  prepareSvgForOffice(\r\n    svg: SVGElement,\r\n    targetPtSize: number,\r\n    positionInfo?: SvgPositionInfo\r\n  ): ProcessedSvgResult {\r\n    const svgClone = svg.cloneNode(true) as SVGElement;\r\n\r\n    svgClone.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\r\n\r\n    // Extract baseline information from MathJax before removing style\r\n    const originalStyle = svgClone.getAttribute(\"style\") || \"\";\r\n    let baselineOffset = 0;\r\n\r\n    const verticalAlignMatch = originalStyle.match(/vertical-align:\\s*([-\\d.]+)ex/);\r\n    if (verticalAlignMatch) {\r\n      baselineOffset = parseFloat(verticalAlignMatch[1]);\r\n    }\r\n\r\n    this.cleanSvgAttributes(svgClone);\r\n\r\n    const viewBox = svgClone.getAttribute(\"viewBox\");\r\n    if (!viewBox) {\r\n      throw new Error(\"SVG missing viewBox attribute.\");\r\n    }\r\n\r\n    const [minX, minY, vbWidth, vbHeight] = viewBox.split(\" \").map(parseFloat);\r\n\r\n    // Scale the SVG so that 1em in MathJax's internal units maps to the target font size in pixels\r\n    const targetPxSize = targetPtSize * (96 / 72);\r\n    const internalUnitsPerEm = 1000;\r\n    const scale = targetPxSize / internalUnitsPerEm;\r\n\r\n    const width = Math.round(vbWidth * scale);\r\n    const height = Math.round(vbHeight * scale);\r\n\r\n    // Calculate baseline adjustment for proper text alignment\r\n    let baselineOffsetPt = 0;\r\n\r\n    if (positionInfo) {\r\n      const baselineOffsetPx = positionInfo.baseline * 0.5 * targetPtSize * (96 / 72);\r\n\r\n      if (positionInfo.mainFractionBar) {\r\n        baselineOffsetPt = baselineOffsetPx * (72 / 96);\r\n\r\n        const svgCenterY = minY + vbHeight / 2;\r\n        const mainBarY = positionInfo.mainFractionBar.y;\r\n        const fractionBarOffsetFromCenter = mainBarY + (positionInfo.mainFractionBar.height / 2) - svgCenterY;\r\n      } else {\r\n        baselineOffsetPt = baselineOffsetPx * (72 / 96);\r\n      }\r\n    }\r\n\r\n    svgClone.setAttribute(\"width\", String(width));\r\n    svgClone.setAttribute(\"height\", String(height));\r\n\r\n    this.fixThinRectangles(svgClone, vbHeight);\r\n    this.fixColors(svgClone);\r\n    this.addWhiteBackground(svgClone, minX, minY, vbWidth, vbHeight);\r\n    this.convertUseElementsToPaths(svgClone);\r\n\r\n    const svgString = new XMLSerializer().serializeToString(svgClone);\r\n    const finalSvgString = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>${svgString}`;\r\n\r\n    return { svgString: finalSvgString, width, height, baselineOffsetPt };\r\n  }\r\n\r\n  private cleanSvgAttributes(svgClone: SVGElement): void {\r\n    svgClone.removeAttribute(\"focusable\");\r\n    svgClone.removeAttribute(\"aria-hidden\");\r\n    svgClone.removeAttribute(\"role\");\r\n    svgClone.removeAttribute(\"style\");\r\n  }\r\n\r\n  private fixThinRectangles(svgClone: SVGElement, vbHeight: number): void {\r\n    const rects = svgClone.querySelectorAll(\"rect\");\r\n    rects.forEach((rect) => {\r\n      const rectHeight = parseFloat(rect.getAttribute(\"height\") || \"0\");\r\n      const rectY = parseFloat(rect.getAttribute(\"y\") || \"0\");\r\n\r\n      if (rectHeight < vbHeight * 0.01 && rectHeight > 0) {\r\n        const minVisibleHeight = vbHeight * 0.012;\r\n        const newHeight = Math.max(rectHeight, minVisibleHeight);\r\n\r\n        const heightDiff = newHeight - rectHeight;\r\n        const newY = rectY - heightDiff / 2;\r\n\r\n        rect.setAttribute(\"height\", String(newHeight));\r\n        rect.setAttribute(\"y\", String(newY));\r\n      }\r\n    });\r\n  }\r\n\r\n  private fixColors(svgClone: SVGElement): void {\r\n    // First, check if there are any actual color values in the SVG\r\n    const allElements = svgClone.querySelectorAll(\"*\");\r\n    const hasActualColors = Array.from(allElements).some((element) => {\r\n      const fill = element.getAttribute(\"fill\");\r\n      const stroke = element.getAttribute(\"stroke\");\r\n      return (fill && fill !== \"black\" && fill !== \"white\" && fill !== \"currentColor\") ||\r\n             (stroke && stroke !== \"black\" && stroke !== \"white\" && stroke !== \"currentColor\");\r\n    });\r\n\r\n    allElements.forEach((element) => {\r\n      const fill = element.getAttribute(\"fill\");\r\n      const stroke = element.getAttribute(\"stroke\");\r\n\r\n      // If there are actual colors in the SVG, be more careful with currentColor\r\n      if (hasActualColors) {\r\n        // Only fix currentColor if the element doesn't have a parent with actual colors\r\n        if (fill === \"currentColor\") {\r\n          // Check if this element or its parent has an actual color\r\n          const parentWithColor = this.findParentWithColor(element);\r\n          if (!parentWithColor) {\r\n            element.setAttribute(\"fill\", \"black\");\r\n          } else {\r\n            // Remove currentColor to inherit from parent\r\n            element.removeAttribute(\"fill\");\r\n          }\r\n        }\r\n        if (stroke === \"currentColor\") {\r\n          const parentWithColor = this.findParentWithColor(element);\r\n          if (!parentWithColor) {\r\n            element.setAttribute(\"stroke\", \"black\");\r\n          } else {\r\n            // Remove currentColor to inherit from parent\r\n            element.removeAttribute(\"stroke\");\r\n          }\r\n        }\r\n\r\n        // If child elements have no color attributes under a colored parent, \r\n        // explicitly set the parent's color\r\n        const parentWithColor = this.findParentWithColor(element);\r\n        if (hasActualColors && parentWithColor) {\r\n          const currentFill = element.getAttribute(\"fill\");\r\n          const currentStroke = element.getAttribute(\"stroke\");\r\n\r\n          // If element has null/empty color attributes, set explicit colors from parent\r\n          if (currentFill === \"\" || currentFill === \"null\" || currentFill === null) {\r\n            const parentFill = parentWithColor.getAttribute(\"fill\");\r\n            if (parentFill && parentFill !== \"black\" && parentFill !== \"white\" && parentFill !== \"currentColor\") {\r\n              element.setAttribute(\"fill\", parentFill);\r\n            }\r\n          }\r\n          if (currentStroke === \"\" || currentStroke === \"null\" || currentStroke === null) {\r\n            const parentStroke = parentWithColor.getAttribute(\"stroke\");\r\n            if (parentStroke && parentStroke !== \"black\" && parentStroke !== \"white\" && parentStroke !== \"currentColor\") {\r\n              element.setAttribute(\"stroke\", parentStroke);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        // No actual colors, safe to convert all currentColor to black\r\n        if (fill === \"currentColor\") {\r\n          element.setAttribute(\"fill\", \"black\");\r\n        }\r\n        if (stroke === \"currentColor\") {\r\n          element.setAttribute(\"stroke\", \"black\");\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private findParentWithColor(element: Element): Element | null {\r\n    let parent = element.parentElement;\r\n    while (parent) {\r\n      const fill = parent.getAttribute(\"fill\");\r\n      const stroke = parent.getAttribute(\"stroke\");\r\n      if ((fill && fill !== \"black\" && fill !== \"white\" && fill !== \"currentColor\") ||\r\n          (stroke && stroke !== \"black\" && stroke !== \"white\" && stroke !== \"currentColor\")) {\r\n        return parent;\r\n      }\r\n      parent = parent.parentElement;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private addWhiteBackground(svgClone: SVGElement, minX: number, minY: number, vbWidth: number, vbHeight: number): void {\r\n    const bgRect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\r\n    bgRect.setAttribute(\"x\", String(minX));\r\n    bgRect.setAttribute(\"y\", String(minY));\r\n    bgRect.setAttribute(\"width\", String(vbWidth));\r\n    bgRect.setAttribute(\"height\", String(vbHeight));\r\n    bgRect.setAttribute(\"fill\", \"white\");\r\n\r\n    // Insert background as first child (behind other elements)\r\n    svgClone.insertBefore(bgRect, svgClone.firstChild);\r\n  }\r\n\r\n  private convertUseElementsToPaths(svgClone: SVGElement): void {\r\n    const defs = svgClone.querySelector(\"defs\");\r\n    const useElements = svgClone.querySelectorAll(\"use\");\r\n    useElements.forEach((useElement) => {\r\n      const href = useElement.getAttribute(\"href\") || useElement.getAttribute(\"xlink:href\");\r\n      if (href && defs) {\r\n        const referencedId = href.replace(\"#\", \"\");\r\n        const referencedElement = defs.querySelector(`#${referencedId}`);\r\n\r\n        if (referencedElement && referencedElement.tagName === \"path\") {\r\n          const newPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n          newPath.setAttribute(\"d\", referencedElement.getAttribute(\"d\") || \"\");\r\n          if (useElement.hasAttribute(\"transform\")) {\r\n            newPath.setAttribute(\"transform\", useElement.getAttribute(\"transform\")!);\r\n          }\r\n\r\n          // Preserve colors from the use element or referenced element\r\n          const fillColor = useElement.getAttribute(\"fill\") || referencedElement.getAttribute(\"fill\") || \"black\";\r\n          const strokeColor = useElement.getAttribute(\"stroke\") || referencedElement.getAttribute(\"stroke\");\r\n          \r\n          newPath.setAttribute(\"fill\", fillColor);\r\n          if (strokeColor) {\r\n            newPath.setAttribute(\"stroke\", strokeColor);\r\n          }\r\n\r\n          useElement.parentNode?.replaceChild(newPath, useElement);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\n// Core modules\r\nimport { EquationBuilder } from \"../core/equation-builder\";\r\nimport { LatexConverter } from \"../core/latex-converter\";\r\nimport { ContextManager } from \"../core/context-manager\";\r\nimport { FontMeasurementService } from \"../core/font-measurement\";\r\n\r\n// UI modules\r\nimport { DisplayRenderer } from \"../ui/display-renderer\";\r\nimport { InputHandler } from \"../ui/input-handler\";\r\nimport { TabController } from \"../ui/tab-controller\";\r\n\r\n// Integration modules\r\nimport { MathJaxService } from \"../integration/mathjax-service\";\r\nimport { OfficeService } from \"../integration/office-service\";\r\nimport { SvgProcessor } from \"../integration/svg-processor\";\r\n\r\n// Application state\r\nclass MathAddinApp {\r\n  private equationBuilder: EquationBuilder;\r\n  private latexConverter: LatexConverter;\r\n  private contextManager: ContextManager;\r\n  private displayRenderer: DisplayRenderer;\r\n  private inputHandler: InputHandler;\r\n  private tabController: TabController;\r\n  private mathJaxService: MathJaxService;\r\n  private officeService: OfficeService;\r\n  private svgProcessor: SvgProcessor;\r\n  private fontMeasurementService: FontMeasurementService;\r\n  private currentColor: string = \"#000000\";\r\n  private currentUnderlineStyle: \"single\" | \"double\" = \"single\";\r\n  private isInlineStyle: boolean = false; // Default is display style\r\n\r\n  constructor() {\r\n    this.equationBuilder = new EquationBuilder();\r\n    this.latexConverter = new LatexConverter();\r\n    this.latexConverter.setEquationBuilder(this.equationBuilder);\r\n    this.contextManager = new ContextManager(this.equationBuilder, this.latexConverter);\r\n    this.displayRenderer = new DisplayRenderer(this.contextManager);\r\n    this.mathJaxService = new MathJaxService();\r\n    this.officeService = new OfficeService(this.equationBuilder, this.latexConverter);\r\n    this.svgProcessor = new SvgProcessor();\r\n    this.fontMeasurementService = new FontMeasurementService();\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n    // Wait for MathJax to be ready\r\n    await this.mathJaxService.waitForMathJaxReady();\r\n\r\n    // Get DOM elements\r\n    const elements = this.getDOMElements();\r\n    if (!elements) {\r\n      return;\r\n    }\r\n\r\n    // Initialize UI modules\r\n    this.inputHandler = new InputHandler(\r\n      this.equationBuilder,\r\n      this.contextManager,\r\n      this.displayRenderer,\r\n      elements.equationDisplay\r\n    );\r\n\r\n    // Connect input handler to latex converter and display renderer for differential style\r\n    this.latexConverter.setInputHandler(this.inputHandler);\r\n    this.displayRenderer.setInputHandler(this.inputHandler);\r\n\r\n    // Set up selection change callback\r\n    this.inputHandler.onSelectionChange = () => this.updateFormattingUIBasedOnSelection();\r\n\r\n    this.tabController = new TabController(elements.tabNav, elements.tabContent);\r\n\r\n    // Set up event listeners\r\n    this.setupEventListeners(elements);\r\n\r\n    // Set up Office integration\r\n    this.officeService.setEquationLoadedCallback((latex: string) => this.handleEquationLoaded(latex));\r\n    this.officeService.setupEquationImageHandler();\r\n\r\n    // Initialize display\r\n    this.displayRenderer.updateDisplay(elements.equationDisplay, this.equationBuilder.getEquation());\r\n\r\n    // Initialize color previews\r\n    this.updateColorPreview(this.currentColor);\r\n    this.updateHexColorPreview(this.currentColor);\r\n    elements.hexInput.value = this.currentColor;\r\n\r\n    // Measure and set font scaling for inline-limits operators\r\n    try {\r\n      await this.fontMeasurementService.measureAndSetScaleRatios();\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  private getDOMElements() {\r\n    const insertButton = document.getElementById(\"insert-equation-button\") as HTMLButtonElement;\r\n    const clearButton = document.getElementById(\"clear-equation-button\") as HTMLButtonElement;\r\n    const statusDiv = document.getElementById(\"status\") as HTMLDivElement;\r\n    const hiddenInput = document.getElementById(\"hiddenInput\") as HTMLInputElement;\r\n    const equationDisplay = document.getElementById(\"equationDisplay\") as HTMLDivElement;\r\n    const tabNav = document.querySelector(\".tab-nav\") as HTMLDivElement;\r\n    const tabContent = document.querySelector(\".tab-content\") as HTMLDivElement;\r\n\r\n    // Font and formatting controls\r\n    const fontSizeInput = document.getElementById(\"fontSizeInput\") as HTMLInputElement;\r\n    const fontSizeDropdownBtn = document.getElementById(\"fontSizeDropdownBtn\") as HTMLButtonElement;\r\n    const fontSizeDropdown = document.getElementById(\"fontSizeDropdown\") as HTMLDivElement;\r\n    const boldBtn = document.getElementById(\"boldBtn\") as HTMLButtonElement;\r\n    const italicBtn = document.getElementById(\"italicBtn\") as HTMLButtonElement;\r\n    const underlineBtn = document.getElementById(\"underlineBtn\") as HTMLButtonElement;\r\n    const underlineDropdownBtn = document.getElementById(\"underlineDropdownBtn\") as HTMLButtonElement;\r\n    const cancelBtn = document.getElementById(\"cancelBtn\") as HTMLButtonElement;\r\n    const colorBtn = document.getElementById(\"colorBtn\") as HTMLButtonElement;\r\n    const colorDropdownBtn = document.getElementById(\"colorDropdownBtn\") as HTMLButtonElement;\r\n    const textModeBtn = document.getElementById(\"textModeBtn\") as HTMLButtonElement;\r\n    const underlineDropdown = document.getElementById(\"underlineDropdown\") as HTMLDivElement;\r\n    const colorPanel = document.getElementById(\"colorPanel\") as HTMLDivElement;\r\n    const colorPreview = document.getElementById(\"colorPreview\") as HTMLDivElement;\r\n    const hexInput = document.getElementById(\"hexInput\") as HTMLInputElement;\r\n    const hexColorPreview = document.getElementById(\"hexColorPreview\") as HTMLDivElement;\r\n    const colorOkBtn = document.getElementById(\"colorOkBtn\") as HTMLButtonElement;\r\n    const colorCancelBtn = document.getElementById(\"colorCancelBtn\") as HTMLButtonElement;\r\n\r\n    if (!insertButton || !clearButton || !statusDiv || !hiddenInput || \r\n        !equationDisplay || !tabNav || !tabContent ||\r\n        !fontSizeInput || !fontSizeDropdownBtn || !fontSizeDropdown || !boldBtn || !italicBtn ||\r\n        !underlineBtn || !underlineDropdownBtn || !cancelBtn || !colorBtn || !colorDropdownBtn || !underlineDropdown ||\r\n        !colorPanel || !colorPreview || !hexInput || !hexColorPreview || !colorOkBtn || !colorCancelBtn) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      insertButton,\r\n      clearButton,\r\n      statusDiv,\r\n      hiddenInput,\r\n      equationDisplay,\r\n      tabNav,\r\n      tabContent,\r\n      fontSizeInput,\r\n      fontSizeDropdownBtn,\r\n      fontSizeDropdown,\r\n      boldBtn,\r\n      italicBtn,\r\n      underlineBtn,\r\n      underlineDropdownBtn,\r\n      cancelBtn,\r\n      colorBtn,\r\n      colorDropdownBtn,\r\n      textModeBtn,\r\n      underlineDropdown,\r\n      colorPanel,\r\n      colorPreview,\r\n      hexInput,\r\n      hexColorPreview,\r\n      colorOkBtn,\r\n      colorCancelBtn,\r\n    };\r\n  }\r\n\r\n  private setupEventListeners(elements: ReturnType<MathAddinApp[\"getDOMElements\"]>) {\r\n    if (!elements) return;\r\n\r\n    // Primary action buttons\r\n    elements.insertButton.addEventListener(\"click\", () => this.handleInsertEquation(elements.statusDiv));\r\n    elements.clearButton.addEventListener(\"click\", () => this.handleClearEquation());\r\n\r\n    // Input handling\r\n    elements.hiddenInput.addEventListener(\"keydown\", (e) => this.inputHandler.handleKeyPress(e));\r\n    elements.hiddenInput.addEventListener(\"input\", (e) => this.inputHandler.handleInput(e));\r\n\r\n    // Font size handling\r\n    elements.fontSizeInput.addEventListener(\"input\", (e) => this.inputHandler.handleFontSizeChange(e));\r\n    elements.fontSizeDropdownBtn.addEventListener(\"click\", (e) => this.handleFontSizeDropdownClick(e));\r\n    elements.fontSizeDropdown.addEventListener(\"click\", (e) => this.handleFontSizeOptionClick(e));\r\n\r\n    // Format button handlers\r\n    elements.boldBtn.addEventListener(\"click\", () => this.inputHandler.toggleBold());\r\n    elements.italicBtn.addEventListener(\"click\", () => this.inputHandler.toggleItalic());\r\n    elements.underlineBtn.addEventListener(\"click\", () => this.handleUnderlineApply());\r\n    elements.underlineDropdownBtn.addEventListener(\"click\", (e) => this.handleUnderlineDropdownClick(e));\r\n    elements.cancelBtn.addEventListener(\"click\", () => this.inputHandler.toggleCancel());\r\n    elements.colorBtn.addEventListener(\"click\", () => this.handleColorApply());\r\n    elements.colorDropdownBtn.addEventListener(\"click\", (e) => this.handleColorDropdownClick(e));\r\n    elements.textModeBtn.addEventListener(\"click\", () => this.handleTextModeToggle());\r\n\r\n    // Color panel handlers\r\n    elements.colorPanel.addEventListener(\"click\", (e) => this.handleColorPanelClick(e));\r\n    elements.colorOkBtn.addEventListener(\"click\", () => this.handleColorOk());\r\n    elements.colorCancelBtn.addEventListener(\"click\", () => this.handleColorCancel());\r\n    elements.hexInput.addEventListener(\"input\", (e) => this.handleHexInputChange(e));\r\n\r\n    // Underline dropdown handlers\r\n    elements.underlineDropdown.addEventListener(\"click\", (e) => this.handleUnderlineOptionClick(e));\r\n\r\n    // Close dropdowns when clicking outside\r\n    document.addEventListener(\"click\", (e) => this.handleOutsideClick(e, elements));\r\n\r\n    // Builder buttons (using event delegation)\r\n    elements.tabContent.addEventListener(\"click\", (e) => this.handleBuilderButtonClick(e));\r\n\r\n    // Format buttons (using event delegation)\r\n    document.addEventListener(\"click\", (e) => this.handleFormatButtonClick(e));\r\n\r\n    // Differential style toggle buttons (using event delegation)\r\n    elements.tabContent.addEventListener(\"click\", (e) => {\r\n      const target = e.target as HTMLElement;\r\n      const button = target.closest(\"button.differential-style-btn\");\r\n      if (button) {\r\n        if (button.id === \"differential-style-italic\") {\r\n          this.handleDifferentialStyleToggle(\"italic\");\r\n        } else if (button.id === \"differential-style-roman\") {\r\n          this.handleDifferentialStyleToggle(\"roman\");\r\n        }\r\n      }\r\n    });\r\n\r\n    // Display/Inline style toggle button\r\n    const displayStyleToggle = document.getElementById(\"display-style-toggle\");\r\n    if (displayStyleToggle) {\r\n      displayStyleToggle.addEventListener(\"click\", () => {\r\n        this.handleDisplayStyleToggle();\r\n      });\r\n    }\r\n\r\n    // Display click handling\r\n    elements.equationDisplay.addEventListener(\"mousedown\", (e) => this.inputHandler.handleMouseDown(e));\r\n    elements.equationDisplay.addEventListener(\"mousemove\", (e) => this.inputHandler.handleMouseMove(e));\r\n    elements.equationDisplay.addEventListener(\"mouseup\", (e) => this.inputHandler.handleMouseUp(e));\r\n\r\n    // Document click handling for exiting edit mode\r\n    document.addEventListener(\"click\", (e) => this.inputHandler.handleDocumentClick(e));\r\n  }\r\n\r\n  private handleBuilderButtonClick(e: Event): void {\r\n    const target = e.target as HTMLElement;\r\n    const button = target.closest(\"button.builder-btn\");\r\n    if (!button) return;\r\n\r\n    if (button.classList.contains(\"display-fraction-btn\")) {\r\n      this.inputHandler.insertDisplayFraction();\r\n    } else if (button.classList.contains(\"fraction-btn\")) {\r\n      this.inputHandler.insertFraction();\r\n    } else if (button.classList.contains(\"bevelled-fraction-btn\")) {\r\n      this.inputHandler.insertBevelledFraction();\r\n    } else if (button.classList.contains(\"operator-btn\")) {\r\n      const operator = (button as HTMLElement).dataset.operator || \"\";\r\n      this.inputHandler.insertSymbol(operator);\r\n    } else if (button.classList.contains(\"greek-letter-btn\") || button.classList.contains(\"greek-letter-capital-btn\")) {\r\n      const greekLetter = (button as HTMLElement).dataset.greek || \"\";\r\n      this.inputHandler.insertSymbol(greekLetter);\r\n    } else if (button.classList.contains(\"accent-btn\")) {\r\n      const accentType = (button as HTMLElement).dataset.accent || \"\";\r\n      const position = ((button as HTMLElement).dataset.position as \"over\" | \"under\") || \"over\";\r\n      this.inputHandler.insertAccent(accentType, position);\r\n    } else if (button.classList.contains(\"arrow-btn\")) {\r\n      const arrow = (button as HTMLElement).dataset.arrow || \"\";\r\n      this.inputHandler.insertSymbol(arrow);\r\n    } else if (button.classList.contains(\"matrix-btn\")) {\r\n      const matrixType = (button as HTMLElement).dataset.matrixType as \"parentheses\" | \"brackets\" | \"braces\" | \"bars\" | \"double-bars\" | \"none\" || \"parentheses\";\r\n      this.handleMatrixButtonClick(matrixType);\r\n    } else if (button.classList.contains(\"sqrt-btn\")) {\r\n      this.inputHandler.insertSquareRoot();\r\n    } else if (button.classList.contains(\"nthroot-btn\")) {\r\n      this.inputHandler.insertNthRoot();\r\n    } else if (button.classList.contains(\"sup-btn\")) {\r\n      this.inputHandler.insertScript(\"superscript\");\r\n    } else if (button.classList.contains(\"sub-btn\")) {\r\n      this.inputHandler.insertScript(\"subscript\");\r\n    } else if (button.classList.contains(\"sup-sub-btn\")) {\r\n      this.inputHandler.insertSuperscriptSubscript();\r\n    } else if (button.classList.contains(\"bracket-preset-btn\")) {\r\n      const bracketType = (button as HTMLElement).dataset.bracket || \"\";\r\n      this.handlePresetBracketInsertion(bracketType);\r\n    } else if (button.classList.contains(\"custom-bracket-btn\")) {\r\n      this.handleCustomBracketInsertion();\r\n    } else if (button.classList.contains(\"evaluation-bracket-btn\")) {\r\n      const evaluationType = (button as HTMLElement).dataset.evaluationType as \"bar\" | \"square\" || \"bar\";\r\n      this.handleEvaluationBracketInsertion(evaluationType);\r\n    } else if (button.classList.contains(\"sum-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"∑\", \"inline\", \"nolimits\");\r\n    } else if (button.classList.contains(\"sum-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"∑\", \"inline\", \"limits\");\r\n    } else if (button.classList.contains(\"sum-display-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"∑\", \"display\", \"nolimits\");\r\n    } else if (button.classList.contains(\"sum-display-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"∑\", \"display\", \"limits\");\r\n    } else if (button.classList.contains(\"prod-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"∏\", \"inline\", \"nolimits\");\r\n    } else if (button.classList.contains(\"prod-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"∏\", \"inline\", \"limits\");\r\n    } else if (button.classList.contains(\"prod-display-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"∏\", \"display\", \"nolimits\");\r\n    } else if (button.classList.contains(\"prod-display-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"∏\", \"display\", \"limits\");\r\n    \r\n    // Set operations\r\n    } else if (button.classList.contains(\"bigcup-display-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋃\", \"display\", \"nolimits\");\r\n    } else if (button.classList.contains(\"bigcup-display-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋃\", \"display\", \"limits\");\r\n    } else if (button.classList.contains(\"bigcup-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋃\", \"inline\", \"nolimits\");\r\n    } else if (button.classList.contains(\"bigcup-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋃\", \"inline\", \"limits\");\r\n    } else if (button.classList.contains(\"bigcap-display-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋂\", \"display\", \"nolimits\");\r\n    } else if (button.classList.contains(\"bigcap-display-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋂\", \"display\", \"limits\");\r\n    } else if (button.classList.contains(\"bigcap-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋂\", \"inline\", \"nolimits\");\r\n    } else if (button.classList.contains(\"bigcap-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋂\", \"inline\", \"limits\");\r\n    \r\n    // Logic operations\r\n    } else if (button.classList.contains(\"bigvee-display-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋁\", \"display\", \"nolimits\");\r\n    } else if (button.classList.contains(\"bigvee-display-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋁\", \"display\", \"limits\");\r\n    } else if (button.classList.contains(\"bigvee-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋁\", \"inline\", \"nolimits\");\r\n    } else if (button.classList.contains(\"bigvee-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋁\", \"inline\", \"limits\");\r\n    } else if (button.classList.contains(\"bigwedge-display-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋀\", \"display\", \"nolimits\");\r\n    } else if (button.classList.contains(\"bigwedge-display-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋀\", \"display\", \"limits\");\r\n    } else if (button.classList.contains(\"bigwedge-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋀\", \"inline\", \"nolimits\");\r\n    } else if (button.classList.contains(\"bigwedge-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⋀\", \"inline\", \"limits\");\r\n    \r\n    // Binary operations\r\n    } else if (button.classList.contains(\"bigoplus-display-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨁\", \"display\", \"nolimits\");\r\n    } else if (button.classList.contains(\"bigoplus-display-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨁\", \"display\", \"limits\");\r\n    } else if (button.classList.contains(\"bigoplus-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨁\", \"inline\", \"nolimits\");\r\n    } else if (button.classList.contains(\"bigoplus-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨁\", \"inline\", \"limits\");\r\n    } else if (button.classList.contains(\"bigotimes-display-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨂\", \"display\", \"nolimits\");\r\n    } else if (button.classList.contains(\"bigotimes-display-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨂\", \"display\", \"limits\");\r\n    } else if (button.classList.contains(\"bigotimes-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨂\", \"inline\", \"nolimits\");\r\n    } else if (button.classList.contains(\"bigotimes-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨂\", \"inline\", \"limits\");\r\n    } else if (button.classList.contains(\"bigodot-display-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨀\", \"display\", \"nolimits\");\r\n    } else if (button.classList.contains(\"bigodot-display-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨀\", \"display\", \"limits\");\r\n    } else if (button.classList.contains(\"bigodot-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨀\", \"inline\", \"nolimits\");\r\n    } else if (button.classList.contains(\"bigodot-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨀\", \"inline\", \"limits\");\r\n    } else if (button.classList.contains(\"coprod-display-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"∐\", \"display\", \"nolimits\");\r\n    } else if (button.classList.contains(\"coprod-display-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"∐\", \"display\", \"limits\");\r\n    } else if (button.classList.contains(\"coprod-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"∐\", \"inline\", \"nolimits\");\r\n    } else if (button.classList.contains(\"coprod-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"∐\", \"inline\", \"limits\");\r\n    } else if (button.classList.contains(\"biguplus-display-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨄\", \"display\", \"nolimits\");\r\n    } else if (button.classList.contains(\"biguplus-display-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨄\", \"display\", \"limits\");\r\n    } else if (button.classList.contains(\"biguplus-nolimit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨄\", \"inline\", \"nolimits\");\r\n    } else if (button.classList.contains(\"biguplus-limit-btn\")) {\r\n      this.inputHandler.insertLargeOperator(\"⨄\", \"inline\", \"limits\");\r\n    } else if (button.classList.contains(\"int-display-nolimit-btn\")) {\r\n      this.inputHandler.insertDefiniteIntegral(\"single\", this.isInlineStyle ? \"inline\" : \"display\", \"nolimits\");\r\n    } else if (button.classList.contains(\"int-display-limit-btn\")) {\r\n      this.inputHandler.insertDefiniteIntegral(\"single\", this.isInlineStyle ? \"inline\" : \"display\", \"limits\");\r\n    } else if (button.classList.contains(\"first-derivative-btn\")) {\r\n      this.inputHandler.insertDerivative(\"first\", this.isInlineStyle ? \"inline\" : \"display\");\r\n    } else if (button.classList.contains(\"nth-derivative-btn\")) {\r\n      this.inputHandler.insertDerivative(\"nth\", this.isInlineStyle ? \"inline\" : \"display\");\r\n    } else if (button.classList.contains(\"derivative-long-form-btn\")) {\r\n      this.inputHandler.insertDerivativeLongForm(\"first\", this.isInlineStyle ? \"inline\" : \"display\");\r\n    } else if (button.classList.contains(\"nth-derivative-long-form-btn\")) {\r\n      this.inputHandler.insertDerivativeLongForm(\"nth\", this.isInlineStyle ? \"inline\" : \"display\");\r\n    \r\n    // Partial derivative buttons\r\n    } else if (button.classList.contains(\"first-partial-derivative-btn\")) {\r\n      this.inputHandler.insertPartialDerivative(\"first\", this.isInlineStyle ? \"inline\" : \"display\");\r\n    } else if (button.classList.contains(\"nth-partial-derivative-btn\")) {\r\n      this.inputHandler.insertPartialDerivative(\"nth\", this.isInlineStyle ? \"inline\" : \"display\");\r\n    } else if (button.classList.contains(\"partial-derivative-long-form-btn\")) {\r\n      this.inputHandler.insertPartialDerivativeLongForm(\"first\", this.isInlineStyle ? \"inline\" : \"display\");\r\n    } else if (button.classList.contains(\"nth-partial-derivative-long-form-btn\")) {\r\n      this.inputHandler.insertPartialDerivativeLongForm(\"nth\", this.isInlineStyle ? \"inline\" : \"display\");\r\n    } else if (button.classList.contains(\"int-indefinite-display-btn\")) {\r\n      this.inputHandler.insertSingleIntegral(this.isInlineStyle ? \"inline\" : \"display\");\r\n    \r\n    // Double integral buttons\r\n    } else if (button.classList.contains(\"double-int-indefinite-btn\")) {\r\n      this.inputHandler.insertDoubleIntegral(this.isInlineStyle ? \"inline\" : \"display\");\r\n    } else if (button.classList.contains(\"double-int-subscript-btn\")) {\r\n      this.inputHandler.insertDoubleIntegralSubscript(this.isInlineStyle ? \"inline\" : \"display\");\r\n    } else if (button.classList.contains(\"double-int-lower-btn\")) {\r\n      this.inputHandler.insertDoubleIntegralLower(this.isInlineStyle ? \"inline\" : \"display\");\r\n    } else if (button.classList.contains(\"double-int-nolimit-btn\")) {\r\n      this.inputHandler.insertDefiniteIntegral(\"double\", this.isInlineStyle ? \"inline\" : \"display\", \"nolimits\");\r\n    } else if (button.classList.contains(\"double-int-limit-btn\")) {\r\n      this.inputHandler.insertDefiniteIntegral(\"double\", this.isInlineStyle ? \"inline\" : \"display\", \"limits\");\r\n    \r\n    // Triple integral buttons\r\n    } else if (button.classList.contains(\"triple-int-indefinite-btn\")) {\r\n      this.inputHandler.insertTripleIntegral(this.isInlineStyle ? \"inline\" : \"display\");\r\n    } else if (button.classList.contains(\"triple-int-subscript-btn\")) {\r\n      this.inputHandler.insertTripleIntegralSubscript(this.isInlineStyle ? \"inline\" : \"display\");\r\n    } else if (button.classList.contains(\"triple-int-lower-btn\")) {\r\n      this.inputHandler.insertTripleIntegralLower(this.isInlineStyle ? \"inline\" : \"display\");\r\n    } else if (button.classList.contains(\"triple-int-nolimit-btn\")) {\r\n      this.inputHandler.insertDefiniteIntegral(\"triple\", this.isInlineStyle ? \"inline\" : \"display\", \"nolimits\");\r\n    } else if (button.classList.contains(\"triple-int-limit-btn\")) {\r\n      this.inputHandler.insertDefiniteIntegral(\"triple\", this.isInlineStyle ? \"inline\" : \"display\", \"limits\");\r\n    \r\n    // Contour integral buttons\r\n    } else if (button.classList.contains(\"contour-int-indefinite-btn\")) {\r\n      this.inputHandler.insertContourIntegral(this.isInlineStyle ? \"inline\" : \"display\");\r\n    } else if (button.classList.contains(\"contour-int-subscript-btn\")) {\r\n      // For contour with path subscript - use lower-only limit\r\n      this.inputHandler.insertContourIntegralSubscript(this.isInlineStyle ? \"inline\" : \"display\");\r\n    } else if (button.classList.contains(\"contour-int-nolimit-btn\")) {\r\n      this.inputHandler.insertDefiniteIntegral(\"contour\", this.isInlineStyle ? \"inline\" : \"display\", \"nolimits\");\r\n    \r\n    } else if (button.classList.contains(\"stack-btn\")) {\r\n      const stackType = (button as HTMLElement).dataset.stack || \"\";\r\n      this.handleStackButtonClick(stackType);\r\n    } else if (button.classList.contains(\"cases-btn\")) {\r\n      const casesType = (button as HTMLElement).dataset.cases || \"\";\r\n      this.handleCasesButtonClick(casesType);\r\n    } else if (button.classList.contains(\"function-btn\")) {\r\n      const functionType = (button as HTMLElement).dataset.function || \"\";\r\n      this.inputHandler.insertFunction(functionType);\r\n    }\r\n  }\r\n\r\n  private handleFormatButtonClick(e: Event): void {\r\n    const target = e.target as HTMLElement;\r\n    const button = target.closest(\"button.format-btn\");\r\n    if (!button) return;\r\n\r\n    // Format button handling is done through specific event listeners\r\n  }\r\n\r\n  private handleClearEquation(): void {\r\n    this.equationBuilder.clear();\r\n    this.contextManager.exitEditingMode();\r\n    this.contextManager.setCursorPosition(0);\r\n\r\n    const equationDisplay = document.getElementById(\"equationDisplay\") as HTMLDivElement;\r\n    if (equationDisplay) {\r\n      this.displayRenderer.updateDisplay(equationDisplay, this.equationBuilder.getEquation());\r\n    }\r\n  }\r\n\r\n  private handlePresetBracketInsertion(bracketType: string): void {\r\n    let leftBracket = \"\";\r\n    let rightBracket = \"\";\r\n\r\n    switch (bracketType) {\r\n      case \"()\":\r\n        leftBracket = \"(\";\r\n        rightBracket = \")\";\r\n        break;\r\n      case \"[]\":\r\n        leftBracket = \"[\";\r\n        rightBracket = \"]\";\r\n        break;\r\n      case \"{}\":\r\n        leftBracket = \"{\";\r\n        rightBracket = \"}\";\r\n        break;\r\n      case \"⌊⌋\":\r\n        leftBracket = \"⌊\";\r\n        rightBracket = \"⌋\";\r\n        break;\r\n      case \"⌈⌉\":\r\n        leftBracket = \"⌈\";\r\n        rightBracket = \"⌉\";\r\n        break;\r\n      case \"||\":\r\n        leftBracket = \"|\";\r\n        rightBracket = \"|\";\r\n        break;\r\n      case \"‖‖\":\r\n        leftBracket = \"‖\";\r\n        rightBracket = \"‖\";\r\n        break;\r\n      case \"⟨⟩\":\r\n        leftBracket = \"⟨\";\r\n        rightBracket = \"⟩\";\r\n        break;\r\n    }\r\n\r\n    if (leftBracket || rightBracket) {\r\n      this.inputHandler.insertCustomBrackets(leftBracket, rightBracket);\r\n    }\r\n  }\r\n\r\n  private handleCustomBracketInsertion(): void {\r\n    const leftSelect = document.getElementById(\"leftBracketSelect\") as HTMLSelectElement;\r\n    const rightSelect = document.getElementById(\"rightBracketSelect\") as HTMLSelectElement;\r\n\r\n    if (!leftSelect || !rightSelect) {\r\n      return;\r\n    }\r\n\r\n    const leftBracket = leftSelect.value;\r\n    const rightBracket = rightSelect.value;\r\n\r\n    this.inputHandler.insertCustomBrackets(leftBracket, rightBracket);\r\n  }\r\n\r\n  private handleEvaluationBracketInsertion(evaluationType: \"bar\" | \"square\"): void {\r\n    this.inputHandler.insertEvaluationBracket(evaluationType);\r\n  }\r\n\r\n  private handleFontSizeDropdownClick(e: Event): void {\r\n    e.stopPropagation();\r\n    const dropdown = document.getElementById(\"fontSizeDropdown\") as HTMLDivElement;\r\n    const isVisible = dropdown.classList.contains(\"show\");\r\n\r\n    // Close all other dropdowns\r\n    this.closeAllDropdowns();\r\n\r\n    if (!isVisible) {\r\n      dropdown.classList.add(\"show\");\r\n\r\n      // Highlight current size in dropdown\r\n      const currentSize = document.getElementById(\"fontSizeInput\") as HTMLInputElement;\r\n      const currentValue = currentSize.value;\r\n\r\n      document.querySelectorAll(\".font-size-option\").forEach((option) => {\r\n        option.classList.remove(\"selected\");\r\n        if (option.getAttribute(\"data-size\") === currentValue) {\r\n          option.classList.add(\"selected\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private handleFontSizeOptionClick(e: Event): void {\r\n    const target = e.target as HTMLElement;\r\n    if (!target.classList.contains(\"font-size-option\")) return;\r\n\r\n    const fontSize = target.getAttribute(\"data-size\");\r\n    if (fontSize) {\r\n      const fontSizeInput = document.getElementById(\"fontSizeInput\") as HTMLInputElement;\r\n      fontSizeInput.value = fontSize;\r\n\r\n      // Trigger the input event to update the display\r\n      const event = new Event(\"input\", { bubbles: true });\r\n      fontSizeInput.dispatchEvent(event);\r\n\r\n      // Update selection display\r\n      document.querySelectorAll(\".font-size-option\").forEach((opt) => opt.classList.remove(\"selected\"));\r\n      target.classList.add(\"selected\");\r\n    }\r\n\r\n    this.closeAllDropdowns();\r\n  }\r\n\r\n  private handleUnderlineApply(): void {\r\n    // Check if all selected text is underlined with the same style\r\n    const formatting = this.inputHandler.getSelectionFormatting();\r\n\r\n    if (formatting && formatting.underline && formatting.underline !== \"none\") {\r\n      // All selected text is underlined - remove underlines\r\n      this.inputHandler.setUnderlineStyle(\"none\");\r\n      this.updateUnderlineUI(\"none\");\r\n    } else {\r\n      // Apply the current underline style\r\n      this.inputHandler.setUnderlineStyle(this.currentUnderlineStyle);\r\n      this.updateUnderlineUI(this.currentUnderlineStyle);\r\n    }\r\n  }\r\n\r\n  private handleUnderlineDropdownClick(e: Event): void {\r\n    e.stopPropagation();\r\n    const underlineDropdown = document.getElementById(\"underlineDropdown\") as HTMLDivElement;\r\n    const isVisible = underlineDropdown.classList.contains(\"show\");\r\n\r\n    // Close all other dropdowns\r\n    this.closeAllDropdowns();\r\n\r\n    if (!isVisible) {\r\n      underlineDropdown.classList.add(\"show\");\r\n    }\r\n  }\r\n\r\n  private handleUnderlineOptionClick(e: Event): void {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    const target = e.target as HTMLElement;\r\n    const optionElement = target.closest(\".underline-option\") as HTMLElement;\r\n    if (!optionElement) return;\r\n\r\n    const underlineType = optionElement.dataset.underline;\r\n    if (underlineType) {\r\n      // Update current underline style and apply immediately\r\n      this.currentUnderlineStyle = underlineType as \"single\" | \"double\";\r\n      this.inputHandler.setUnderlineStyle(underlineType as \"none\" | \"single\" | \"double\");\r\n\r\n      // Update UI\r\n      this.updateUnderlineUI(underlineType);\r\n\r\n      // Auto-close the dropdown\r\n      this.closeAllDropdowns();\r\n    }\r\n  }\r\n\r\n  private updateUnderlineUI(underlineType: string): void {\r\n    const button = document.getElementById(\"underlineBtn\") as HTMLButtonElement;\r\n\r\n    // Update button active state\r\n    if (underlineType === \"none\") {\r\n      button.classList.remove(\"active\");\r\n    } else {\r\n      button.classList.add(\"active\");\r\n    }\r\n\r\n    // Update dropdown selection\r\n    document.querySelectorAll(\".underline-option\").forEach((opt) => opt.classList.remove(\"selected\"));\r\n    const selectedOption = document.querySelector(`[data-underline=\"${underlineType}\"]`);\r\n    if (selectedOption) {\r\n      selectedOption.classList.add(\"selected\");\r\n    }\r\n  }\r\n\r\n  private updateTextModeUI(): void {\r\n    const button = document.getElementById(\"textModeBtn\") as HTMLButtonElement;\r\n    const isTextMode = this.inputHandler.getTextMode();\r\n\r\n    if (isTextMode) {\r\n      button.classList.add(\"active\");\r\n    } else {\r\n      button.classList.remove(\"active\");\r\n    }\r\n  }\r\n\r\n  private updateFormattingUIBasedOnSelection(): void {\r\n    const formatting = this.inputHandler.getSelectionFormatting();\r\n\r\n    if (formatting) {\r\n      // Update underline UI based on selection\r\n      if (formatting.underline !== undefined) {\r\n        const underlineType \r\n        = formatting.underline === true ? 'single' : \r\n          formatting.underline === false ? 'none' : \r\n          formatting.underline;\r\n\r\n        this.updateUnderlineUI(underlineType);\r\n        this.currentUnderlineStyle =\r\n          underlineType === \"none\" ? \"single\" : (underlineType as \"single\" | \"double\");\r\n      } else {\r\n        // Mixed underline types - show none selected\r\n        this.updateUnderlineUI(\"none\");\r\n      }\r\n    }\r\n\r\n    // Update text mode UI\r\n    this.updateTextModeUI();\r\n  }\r\n\r\n  private handleColorApply(): void {\r\n    // Apply the current color directly to selected text\r\n    this.inputHandler.setTextColor(this.currentColor);\r\n  }\r\n\r\n  private handleTextModeToggle(): void {\r\n    // Toggle text mode and update button state\r\n    this.inputHandler.toggleTextMode();\r\n    this.updateTextModeUI();\r\n  }\r\n\r\n  private handleColorDropdownClick(e: Event): void {\r\n    e.stopPropagation();\r\n    const colorPanel = document.getElementById(\"colorPanel\") as HTMLDivElement;\r\n    const isVisible = colorPanel.classList.contains(\"show\");\r\n\r\n    // Close all other dropdowns\r\n    this.closeAllDropdowns();\r\n\r\n    if (!isVisible) {\r\n      colorPanel.classList.add(\"show\");\r\n    }\r\n  }\r\n\r\n  private handleColorPanelClick(e: Event): void {\r\n    const target = e.target as HTMLElement;\r\n    if (target.classList.contains(\"color-square\")) {\r\n      const color = target.dataset.color;\r\n      if (color) {\r\n        // Update current color and apply immediately\r\n        this.currentColor = color;\r\n        this.updateColorPreview(color);\r\n        this.inputHandler.setTextColor(color);\r\n\r\n        // Update hex input (but don't trigger onChange)\r\n        const hexInput = document.getElementById(\"hexInput\") as HTMLInputElement;\r\n        hexInput.value = color;\r\n        this.updateHexColorPreview(color);\r\n\r\n        // Update selection display\r\n        document.querySelectorAll(\".color-square\").forEach((sq) => sq.classList.remove(\"selected\"));\r\n        target.classList.add(\"selected\");\r\n\r\n        // Auto-close the panel\r\n        this.closeAllDropdowns();\r\n      }\r\n    }\r\n  }\r\n\r\n  private handleColorOk(): void {\r\n    const hexInput = document.getElementById(\"hexInput\") as HTMLInputElement;\r\n    let color = hexInput.value.trim();\r\n\r\n    // Validate hex color\r\n    if (!color.startsWith(\"#\")) {\r\n      color = \"#\" + color;\r\n    }\r\n\r\n    if (this.isValidHexColor(color)) {\r\n      this.selectColor(color);\r\n      this.closeAllDropdowns();\r\n    } else {\r\n      // Show error or reset to valid color\r\n      hexInput.style.borderColor = \"#ff0000\";\r\n      setTimeout(() => {\r\n        hexInput.style.borderColor = \"\";\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  private handleColorCancel(): void {\r\n    // Reset hex input to current color\r\n    const colorPreview = document.getElementById(\"colorPreview\") as HTMLDivElement;\r\n    const currentColor = colorPreview.style.backgroundColor || \"#000000\";\r\n    const hexInput = document.getElementById(\"hexInput\") as HTMLInputElement;\r\n\r\n    // Convert RGB to hex if needed\r\n    if (currentColor.startsWith(\"rgb\")) {\r\n      hexInput.value = this.rgbToHex(currentColor);\r\n    } else {\r\n      hexInput.value = currentColor;\r\n    }\r\n\r\n    this.closeAllDropdowns();\r\n  }\r\n\r\n  private handleDifferentialStyleToggle(style: \"italic\" | \"roman\"): void {\r\n    // Update button active states\r\n    const italicBtn = document.getElementById(\"differential-style-italic\");\r\n    const romanBtn = document.getElementById(\"differential-style-roman\");\r\n\r\n    if (style === \"italic\") {\r\n      italicBtn?.classList.add(\"active\");\r\n      romanBtn?.classList.remove(\"active\");\r\n      // Store preference in input handler\r\n      this.inputHandler.setDifferentialStyle(\"italic\");\r\n    } else {\r\n      italicBtn?.classList.remove(\"active\");\r\n      romanBtn?.classList.add(\"active\");\r\n      // Store preference in input handler\r\n      this.inputHandler.setDifferentialStyle(\"roman\");\r\n    }\r\n\r\n    // Update the display of derivative buttons\r\n    const derivativeDElements = document.querySelectorAll(\".derivative-d\");\r\n    derivativeDElements.forEach((element) => {\r\n      if (style === \"roman\") {\r\n        element.classList.add(\"roman\");\r\n      } else {\r\n        element.classList.remove(\"roman\");\r\n      }\r\n    });\r\n\r\n    // Update existing derivatives in the equation and refresh display\r\n    this.inputHandler.updateExistingDifferentialStyle(style);\r\n\r\n    // Update any derivative elements to reflect the new style\r\n    this.updateDerivativeElementsStyle(style);\r\n  }\r\n\r\n  private updateDerivativeElementsStyle(style: \"italic\" | \"roman\"): void {\r\n    // Force refresh of the display to update derivative d elements\r\n    const elements = this.getDOMElements();\r\n    if (elements) {\r\n      this.displayRenderer.updateDisplay(elements.equationDisplay, this.equationBuilder.getEquation());\r\n    }\r\n  }\r\n\r\n  private detectAndSetDifferentialStyle(latex: string): void {\r\n    // Detect differential style from LaTeX content\r\n    const hasPhysicsDerivatives = /\\\\dv\\b/.test(latex) || /\\{\\s*\\\\displaystyle\\s+\\\\dv\\b/.test(latex);\r\n    const hasCustomDerivatives = /\\\\derivfrac\\b/.test(latex) || /\\\\derivdfrac\\b/.test(latex);\r\n\r\n    let detectedStyle: \"italic\" | \"roman\" = \"italic\"; // default\r\n\r\n    if (hasPhysicsDerivatives) {\r\n      detectedStyle = \"roman\";\r\n    } else if (hasCustomDerivatives) {\r\n      detectedStyle = \"italic\";\r\n    }\r\n    // else: use default italic (for equations with no derivatives)\r\n\r\n    // Update the differential style buttons and input handler\r\n    this.setDifferentialStyleUI(detectedStyle);\r\n  }\r\n\r\n  private setDifferentialStyleUI(style: \"italic\" | \"roman\"): void {\r\n    const italicBtn = document.getElementById(\"differential-style-italic\");\r\n    const romanBtn = document.getElementById(\"differential-style-roman\");\r\n\r\n    if (style === \"italic\") {\r\n      italicBtn?.classList.add(\"active\");\r\n      romanBtn?.classList.remove(\"active\");\r\n      this.inputHandler.setDifferentialStyle(\"italic\");\r\n    } else {\r\n      italicBtn?.classList.remove(\"active\");\r\n      romanBtn?.classList.add(\"active\");\r\n      this.inputHandler.setDifferentialStyle(\"roman\");\r\n    }\r\n\r\n    // Update derivative d elements in buttons\r\n    const derivativeDElements = document.querySelectorAll(\".derivative-d\");\r\n    derivativeDElements.forEach((element) => {\r\n      if (style === \"roman\") {\r\n        element.classList.add(\"roman\");\r\n      } else {\r\n        element.classList.remove(\"roman\");\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleDisplayStyleToggle(): void {\r\n    // Toggle the inline style state\r\n    this.isInlineStyle = !this.isInlineStyle;\r\n\r\n    // Update button visual state\r\n    const toggleBtn = document.getElementById(\"display-style-toggle\");\r\n    if (toggleBtn) {\r\n      if (this.isInlineStyle) {\r\n        toggleBtn.classList.add(\"inline-active\");\r\n      } else {\r\n        toggleBtn.classList.remove(\"inline-active\");\r\n      }\r\n    }\r\n\r\n    // Update body class for CSS styling\r\n    if (this.isInlineStyle) {\r\n      document.body.classList.add(\"inline-style-active\");\r\n    } else {\r\n      document.body.classList.remove(\"inline-style-active\");\r\n    }\r\n\r\n    // Store preference in input handler\r\n    this.inputHandler.setInlineStyle(this.isInlineStyle);\r\n\r\n    // Update existing equations in the display to reflect the new style\r\n    this.inputHandler.updateExistingEquationStyle(this.isInlineStyle);\r\n  }\r\n\r\n  private handleHexInputChange(e: Event): void {\r\n    const input = e.target as HTMLInputElement;\r\n    let color = input.value.trim();\r\n\r\n    if (!color.startsWith(\"#\") && color.length > 0) {\r\n      color = \"#\" + color;\r\n      input.value = color;\r\n    }\r\n\r\n    if (this.isValidHexColor(color) && color.length === 7) {\r\n      // Update hex color preview in real-time\r\n      this.updateHexColorPreview(color);\r\n\r\n      // Remove selection from color squares\r\n      document.querySelectorAll(\".color-square\").forEach((sq) => sq.classList.remove(\"selected\"));\r\n    }\r\n  }\r\n\r\n  private handleOutsideClick(e: Event, elements: ReturnType<MathAddinApp[\"getDOMElements\"]>): void {\r\n    if (!elements) return;\r\n\r\n    const target = e.target as HTMLElement;\r\n\r\n    // Check if click is outside font size dropdown\r\n    if (!elements.fontSizeDropdownBtn.contains(target) && !elements.fontSizeDropdown.contains(target)) {\r\n      elements.fontSizeDropdown.classList.remove(\"show\");\r\n    }\r\n\r\n    // Check if click is outside underline dropdown\r\n    if (!elements.underlineBtn.contains(target) && !elements.underlineDropdownBtn.contains(target) && !elements.underlineDropdown.contains(target)) {\r\n      elements.underlineDropdown.classList.remove(\"show\");\r\n    }\r\n\r\n    // Check if click is outside color panel\r\n    if (!elements.colorBtn.contains(target) && !elements.colorDropdownBtn.contains(target) && !elements.colorPanel.contains(target)) {\r\n      elements.colorPanel.classList.remove(\"show\");\r\n    }\r\n  }\r\n\r\n  private updateColorPreview(color: string): void {\r\n    const colorPreview = document.getElementById(\"colorPreview\") as HTMLDivElement;\r\n    colorPreview.style.backgroundColor = color;\r\n  }\r\n\r\n  private updateHexColorPreview(color: string): void {\r\n    const hexColorPreview = document.getElementById(\"hexColorPreview\") as HTMLDivElement;\r\n    if (hexColorPreview) {\r\n      hexColorPreview.style.backgroundColor = color;\r\n    }\r\n  }\r\n\r\n  private selectColor(color: string): void {\r\n    // Update current color and previews\r\n    this.currentColor = color;\r\n    this.updateColorPreview(color);\r\n    this.updateHexColorPreview(color);\r\n\r\n    // Apply color to selected text/equation\r\n    this.inputHandler.setTextColor(color);\r\n  }\r\n\r\n  private closeAllDropdowns(): void {\r\n    const fontSizeDropdown = document.getElementById(\"fontSizeDropdown\") as HTMLDivElement;\r\n    const underlineDropdown = document.getElementById(\"underlineDropdown\") as HTMLDivElement;\r\n    const colorPanel = document.getElementById(\"colorPanel\") as HTMLDivElement;\r\n\r\n    if (fontSizeDropdown) {\r\n      fontSizeDropdown.classList.remove(\"show\");\r\n    }\r\n    if (underlineDropdown) {\r\n      underlineDropdown.classList.remove(\"show\");\r\n    }\r\n    if (colorPanel) {\r\n      colorPanel.classList.remove(\"show\");\r\n    }\r\n  }\r\n\r\n  private isValidHexColor(hex: string): boolean {\r\n    return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(hex);\r\n  }\r\n\r\n  private rgbToHex(rgb: string): string {\r\n    const result = rgb.match(/\\d+/g);\r\n    if (!result || result.length < 3) return \"#000000\";\r\n\r\n    const r = parseInt(result[0]);\r\n    const g = parseInt(result[1]);\r\n    const b = parseInt(result[2]);\r\n\r\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\r\n  }\r\n\r\n  private async handleEquationLoaded(latex: string): Promise<void> {\r\n    try {\r\n      // Detect and set differential style based on LaTeX content\r\n      this.detectAndSetDifferentialStyle(latex);\r\n\r\n      // Convert LaTeX back to equation structure\r\n      const elements = this.latexConverter.parseFromLatex(latex);\r\n\r\n      // Clear current equation and load the parsed elements\r\n      this.equationBuilder.clear();\r\n      this.equationBuilder.setEquation(elements);\r\n\r\n      // Update bracket nesting depths after loading from LaTeX\r\n      this.equationBuilder.updateBracketNesting();\r\n\r\n      // Enter editing mode\r\n      this.contextManager.enterRootContext();\r\n\r\n      // Clear any stale selection state after loading equation\r\n      this.contextManager.clearSelection();\r\n\r\n      // Update the display\r\n      const equationDisplay = document.getElementById(\"equationDisplay\") as HTMLDivElement;\r\n      if (equationDisplay) {\r\n        this.displayRenderer.updateDisplay(equationDisplay, this.equationBuilder.getEquation());\r\n      }\r\n\r\n      // Focus the hidden input for editing\r\n      const hiddenInput = document.getElementById(\"hiddenInput\") as HTMLInputElement;\r\n      if (hiddenInput) {\r\n        hiddenInput.focus();\r\n      }\r\n\r\n      // Show status feedback\r\n      const statusDiv = document.getElementById(\"status\") as HTMLDivElement;\r\n      if (statusDiv) {\r\n        statusDiv.textContent = \"Equation loaded for editing!\";\r\n        setTimeout(() => {\r\n          statusDiv.textContent = \"\";\r\n        }, 3000);\r\n      }\r\n    } catch (error) {\r\n      const statusDiv = document.getElementById(\"status\") as HTMLDivElement;\r\n      if (statusDiv) {\r\n        statusDiv.textContent = \"Error: Could not load equation for editing.\";\r\n        setTimeout(() => {\r\n          statusDiv.textContent = \"\";\r\n        }, 3000);\r\n      }\r\n    }\r\n  }\r\n\r\n  private async handleInsertEquation(statusDiv: HTMLDivElement): Promise<void> {\r\n    const insertButton = document.getElementById(\"insert-equation-button\") as HTMLButtonElement;\r\n    const fontSize = this.displayRenderer.getGlobalFontSize();\r\n\r\n    if (this.equationBuilder.isEmpty()) {\r\n      statusDiv.textContent = \"Please create an equation first.\";\r\n      return;\r\n    }\r\n\r\n    let latex: string | undefined;\r\n    try {\r\n      // Update UI state\r\n      insertButton.disabled = true;\r\n      insertButton.querySelector(\".ms-Button-label\")!.textContent = \"Inserting...\";\r\n      statusDiv.textContent = \"Converting to LaTeX...\";\r\n\r\n      // Convert equation to LaTeX\r\n      latex = this.latexConverter.convertToLatex(this.equationBuilder.getEquation());\r\n      if (!latex) {\r\n        throw new Error(\"Equation is empty or invalid.\");\r\n      }\r\n\r\n      // Render LaTeX using MathJax\r\n      statusDiv.textContent = \"Rendering equation...\";\r\n      const svgElement = await this.mathJaxService.renderLatexToSvg(latex);\r\n\r\n      // Extract positioning information\r\n      const positionInfo = this.mathJaxService.extractSvgPositionInfo(svgElement);\r\n\r\n      // Prepare SVG for Office\r\n      statusDiv.textContent = \"Preparing for Word...\";\r\n      const { svgString, width, height, baselineOffsetPt } = this.svgProcessor.prepareSvgForOffice(\r\n        svgElement,\r\n        fontSize,\r\n        positionInfo\r\n      );\r\n\r\n      // Insert into Word\r\n      statusDiv.textContent = \"Inserting into Word...\";\r\n      await this.officeService.insertEquationToWord(svgString, width, height, baselineOffsetPt, latex);\r\n\r\n\r\n      statusDiv.textContent = \"Equation inserted.\";\r\n\r\n      // Clear equation after successful insertion\r\n      this.handleClearEquation();\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : \"An unknown error occurred.\";\r\n      statusDiv.textContent = `Error: ${errorMessage}`;\r\n    } finally {\r\n      // Reset button state\r\n      insertButton.disabled = false;\r\n      insertButton.querySelector(\".ms-Button-label\")!.textContent = \"Insert Equation\";\r\n\r\n      // Clear status message after delay\r\n      setTimeout(() => {\r\n        if (!statusDiv.textContent?.includes(\"Error\")) {\r\n          statusDiv.textContent = \"\";\r\n        }\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  private handleMatrixButtonClick(matrixType: \"parentheses\" | \"brackets\" | \"braces\" | \"bars\" | \"double-bars\" | \"none\"): void {\r\n    // Store the matrix type for later use\r\n    this.currentMatrixType = matrixType;\r\n\r\n    // Show the matrix size selection panel\r\n    this.showMatrixSizePanel();\r\n  }\r\n\r\n  private handleStackButtonClick(stackType: string): void {\r\n    switch (stackType) {\r\n      case \"2x1\":\r\n        this.inputHandler.insertStack(2, 1);\r\n        break;\r\n      case \"3x1\":\r\n        this.inputHandler.insertStack(3, 1);\r\n        break;\r\n      case \"2x2\":\r\n        this.inputHandler.insertStack(2, 2);\r\n        break;\r\n      case \"3x2\":\r\n        this.inputHandler.insertStack(3, 2);\r\n        break;\r\n      case \"nx1\":\r\n        this.promptForStackSize(1);\r\n        break;\r\n      case \"nx2\":\r\n        this.promptForStackSize(2);\r\n        break;\r\n    }\r\n  }\r\n\r\n  private handleCasesButtonClick(casesType: string): void {\r\n    switch (casesType) {\r\n      case \"2x1\":\r\n        this.inputHandler.insertCases(2, 1);\r\n        break;\r\n      case \"3x1\":\r\n        this.inputHandler.insertCases(3, 1);\r\n        break;\r\n      case \"2x2\":\r\n        this.inputHandler.insertCases(2, 2);\r\n        break;\r\n      case \"3x2\":\r\n        this.inputHandler.insertCases(3, 2);\r\n        break;\r\n      case \"nx1\":\r\n        this.promptForCasesSize(1);\r\n        break;\r\n      case \"nx2\":\r\n        this.promptForCasesSize(2);\r\n        break;\r\n    }\r\n  }\r\n\r\n  private promptForStackSize(cols: number): void {\r\n    this.showStackCasesSizePanel(\"stack\", cols);\r\n  }\r\n\r\n  private promptForCasesSize(cols: number): void {\r\n    this.showStackCasesSizePanel(\"cases\", cols);\r\n  }\r\n\r\n  private currentMatrixType: \"parentheses\" | \"brackets\" | \"braces\" | \"bars\" | \"double-bars\" | \"none\" = \"parentheses\";\r\n  private pendingStackCasesType: 'stack' | 'cases' | null = null;\r\n  private pendingStackCasesCols: number = 1;\r\n\r\n  private showStackCasesSizePanel(type: \"stack\" | \"cases\", cols: number): void {\r\n    const panel = document.getElementById(\"stackCasesSizePanel\") as HTMLDivElement;\r\n    const header = document.getElementById(\"stackCasesHeader\") as HTMLDivElement;\r\n    const rowsInput = document.getElementById(\"stackCasesRows\") as HTMLInputElement;\r\n\r\n    if (!panel || !header || !rowsInput) return;\r\n\r\n    // Store the type and columns for later use\r\n    this.pendingStackCasesType = type;\r\n    this.pendingStackCasesCols = cols;\r\n\r\n    // Update header text\r\n    const typeName = type === \"stack\" ? \"Stack\" : \"Cases\";\r\n    header.textContent = `Select ${typeName} Size (${cols} column${cols > 1 ? \"s\" : \"\"})`;\r\n\r\n    // Reset input value\r\n    rowsInput.value = \"3\";\r\n\r\n    // Set up event listeners if not already set\r\n    this.setupStackCasesPanelEventListeners();\r\n\r\n    // Show the panel\r\n    panel.style.display = \"block\";\r\n\r\n    // Focus the input\r\n    rowsInput.focus();\r\n    rowsInput.select();\r\n  }\r\n\r\n  private setupStackCasesPanelEventListeners(): void {\r\n    const createBtn = document.getElementById(\"createStackCasesBtn\");\r\n    const cancelBtn = document.getElementById(\"cancelStackCasesBtn\");\r\n    const panel = document.getElementById(\"stackCasesSizePanel\") as HTMLDivElement;\r\n\r\n    // Remove existing listeners to avoid duplicates\r\n    if (createBtn) {\r\n      const newCreateBtn = createBtn.cloneNode(true) as HTMLButtonElement;\r\n      createBtn.parentNode?.replaceChild(newCreateBtn, createBtn);\r\n\r\n      newCreateBtn.addEventListener(\"click\", () => {\r\n        // Get fresh reference to the input element\r\n        const currentRowsInput = document.getElementById(\"stackCasesRows\") as HTMLInputElement;\r\n        const rows = parseInt(currentRowsInput.value);\r\n        if (rows >= 3 && rows <= 10) {\r\n          if (this.pendingStackCasesType === \"stack\") {\r\n            this.inputHandler.insertStack(rows, this.pendingStackCasesCols);\r\n          } else {\r\n            this.inputHandler.insertCases(rows, this.pendingStackCasesCols);\r\n          }\r\n          panel.style.display = \"none\";\r\n        }\r\n      });\r\n    }\r\n\r\n    if (cancelBtn) {\r\n      const newCancelBtn = cancelBtn.cloneNode(true) as HTMLButtonElement;\r\n      cancelBtn.parentNode?.replaceChild(newCancelBtn, cancelBtn);\r\n\r\n      newCancelBtn.addEventListener(\"click\", () => {\r\n        panel.style.display = \"none\";\r\n      });\r\n    }\r\n\r\n    // Add Enter key support\r\n    const rowsInput = document.getElementById(\"stackCasesRows\") as HTMLInputElement;\r\n    if (rowsInput) {\r\n      const newRowsInput = rowsInput.cloneNode(true) as HTMLInputElement;\r\n      rowsInput.parentNode?.replaceChild(newRowsInput, rowsInput);\r\n\r\n      newRowsInput.addEventListener(\"keypress\", (e) => {\r\n        if (e.key === \"Enter\") {\r\n          const rows = parseInt(newRowsInput.value);\r\n          if (rows >= 3 && rows <= 20) {\r\n            if (this.pendingStackCasesType === \"stack\") {\r\n              this.inputHandler.insertStack(rows, this.pendingStackCasesCols);\r\n            } else {\r\n              this.inputHandler.insertCases(rows, this.pendingStackCasesCols);\r\n            }\r\n            panel.style.display = \"none\";\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private showMatrixSizePanel(): void {\r\n    const panel = document.getElementById(\"matrixSizePanel\") as HTMLDivElement;\r\n    if (!panel) return;\r\n\r\n    // Initialize the grid selector\r\n    this.initializeMatrixGridSelector();\r\n\r\n    // Set up event listeners for the panel\r\n    this.setupMatrixPanelEventListeners();\r\n\r\n    // Show the panel\r\n    panel.style.display = \"block\";\r\n  }\r\n\r\n  private initializeMatrixGridSelector(): void {\r\n    const gridSelector = document.getElementById(\"matrixGridSelector\") as HTMLDivElement;\r\n    if (!gridSelector) return;\r\n\r\n    // Clear existing grid\r\n    gridSelector.innerHTML = \"\";\r\n\r\n    // Create 6x6 grid\r\n    for (let i = 0; i < 36; i++) {\r\n      const cell = document.createElement(\"div\");\r\n      cell.className = \"matrix-grid-cell\";\r\n      cell.dataset.row = Math.floor(i / 6).toString();\r\n      cell.dataset.col = (i % 6).toString();\r\n      gridSelector.appendChild(cell);\r\n    }\r\n\r\n    // Add hover effects\r\n    const cells = gridSelector.querySelectorAll(\".matrix-grid-cell\");\r\n    cells.forEach((cell, index) => {\r\n      cell.addEventListener(\"mouseenter\", () => this.highlightMatrixGrid(index));\r\n      cell.addEventListener(\"click\", () => this.selectMatrixSize(index));\r\n    });\r\n\r\n    gridSelector.addEventListener(\"mouseleave\", () => {\r\n      cells.forEach((cell) => cell.classList.remove(\"highlighted\"));\r\n    });\r\n  }\r\n\r\n  private highlightMatrixGrid(index: number): void {\r\n    const gridSelector = document.getElementById(\"matrixGridSelector\") as HTMLDivElement;\r\n    const cells = gridSelector.querySelectorAll(\".matrix-grid-cell\");\r\n\r\n    const row = Math.floor(index / 6);\r\n    const col = index % 6;\r\n\r\n    cells.forEach((cell, i) => {\r\n      const cellRow = Math.floor(i / 6);\r\n      const cellCol = i % 6;\r\n\r\n      if (cellRow <= row && cellCol <= col) {\r\n        cell.classList.add(\"highlighted\");\r\n      } else {\r\n        cell.classList.remove(\"highlighted\");\r\n      }\r\n    });\r\n\r\n    // Update the input fields\r\n    const rowsInput = document.getElementById(\"matrixRows\") as HTMLInputElement;\r\n    const colsInput = document.getElementById(\"matrixCols\") as HTMLInputElement;\r\n    if (rowsInput && colsInput) {\r\n      rowsInput.value = (row + 1).toString();\r\n      colsInput.value = (col + 1).toString();\r\n    }\r\n  }\r\n\r\n  private selectMatrixSize(index: number): void {\r\n    const row = Math.floor(index / 6) + 1;\r\n    const col = (index % 6) + 1;\r\n\r\n    this.createMatrix(row, col);\r\n  }\r\n\r\n  private setupMatrixPanelEventListeners(): void {\r\n    const createBtn = document.getElementById(\"createMatrixBtn\") as HTMLButtonElement;\r\n    const cancelBtn = document.getElementById(\"cancelMatrixBtn\") as HTMLButtonElement;\r\n\r\n    if (createBtn) {\r\n      createBtn.onclick = () => {\r\n        const rowsInput = document.getElementById(\"matrixRows\") as HTMLInputElement;\r\n        const colsInput = document.getElementById(\"matrixCols\") as HTMLInputElement;\r\n\r\n        const rows = parseInt(rowsInput?.value || \"2\");\r\n        const cols = parseInt(colsInput?.value || \"2\");\r\n\r\n        if (rows >= 1 && rows <= 20 && cols >= 1 && cols <= 20) {\r\n          this.createMatrix(rows, cols);\r\n        } else {\r\n          alert(\"Matrix size must be between 1x1 and 20x20\");\r\n        }\r\n      };\r\n    }\r\n\r\n    if (cancelBtn) {\r\n      cancelBtn.onclick = () => this.hideMatrixSizePanel();\r\n    }\r\n  }\r\n\r\n  private createMatrix(rows: number, cols: number): void {\r\n    // Create the matrix using InputHandler\r\n    this.inputHandler.createMatrix(rows, cols, this.currentMatrixType);\r\n\r\n    // Hide the panel\r\n    this.hideMatrixSizePanel();\r\n  }\r\n\r\n  private hideMatrixSizePanel(): void {\r\n    const panel = document.getElementById(\"matrixSizePanel\") as HTMLDivElement;\r\n    if (panel) {\r\n      panel.style.display = \"none\";\r\n    }\r\n  }\r\n}\r\n\r\n// Global app instance\r\nlet app: MathAddinApp;\r\n\r\nOffice.onReady((info) => {\r\n  if (info.host === Office.HostType.Word) {\r\n    app = new MathAddinApp();\r\n\r\n    app.initialize()\r\n      .then(() => {\r\n      })\r\n      .catch((error) => {\r\n        const statusDiv = document.getElementById(\"status\") as HTMLDivElement;\r\n        if (statusDiv) {\r\n          statusDiv.textContent = \"Error: Could not initialize the add-in.\";\r\n        }\r\n      });\r\n  }\r\n});\r\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Equation Editor</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/beta/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> <\" + \"script>window.MathJax={loader:{load:[\\\"[tex]/boldsymbol\\\",\\\"[tex]/color\\\",\\\"[tex]/physics\\\"]},tex:{packages:{\\\"[+]\\\":[\\\"base\\\",\\\"boldsymbol\\\",\\\"color\\\",\\\"ams\\\",\\\"physics\\\"]},physics:{italicdiff:!1,arrowdel:!1},macros:{derivfrac:[\\\"\\\\\\\\frac{#1}{#2}\\\",2],derivdfrac:[\\\"\\\\\\\\dfrac{#1}{#2}\\\",2],derivlfrac:[\\\"\\\\\\\\frac{#1}{#2} #3\\\",3],derivldfrac:[\\\"\\\\\\\\dfrac{#1}{#2} #3\\\",3],grande:[\\\"#1\\\",1],inti:[\\\"\\\\\\\\int {#1} \\\\\\\\, d{#2}\\\",2],intd:[\\\"\\\\\\\\int {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",2],iinti:[\\\"\\\\\\\\iint {#1} \\\\\\\\, d{#2}\\\",2],iintd:[\\\"\\\\\\\\iint {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",2],iintisub:[\\\"\\\\\\\\iint_{#3} {#1} \\\\\\\\, d{#2}\\\",3],iintdsub:[\\\"\\\\\\\\iint_{#3} {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",3],iintilower:[\\\"\\\\\\\\iint\\\\\\\\limits_{#3} {#1} \\\\\\\\, d{#2}\\\",3],iintdlower:[\\\"\\\\\\\\iint\\\\\\\\limits_{#3} {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",3],iiinti:[\\\"\\\\\\\\iiint {#1} \\\\\\\\, d{#2}\\\",2],iiintd:[\\\"\\\\\\\\iiint {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",2],iiintisub:[\\\"\\\\\\\\iiint_{#3} {#1} \\\\\\\\, d{#2}\\\",3],iiintdsub:[\\\"\\\\\\\\iiint_{#3} {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",3],iiintilower:[\\\"\\\\\\\\iiint\\\\\\\\limits_{#3} {#1} \\\\\\\\, d{#2}\\\",3],iiintdlower:[\\\"\\\\\\\\iiint\\\\\\\\limits_{#3} {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",3],ointi:[\\\"\\\\\\\\oint {#1} \\\\\\\\, d{#2}\\\",2],ointd:[\\\"\\\\\\\\oint {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",2],ointisub:[\\\"\\\\\\\\oint_{#3} {#1} \\\\\\\\, d{#2}\\\",3],ointdsub:[\\\"\\\\\\\\oint_{#3} {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",3],intinolim:[\\\"\\\\\\\\int_{#3}^{#4} {#1} \\\\\\\\, d{#2}\\\",4],intdnolim:[\\\"\\\\\\\\int_{#3}^{#4} {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",4],iintinolim:[\\\"\\\\\\\\iint_{#3}^{#4} {#1} \\\\\\\\, d{#2}\\\",4],iintdnolim:[\\\"\\\\\\\\iint_{#3}^{#4} {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",4],iiintinolim:[\\\"\\\\\\\\iiint_{#3}^{#4} {#1} \\\\\\\\, d{#2}\\\",4],iiintdnolim:[\\\"\\\\\\\\iiint_{#3}^{#4} {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",4],ointinolim:[\\\"\\\\\\\\oint_{#3}^{#4} {#1} \\\\\\\\, d{#2}\\\",4],ointdnolim:[\\\"\\\\\\\\oint_{#3}^{#4} {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",4],intilim:[\\\"\\\\\\\\int\\\\\\\\limits_{#3}^{#4} {#1} \\\\\\\\, d{#2}\\\",4],intdlim:[\\\"\\\\\\\\int\\\\\\\\limits_{#3}^{#4} {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",4],iintilim:[\\\"\\\\\\\\iint\\\\\\\\limits_{#3}^{#4} {#1} \\\\\\\\, d{#2}\\\",4],iintdlim:[\\\"\\\\\\\\iint\\\\\\\\limits_{#3}^{#4} {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",4],iiintilim:[\\\"\\\\\\\\iiint\\\\\\\\limits_{#3}^{#4} {#1} \\\\\\\\, d{#2}\\\",4],iiintdlim:[\\\"\\\\\\\\iiint\\\\\\\\limits_{#3}^{#4} {#1} \\\\\\\\, \\\\\\\\dd{#2}\\\",4]},inlineMath:[[\\\"$\\\",\\\"$\\\"],[\\\"\\\\\\\\(\\\",\\\"\\\\\\\\)\\\"]],displayMath:[[\\\"$$\\\",\\\"$$\\\"],[\\\"\\\\\\\\[\\\",\\\"\\\\\\\\]\\\"]]},svg:{fontCache:\\\"local\\\",scale:1,minScale:.5,displayIndent:\\\"0\\\",mtextInheritFont:!0,unknownFamily:\\\"serif\\\"},startup:{ready:()=>{MathJax.startup.defaultReady(),MathJax.startup.document.updateDocument()}}}<\" + \"/script> <\" + \"script id=\\\"MathJax-script\\\" async src=\\\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js\\\"><\" + \"/script> </head> <body class=\\\"ms-font-m\\\"> <div id=\\\"app-container\\\"> <h1 class=\\\"ms-fontSize-xl ms-fontWeight-bold\\\">Equation Editor</h1> <p class=\\\"ms-fontSize-m ms-fontWeight-regular\\\">Build your equation using the visual editor below.</p> <div class=\\\"equation-display equation-container\\\" id=\\\"equationDisplay\\\" data-context-path=\\\"root\\\"> <span class=\\\"empty-state\\\">Click here and start typing your equation</span> </div> <input type=\\\"text\\\" class=\\\"equation-input\\\" id=\\\"hiddenInput\\\"/> <div class=\\\"font-controls\\\"> <div class=\\\"control-group\\\"> <div class=\\\"font-size-container\\\"> <div class=\\\"font-size-combobox\\\"> <input type=\\\"text\\\" id=\\\"fontSizeInput\\\" class=\\\"font-size-input\\\" value=\\\"12\\\"/> <button class=\\\"font-size-dropdown-btn\\\" id=\\\"fontSizeDropdownBtn\\\" type=\\\"button\\\"> <span class=\\\"dropdown-arrow\\\">▼</span> </button> <div class=\\\"font-size-dropdown\\\" id=\\\"fontSizeDropdown\\\"> <div class=\\\"font-size-option\\\" data-size=\\\"8\\\">8</div> <div class=\\\"font-size-option\\\" data-size=\\\"9\\\">9</div> <div class=\\\"font-size-option\\\" data-size=\\\"10\\\">10</div> <div class=\\\"font-size-option\\\" data-size=\\\"11\\\">11</div> <div class=\\\"font-size-option\\\" data-size=\\\"12\\\">12</div> <div class=\\\"font-size-option\\\" data-size=\\\"14\\\">14</div> <div class=\\\"font-size-option\\\" data-size=\\\"16\\\">16</div> <div class=\\\"font-size-option\\\" data-size=\\\"18\\\">18</div> <div class=\\\"font-size-option\\\" data-size=\\\"20\\\">20</div> <div class=\\\"font-size-option\\\" data-size=\\\"24\\\">24</div> <div class=\\\"font-size-option\\\" data-size=\\\"28\\\">28</div> <div class=\\\"font-size-option\\\" data-size=\\\"32\\\">32</div> <div class=\\\"font-size-option\\\" data-size=\\\"36\\\">36</div> <div class=\\\"font-size-option\\\" data-size=\\\"48\\\">48</div> <div class=\\\"font-size-option\\\" data-size=\\\"72\\\">72</div> </div> </div> </div> </div> <div class=\\\"format-buttons\\\"> <button class=\\\"format-btn bold-btn\\\" id=\\\"boldBtn\\\" title=\\\"Bold (Ctrl+B)\\\"> <strong>B</strong> </button> <button class=\\\"format-btn italic-btn\\\" id=\\\"italicBtn\\\" title=\\\"Italic (Ctrl+I)\\\"> <em>I</em> </button> <div class=\\\"underline-dropdown-container\\\"> <button class=\\\"format-btn underline-btn\\\" id=\\\"underlineBtn\\\" title=\\\"Underline\\\"> <span style=\\\"text-decoration:underline\\\">U</span> </button> <button class=\\\"format-btn underline-dropdown-btn\\\" id=\\\"underlineDropdownBtn\\\" title=\\\"More Underline Styles\\\"> <span class=\\\"dropdown-arrow\\\">▼</span> </button> <div class=\\\"underline-dropdown\\\" id=\\\"underlineDropdown\\\"> <div class=\\\"underline-option\\\" data-underline=\\\"single\\\"> <span class=\\\"underline-visual single-line\\\">_____________</span> </div> <div class=\\\"underline-option\\\" data-underline=\\\"double\\\"> <span class=\\\"underline-visual double-line\\\">_____________</span> </div> <div class=\\\"underline-option\\\" data-underline=\\\"none\\\">None</div> </div> </div> <button class=\\\"format-btn cancel-btn\\\" id=\\\"cancelBtn\\\" title=\\\"Cancel\\\"> <span class=\\\"cancel-icon\\\">S</span> </button> <div class=\\\"color-dropdown-container\\\"> <button class=\\\"format-btn color-btn\\\" id=\\\"colorBtn\\\" title=\\\"Text Color\\\"> <span class=\\\"color-icon\\\">A</span> <div class=\\\"color-preview\\\" id=\\\"colorPreview\\\"></div> </button> <button class=\\\"format-btn color-dropdown-btn\\\" id=\\\"colorDropdownBtn\\\" title=\\\"More Colors\\\"> <span class=\\\"dropdown-arrow\\\">▼</span> </button> <div class=\\\"color-panel\\\" id=\\\"colorPanel\\\"> <div class=\\\"color-grid\\\"> <div class=\\\"color-row\\\"> <div class=\\\"color-square\\\" data-color=\\\"#000000\\\" style=\\\"background-color:#000\\\" title=\\\"Black\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#434343\\\" style=\\\"background-color:#434343\\\" title=\\\"Dark Gray 4\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#666666\\\" style=\\\"background-color:#666\\\" title=\\\"Dark Gray 3\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#999999\\\" style=\\\"background-color:#999\\\" title=\\\"Dark Gray 2\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#B7B7B7\\\" style=\\\"background-color:#b7b7b7\\\" title=\\\"Dark Gray 1\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#CCCCCC\\\" style=\\\"background-color:#ccc\\\" title=\\\"Gray\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#D9D9D9\\\" style=\\\"background-color:#d9d9d9\\\" title=\\\"Light Gray 1\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#EFEFEF\\\" style=\\\"background-color:#efefef\\\" title=\\\"Light Gray 2\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#F3F3F3\\\" style=\\\"background-color:#f3f3f3\\\" title=\\\"Light Gray 3\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#FFFFFF\\\" style=\\\"background-color:#fff;border:1px solid #ccc\\\" title=\\\"White\\\"></div> </div> <div class=\\\"color-row\\\"> <div class=\\\"color-square\\\" data-color=\\\"#980000\\\" style=\\\"background-color:#980000\\\" title=\\\"Dark Red\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#FF0000\\\" style=\\\"background-color:red\\\" title=\\\"Red\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#FF9900\\\" style=\\\"background-color:#f90\\\" title=\\\"Orange\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#FFFF00\\\" style=\\\"background-color:#ff0\\\" title=\\\"Yellow\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#00FF00\\\" style=\\\"background-color:#0f0\\\" title=\\\"Green\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#00FFFF\\\" style=\\\"background-color:#0ff\\\" title=\\\"Cyan\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#4A86E8\\\" style=\\\"background-color:#4a86e8\\\" title=\\\"Light Blue\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#0000FF\\\" style=\\\"background-color:#00f\\\" title=\\\"Blue\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#9900FF\\\" style=\\\"background-color:#90f\\\" title=\\\"Purple\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#FF00FF\\\" style=\\\"background-color:#f0f\\\" title=\\\"Magenta\\\"></div> </div> <div class=\\\"color-row\\\"> <div class=\\\"color-square\\\" data-color=\\\"#85200C\\\" style=\\\"background-color:#85200c\\\" title=\\\"Dark Red 2\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#990000\\\" style=\\\"background-color:#900\\\" title=\\\"Dark Red 3\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#B45F06\\\" style=\\\"background-color:#b45f06\\\" title=\\\"Dark Orange\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#BF9000\\\" style=\\\"background-color:#bf9000\\\" title=\\\"Dark Yellow\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#38761D\\\" style=\\\"background-color:#38761d\\\" title=\\\"Dark Green\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#134F5C\\\" style=\\\"background-color:#134f5c\\\" title=\\\"Dark Cyan\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#1155CC\\\" style=\\\"background-color:#15c\\\" title=\\\"Dark Blue 1\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#0B5394\\\" style=\\\"background-color:#0b5394\\\" title=\\\"Dark Blue 2\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#351C75\\\" style=\\\"background-color:#351c75\\\" title=\\\"Dark Purple\\\"></div> <div class=\\\"color-square\\\" data-color=\\\"#741B47\\\" style=\\\"background-color:#741b47\\\" title=\\\"Dark Magenta\\\"></div> </div> </div> <div class=\\\"hex-input-section\\\"> <div class=\\\"hex-input-row\\\"> <label for=\\\"hexInput\\\">Hex code:</label> <div class=\\\"hex-input-container\\\"> <input type=\\\"text\\\" id=\\\"hexInput\\\" class=\\\"hex-input\\\" value=\\\"#000000\\\" maxlength=\\\"7\\\" placeholder=\\\"#000000\\\"/> <div class=\\\"hex-color-preview\\\" id=\\\"hexColorPreview\\\"></div> </div> </div> <div class=\\\"hex-actions\\\"> <button class=\\\"hex-btn hex-ok-btn\\\" id=\\\"colorOkBtn\\\">OK</button> <button class=\\\"hex-btn hex-cancel-btn\\\" id=\\\"colorCancelBtn\\\">Cancel</button> </div> </div> </div> </div> <div class=\\\"format-separator\\\"></div> <button class=\\\"format-btn text-mode-btn\\\" id=\\\"textModeBtn\\\" title=\\\"Text Mode\\\"> <span class=\\\"text-mode-icon\\\">Tt</span> </button> </div> </div> <div class=\\\"tab-panel\\\"> <div class=\\\"tab-nav-container\\\"> <button class=\\\"tab-scroll-btn tab-scroll-left\\\" id=\\\"tabScrollLeft\\\"> <svg width=\\\"8\\\" height=\\\"12\\\" viewBox=\\\"0 0 8 8\\\"> <path d=\\\"M8 2 L4 6 L8 10\\\" stroke=\\\"currentColor\\\" fill=\\\"none\\\" stroke-width=\\\"1.5\\\"/> </svg> </button> <div class=\\\"tab-nav\\\" id=\\\"tabNav\\\"> <button class=\\\"tab-btn active\\\" data-tab=\\\"structures\\\">Structures</button> <button class=\\\"tab-btn\\\" data-tab=\\\"brackets\\\">Brackets</button> <button class=\\\"tab-btn\\\" data-tab=\\\"operators\\\">Operators</button> <button class=\\\"tab-btn\\\" data-tab=\\\"large-operators\\\">Large Operators</button> <button class=\\\"tab-btn\\\" data-tab=\\\"calculus\\\">Calculus</button> <button class=\\\"tab-btn\\\" data-tab=\\\"functions\\\">Functions</button> <button class=\\\"tab-btn\\\" data-tab=\\\"greek-letters\\\">Greek Letters</button> <button class=\\\"tab-btn\\\" data-tab=\\\"symbols\\\">Symbols</button> <button class=\\\"tab-btn\\\" data-tab=\\\"arrows\\\">Arrows</button> <button class=\\\"tab-btn\\\" data-tab=\\\"accents\\\">Accents</button> <button class=\\\"tab-btn\\\" data-tab=\\\"matrices\\\">Matrices</button> </div> <button class=\\\"tab-scroll-btn tab-scroll-right\\\" id=\\\"tabScrollRight\\\"> <svg width=\\\"12\\\" height=\\\"12\\\" viewBox=\\\"0 0 12 12\\\"> <path d=\\\"M4 2 L8 6 L4 10\\\" stroke=\\\"currentColor\\\" fill=\\\"none\\\" stroke-width=\\\"1.5\\\"/> </svg> </button> </div> <div class=\\\"tab-content\\\"> <div id=\\\"structures\\\" class=\\\"tab-pane active\\\"> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn display-fraction-btn\\\" title=\\\"Fraction\\\"> <math displaystyle=\\\"true\\\"> <mfrac> <mi>□</mi> <mi>□</mi> </mfrac> </math> </button> <button class=\\\"builder-btn fraction-btn\\\" title=\\\"Fraction (Small)\\\"> <math> <mfrac> <mi>□</mi> <mi>□</mi> </mfrac> </math> </button> <button class=\\\"builder-btn bevelled-fraction-btn\\\" title=\\\"Bevelled Fraction\\\"> <math> <mi>□</mi> <mo>/</mo> <mi>□</mi> </math> </button> <button class=\\\"builder-btn sqrt-btn\\\" title=\\\"Square Root\\\"> <math> <msqrt> <mi>□</mi> </msqrt> </math> </button> <button class=\\\"builder-btn nthroot-btn\\\" title=\\\"Root\\\"> <math> <mroot> <mi>□</mi> <mi>□</mi> </mroot> </math> </button> <button class=\\\"builder-btn sup-btn\\\" title=\\\"Superscript\\\"> <math> <msup> <mi>□</mi> <mi>□</mi> </msup> </math> </button> <button class=\\\"builder-btn sub-btn\\\" title=\\\"Subscript\\\"> <math> <msub> <mi>□</mi> <mi>□</mi> </msub> </math> </button> <button class=\\\"builder-btn sup-sub-btn\\\" title=\\\"Superscript-Subscript\\\"> <math> <msubsup> <mi>□</mi> <mi>□</mi> <mi>□</mi> </msubsup> </math> </button> </div> <hr class=\\\"horizontal-separator\\\"> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn stack-btn\\\" data-stack=\\\"2x1\\\" title=\\\"Stack 2×1\\\"> <math><mtable><mtr><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mi>□</mi></mtd></mtr></mtable></math> </button> <button class=\\\"builder-btn stack-btn\\\" data-stack=\\\"3x1\\\" title=\\\"Stack 3×1\\\"> <math><mtable><mtr><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mi>□</mi></mtd></mtr></mtable></math> </button> <button class=\\\"builder-btn stack-btn\\\" data-stack=\\\"nx1\\\" title=\\\"Stack n×1\\\"> <math><mtable><mtr><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mo>⋮</mo></mtd></mtr><mtr><mtd><mi>□</mi></mtd></mtr></mtable></math> </button> <button class=\\\"builder-btn cases-btn\\\" data-cases=\\\"2x1\\\" title=\\\"Cases 2×1\\\"> <math><mrow><mo stretchy=\\\"true\\\">{</mo><mtable><mtr><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mi>□</mi></mtd></mtr></mtable></mrow></math> </button> <button class=\\\"builder-btn cases-btn\\\" data-cases=\\\"3x1\\\" title=\\\"Cases 3×1\\\"> <math><mrow><mo stretchy=\\\"true\\\">{</mo><mtable><mtr><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mi>□</mi></mtd></mtr></mtable></mrow></math> </button> <button class=\\\"builder-btn cases-btn\\\" data-cases=\\\"nx1\\\" title=\\\"Cases n×1\\\"> <math><mrow><mo stretchy=\\\"true\\\">{</mo><mtable><mtr><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mo>⋮</mo></mtd></mtr><mtr><mtd><mi>□</mi></mtd></mtr></mtable></mrow></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn stack-btn\\\" data-stack=\\\"2x2\\\" title=\\\"Stack 2×2\\\"> <math><mtable><mtr><mtd><mi>□</mi></mtd><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mi>□</mi></mtd><mtd><mi>□</mi></mtd></mtr></mtable></math> </button> <button class=\\\"builder-btn stack-btn\\\" data-stack=\\\"3x2\\\" title=\\\"Stack 3×2\\\"> <math><mtable><mtr><mtd><mi>□</mi></mtd><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mi>□</mi></mtd><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mi>□</mi></mtd><mtd><mi>□</mi></mtd></mtr></mtable></math> </button> <button class=\\\"builder-btn stack-btn\\\" data-stack=\\\"nx2\\\" title=\\\"Stack n×2\\\"> <math><mtable><mtr><mtd><mi>□</mi></mtd><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mo>⋮</mo></mtd><mtd><mo>⋮</mo></mtd></mtr><mtr><mtd><mi>□</mi></mtd><mtd><mi>□</mi></mtd></mtr></mtable></math> </button> <button class=\\\"builder-btn cases-btn\\\" data-cases=\\\"2x2\\\" title=\\\"Cases 2×2\\\"> <math><mrow><mo stretchy=\\\"true\\\">{</mo><mtable><mtr><mtd><mi>□</mi></mtd><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mi>□</mi></mtd><mtd><mi>□</mi></mtd></mtr></mtable></mrow></math> </button> <button class=\\\"builder-btn cases-btn\\\" data-cases=\\\"3x2\\\" title=\\\"Cases 3×2\\\"> <math><mrow><mo stretchy=\\\"true\\\">{</mo><mtable><mtr><mtd><mi>□</mi></mtd><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mi>□</mi></mtd><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mi>□</mi></mtd><mtd><mi>□</mi></mtd></mtr></mtable></mrow></math> </button> <button class=\\\"builder-btn cases-btn\\\" data-cases=\\\"nx2\\\" title=\\\"Cases n×2\\\"> <math><mrow><mo stretchy=\\\"true\\\">{</mo><mtable><mtr><mtd><mi>□</mi></mtd><mtd><mi>□</mi></mtd></mtr><mtr><mtd><mo>⋮</mo></mtd><mtd><mo>⋮</mo></mtd></mtr><mtr><mtd><mi>□</mi></mtd><mtd><mi>□</mi></mtd></mtr></mtable></mrow></math> </button> </div> </div> <div id=\\\"brackets\\\" class=\\\"tab-pane\\\"> <div class=\\\"builder-grid\\\"> <button class=\\\"builder-btn bracket-preset-btn\\\" data-bracket=\\\"()\\\" title=\\\"Parentheses\\\">(□)</button> <button class=\\\"builder-btn bracket-preset-btn\\\" data-bracket=\\\"[]\\\" title=\\\"Square Brackets\\\">[□]</button> <button class=\\\"builder-btn bracket-preset-btn\\\" data-bracket=\\\"{}\\\" title=\\\"Curly Brackets\\\">{□}</button> <button class=\\\"builder-btn bracket-preset-btn\\\" data-bracket=\\\"⌊⌋\\\" title=\\\"Floor Brackets\\\">⌊□⌋</button> <button class=\\\"builder-btn bracket-preset-btn\\\" data-bracket=\\\"⌈⌉\\\" title=\\\"Ceiling Brackets\\\">⌈□⌉</button> <button class=\\\"builder-btn bracket-preset-btn\\\" data-bracket=\\\"||\\\" title=\\\"Absolute Value\\\">|□|</button> <button class=\\\"builder-btn bracket-preset-btn\\\" data-bracket=\\\"‖‖\\\" title=\\\"Norm\\\">‖□‖</button> <button class=\\\"builder-btn bracket-preset-btn\\\" data-bracket=\\\"⟨⟩\\\" title=\\\"Angle Brackets\\\">⟨□⟩</button> </div> <hr class=\\\"bracket-separator\\\"> <div class=\\\"bracket-builder\\\"> <div class=\\\"bracket-left-section\\\"> <div class=\\\"bracket-component\\\"> <select id=\\\"leftBracketSelect\\\" class=\\\"bracket-select\\\"> <option value=\\\"(\\\" selected=\\\"selected\\\">(</option> <option value=\\\"[\\\">[</option> <option value=\\\"{\\\">{</option> <option value=\\\"⌊\\\">⌊</option> <option value=\\\"⌈\\\">⌈</option> <option value=\\\"|\\\">|</option> <option value=\\\"‖\\\">‖</option> <option value=\\\"⟨\\\">⟨</option> </select> </div> <div class=\\\"bracket-component bracket-input\\\"> <div class=\\\"bracket-input-display\\\">□</div> </div> <div class=\\\"bracket-component\\\"> <select id=\\\"rightBracketSelect\\\" class=\\\"bracket-select\\\"> <option value=\\\")\\\" selected=\\\"selected\\\">)</option> <option value=\\\"]\\\">]</option> <option value=\\\"}\\\">}</option> <option value=\\\"⌋\\\">⌋</option> <option value=\\\"⌉\\\">⌉</option> <option value=\\\"|\\\">|</option> <option value=\\\"‖\\\">‖</option> <option value=\\\"⟩\\\">⟩</option> </select> </div> </div> <div class=\\\"bracket-actions\\\"> <button id=\\\"insertCustomBracket\\\" class=\\\"builder-btn custom-bracket-btn\\\">Insert<br>Brackets</button> </div> </div> </div> <div id=\\\"operators\\\" class=\\\"tab-pane\\\"> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\times\\\"><math><mo>×</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\divsymbol\\\"><math><mo>÷</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\pm\\\"><math><mo>±</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\mp\\\"><math><mo>∓</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\cdot\\\"><math><mo>·</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\ast\\\"><math><mo>∗</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\star\\\"><math><mo>⋆</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\circ\\\"><math><mo>∘</mo></math></button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\bullet\\\"><math><mo>•</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\neq\\\"><math><mo>≠</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\sim\\\"><math><mo>∼</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\simeq\\\"><math><mo>≃</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\approx\\\"><math><mo>≈</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\equiv\\\"><math><mo>≡</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\cong\\\"><math><mo>≅</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\ncong\\\"><math><mo>≇</mo></math></button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\propto\\\"><math><mo>∝</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\leq\\\"><math><mo>≤</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\geq\\\"><math><mo>≥</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\nless\\\"><math><mo>≮</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\ngtr\\\"><math><mo>≯</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\nleq\\\"><math><mo>≰</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\ngeq\\\"><math><mo>≱</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\prec\\\"><math><mo>≺</mo></math></button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\succ\\\"><math><mo>≻</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\preceq\\\"><math><mo>⪯</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\succeq\\\"><math><mo>⪰</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\ll\\\"><math><mo>≪</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\gg\\\"><math><mo>≫</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\cap\\\"><math><mo>∩</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\cup\\\"><math><mo>∪</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\setminus\\\"><math><mo>∖</mo></math></button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\in\\\"><math><mo>∈</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\ni\\\"><math><mo>∋</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\notin\\\"><math><mo>∉</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\subset\\\"><math><mo>⊂</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\supset\\\"><math><mo>⊃</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\subseteq\\\"><math><mo>⊆</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\supseteq\\\"><math><mo>⊇</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\nsubseteq\\\"><math><mo>⊈</mo></math></button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\nsupseteq\\\"><math><mo>⊉</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\subsetneq\\\"><math><mo>⊊</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\supsetneq\\\"><math><mo>⊋</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\oplus\\\"><math><mo>⊕</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\ominus\\\"><math><mo>⊖</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\otimes\\\"><math><mo>⊗</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\oslash\\\"><math><mo>⊘</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\odot\\\"><math><mo>⊙</mo></math></button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\triangleleft\\\"><math><mo>◁</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\triangleright\\\"><math><mo>▷</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\wr\\\"><math><mo>≀</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\wedge\\\"><math><mo>∧</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\vee\\\"><math><mo>∨</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\vdash\\\"><math><mo>⊢</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\models\\\"><math><mo>⊨</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\top\\\"><math><mo>⊤</mo></math></button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\bot\\\"><math><mo>⊥</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\bowtie\\\"><math><mo>⋈</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\diamond\\\"><math><mo>⋄</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\asymp\\\"><math><mo>≍</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\triangleq\\\"><math><mo>≜</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\therefore\\\"><math><mo>∴</mo></math></button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\because\\\"><math><mo>∵</mo></math></button> </div> </div> <div id=\\\"large-operators\\\" class=\\\"tab-pane\\\"> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn large-operator-btn sum-display-nolimit-btn\\\" title=\\\"Summation (Side limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mo class=\\\"sum-operator-display\\\">∑</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn sum-display-limit-btn\\\" title=\\\"Summation (Above/Below limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munderover> <mo class=\\\"sum-operator-display\\\">∑</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </munderover> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn sum-nolimit-btn\\\" title=\\\"Summation (Side limits) (Small)\\\"> <math> <mrow> <msubsup> <mo class=\\\"sum-operator-inline\\\">∑</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn sum-limit-btn\\\" title=\\\"Summation (Above/Below limits) (Small)\\\"> <math> <mrow> <munderover> <mo class=\\\"sum-operator-inline\\\" movablelimits=\\\"false\\\">∑</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </munderover> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn large-operator-btn prod-display-nolimit-btn\\\" title=\\\"Product (Side limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mo class=\\\"sum-operator-display\\\">∏</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn prod-display-limit-btn\\\" title=\\\"Product (Above/Below limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munderover> <mo class=\\\"sum-operator-display\\\">∏</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </munderover> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn prod-nolimit-btn\\\" title=\\\"Product (Side limits) (Samll)\\\"> <math> <mrow> <msubsup> <mo class=\\\"sum-operator-inline\\\">∏</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn prod-limit-btn\\\" title=\\\"Product (Above/Below limits) (Small)\\\"> <math> <mrow> <munderover> <mo class=\\\"sum-operator-inline\\\" movablelimits=\\\"false\\\">∏</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </munderover> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn large-operator-btn bigcup-display-nolimit-btn\\\" title=\\\"Big Union (Side limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mo class=\\\"sum-operator-display\\\">⋃</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigcup-display-limit-btn\\\" title=\\\"Big Union (Above/Below limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munderover> <mo class=\\\"sum-operator-display\\\">⋃</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </munderover> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigcup-nolimit-btn\\\" title=\\\"Big Union (Side limits) (Small)\\\"> <math> <mrow> <msubsup> <mo class=\\\"sum-operator-inline\\\">⋃</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigcup-limit-btn\\\" title=\\\"Big Union (Above/Below limits) (Small)\\\"> <math> <mrow> <munderover> <mo class=\\\"sum-operator-inline\\\" movablelimits=\\\"false\\\">⋃</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </munderover> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn large-operator-btn bigcap-display-nolimit-btn\\\" title=\\\"Big Intersection (Side limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mo class=\\\"sum-operator-display\\\">⋂</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigcap-display-limit-btn\\\" title=\\\"Big Intersection (Above/Below limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munderover> <mo class=\\\"sum-operator-display\\\">⋂</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </munderover> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigcap-nolimit-btn\\\" title=\\\"Big Intersection (Side limits) (Small)\\\"> <math> <mrow> <msubsup> <mo class=\\\"sum-operator-inline\\\">⋂</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigcap-limit-btn\\\" title=\\\"Big Intersection (Above/Below limits) (Small)\\\"> <math> <mrow> <munderover> <mo class=\\\"sum-operator-inline\\\" movablelimits=\\\"false\\\">⋂</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </munderover> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn large-operator-btn bigvee-display-nolimit-btn\\\" title=\\\"Big Vee/Or (Side limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mo class=\\\"sum-operator-display\\\">⋁</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigvee-display-limit-btn\\\" title=\\\"Big Vee/Or (Above/Below limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munderover> <mo class=\\\"sum-operator-display\\\">⋁</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </munderover> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigvee-nolimit-btn\\\" title=\\\"Big Vee/Or (Side limits) (Small)\\\"> <math> <mrow> <msubsup> <mo class=\\\"sum-operator-inline\\\">⋁</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigvee-limit-btn\\\" title=\\\"Big Vee/Or (Above/Below limits) (Small)\\\"> <math> <mrow> <munderover> <mo class=\\\"sum-operator-inline\\\" movablelimits=\\\"false\\\">⋁</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </munderover> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn large-operator-btn bigwedge-display-nolimit-btn\\\" title=\\\"Big Wedge/And (Side limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mo class=\\\"sum-operator-display\\\">⋀</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigwedge-display-limit-btn\\\" title=\\\"Big Wedge/And (Above/Below limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munderover> <mo class=\\\"sum-operator-display\\\">⋀</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </munderover> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigwedge-nolimit-btn\\\" title=\\\"Big Wedge/And (Side limits) (Small)\\\"> <math> <mrow> <msubsup> <mo class=\\\"sum-operator-inline\\\">⋀</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigwedge-limit-btn\\\" title=\\\"Big Wedge/And (Above/Below limits) (Small)\\\"> <math> <mrow> <munderover> <mo class=\\\"sum-operator-inline\\\" movablelimits=\\\"false\\\">⋀</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </munderover> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn large-operator-btn bigoplus-display-nolimit-btn\\\" title=\\\"Big Plus (Side limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mo class=\\\"sum-operator-display\\\">⨁</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigoplus-display-limit-btn\\\" title=\\\"Big Plus (Above/Below limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munderover> <mo class=\\\"sum-operator-display\\\">⨁</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </munderover> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigoplus-nolimit-btn\\\" title=\\\"Big Plus (Side limits) (Small)\\\"> <math> <mrow> <msubsup> <mo class=\\\"sum-operator-inline\\\">⨁</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigoplus-limit-btn\\\" title=\\\"Big Plus (Above/Below limits) (Small)\\\"> <math> <mrow> <munderover> <mo class=\\\"sum-operator-inline\\\" movablelimits=\\\"false\\\">⨁</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </munderover> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn large-operator-btn bigotimes-display-nolimit-btn\\\" title=\\\"Big Times (Side limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mo class=\\\"sum-operator-display\\\">⨂</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigotimes-display-limit-btn\\\" title=\\\"Big Times (Above/Below limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munderover> <mo class=\\\"sum-operator-display\\\">⨂</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </munderover> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigotimes-nolimit-btn\\\" title=\\\"Big Times (Side limits) (Small)\\\"> <math> <mrow> <msubsup> <mo class=\\\"sum-operator-inline\\\">⨂</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigotimes-limit-btn\\\" title=\\\"Big Times (Above/Below limits) (Small)\\\"> <math> <mrow> <munderover> <mo class=\\\"sum-operator-inline\\\" movablelimits=\\\"false\\\">⨂</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </munderover> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn large-operator-btn bigodot-display-nolimit-btn\\\" title=\\\"Big Dot (Side limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mo class=\\\"sum-operator-display\\\">⨀</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigodot-display-limit-btn\\\" title=\\\"Big Dot (Above/Below limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munderover> <mo class=\\\"sum-operator-display\\\">⨀</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </munderover> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigodot-nolimit-btn\\\" title=\\\"Big Dot (Side limits) (Small)\\\"> <math> <mrow> <msubsup> <mo class=\\\"sum-operator-inline\\\">⨀</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn bigodot-limit-btn\\\" title=\\\"Big Dot (Above/Below limits) (Small)\\\"> <math> <mrow> <munderover> <mo class=\\\"sum-operator-inline\\\" movablelimits=\\\"false\\\">⨀</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </munderover> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn large-operator-btn coprod-display-nolimit-btn\\\" title=\\\"Coproduct (Side limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mo class=\\\"sum-operator-display\\\">∐</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn coprod-display-limit-btn\\\" title=\\\"Coproduct (Above/Below limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munderover> <mo class=\\\"sum-operator-display\\\">∐</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </munderover> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn coprod-nolimit-btn\\\" title=\\\"Coproduct (Side limits) (Small)\\\"> <math> <mrow> <msubsup> <mo class=\\\"sum-operator-inline\\\">∐</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn coprod-limit-btn\\\" title=\\\"Coproduct (Above/Below limits) (Small)\\\"> <math> <mrow> <munderover> <mo class=\\\"sum-operator-inline\\\" movablelimits=\\\"false\\\">∐</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </munderover> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn large-operator-btn biguplus-display-nolimit-btn\\\" title=\\\"Big Uplus (Side limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mo class=\\\"sum-operator-display\\\">⨄</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn biguplus-display-limit-btn\\\" title=\\\"Big Uplus (Above/Below limits) (Large)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munderover> <mo class=\\\"sum-operator-display\\\">⨄</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </munderover> <mi class=\\\"sum-operand-display\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn biguplus-nolimit-btn\\\" title=\\\"Big Uplus (Side limits) (Small)\\\"> <math> <mrow> <msubsup> <mo class=\\\"sum-operator-inline\\\">⨄</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> <button class=\\\"builder-btn large-operator-btn biguplus-limit-btn\\\" title=\\\"Big Uplus (Above/Below limits) (Small)\\\"> <math> <mrow> <munderover> <mo class=\\\"sum-operator-inline\\\" movablelimits=\\\"false\\\">⨄</mo> <mi class=\\\"sum-limit-inline\\\">□</mi> <mi class=\\\"sum-limit-inline\\\">□</mi> </munderover> <mi class=\\\"sum-operand-inline\\\">□</mi> </mrow> </math> </button> </div> </div> <div id=\\\"calculus\\\" class=\\\"tab-pane\\\"> <div class=\\\"button-row differential-style-row\\\"> <button class=\\\"differential-style-btn active\\\" id=\\\"differential-style-italic\\\" title=\\\"Italic d (default)\\\"> <math> <mrow> <mi>d</mi> <mi>□</mi> </mrow> </math> </button> <button class=\\\"differential-style-btn\\\" id=\\\"differential-style-roman\\\" title=\\\"Roman d\\\"> <math> <mrow> <mtext>d</mtext> <mi>□</mi> </mrow> </math> </button> <div class=\\\"vertical-separator\\\"></div> <button class=\\\"display-style-toggle-btn\\\" id=\\\"display-style-toggle\\\" title=\\\"Display → Inline\\\"> <math> <mrow> <mo style=\\\"font-size:18px\\\">∫</mo> <mo>→</mo> <mo style=\\\"font-size:12px\\\">∫</mo> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn derivative-btn first-derivative-btn\\\" title=\\\"First derivative\\\"> <math> <mfrac> <mrow> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> <mrow> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </mfrac> </math> </button> <button class=\\\"builder-btn derivative-btn nth-derivative-btn\\\" title=\\\"Higher derivative\\\"> <math> <mfrac> <mrow> <msup> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </msup> <mi>□</mi> </mrow> <mrow> <mi class=\\\"derivative-d\\\">d</mi> <msup> <mi>□</mi> <mi>□</mi> </msup> </mrow> </mfrac> </math> </button> <button class=\\\"builder-btn derivative-btn derivative-long-form-btn\\\" title=\\\"Derivative (Long form)\\\"> <math> <mrow> <mfrac> <mi class=\\\"derivative-d\\\">d</mi> <mrow> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </mfrac> <mi>□</mi> </mrow> </math> </button> <button class=\\\"builder-btn derivative-btn nth-derivative-long-form-btn\\\" title=\\\"Higher derivative (Long form)\\\"> <math> <mrow> <mfrac> <msup> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </msup> <mrow> <mi class=\\\"derivative-d\\\">d</mi> <msup> <mi>□</mi> <mi>□</mi> </msup> </mrow> </mfrac> <mi>□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn derivative-btn first-partial-derivative-btn\\\" title=\\\"First partial derivative\\\"> <math> <mfrac> <mrow> <mi class=\\\"derivative-d\\\">∂</mi> <mi>□</mi> </mrow> <mrow> <mi class=\\\"derivative-d\\\">∂</mi> <mi>□</mi> </mrow> </mfrac> </math> </button> <button class=\\\"builder-btn derivative-btn nth-partial-derivative-btn\\\" title=\\\"Higher partial derivative\\\"> <math> <mfrac> <mrow> <msup> <mi class=\\\"derivative-d\\\">∂</mi> <mi>□</mi> </msup> <mi>□</mi> </mrow> <mrow> <mi class=\\\"derivative-d\\\">∂</mi> <msup> <mi>□</mi> <mi>□</mi> </msup> </mrow> </mfrac> </math> </button> <button class=\\\"builder-btn derivative-btn partial-derivative-long-form-btn\\\" title=\\\"Partial derivative (Long form)\\\"> <math> <mrow> <mfrac> <mi class=\\\"derivative-d\\\">∂</mi> <mrow> <mi class=\\\"derivative-d\\\">∂</mi> <mi>□</mi> </mrow> </mfrac> <mi>□</mi> </mrow> </math> </button> <button class=\\\"builder-btn derivative-btn nth-partial-derivative-long-form-btn\\\" title=\\\"Higher partial derivative (Long form)\\\"> <math> <mrow> <mfrac> <msup> <mi class=\\\"derivative-d\\\">∂</mi> <mi>□</mi> </msup> <mrow> <mi class=\\\"derivative-d\\\">∂</mi> <msup> <mi>□</mi> <mi>□</mi> </msup> </mrow> </mfrac> <mi>□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn integral-btn int-indefinite-display-btn\\\" title=\\\"Indefinite integral\\\"> <math displaystyle=\\\"true\\\"> <mrow> <mo class=\\\"sum-operator-display\\\">∫</mo> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> <button class=\\\"builder-btn integral-btn int-display-nolimit-btn\\\" title=\\\"Definite integral (Side limits)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mo class=\\\"sum-operator-display\\\">∫</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> <button class=\\\"builder-btn integral-btn int-display-limit-btn\\\" title=\\\"Definite integral (Above/Below limits)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munderover> <mo class=\\\"sum-operator-display\\\">∫</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </munderover> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn integral-btn double-int-indefinite-btn\\\" title=\\\"Double integral\\\"> <math displaystyle=\\\"true\\\"> <mrow> <mo class=\\\"sum-operator-display\\\">∬</mo> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> <button class=\\\"builder-btn integral-btn double-int-subscript-btn\\\" title=\\\"Double integral with subscript\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msub> <mo class=\\\"sum-operator-display\\\">∬</mo> <mi class=\\\"sum-limit-display\\\">□</mi> </msub> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> <button class=\\\"builder-btn integral-btn double-int-lower-btn\\\" title=\\\"Double integral with lower limit\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munder> <mo class=\\\"sum-operator-display\\\">∬</mo> <mi class=\\\"sum-limit-display\\\">□</mi> </munder> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> <button class=\\\"builder-btn integral-btn double-int-nolimit-btn\\\" title=\\\"Double definite integral (Side limits)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mo class=\\\"sum-operator-display\\\">∬</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> <button class=\\\"builder-btn integral-btn double-int-limit-btn\\\" title=\\\"Double definite integral (Above/Below limits)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munderover> <mo class=\\\"sum-operator-display\\\">∬</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </munderover> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn integral-btn triple-int-indefinite-btn\\\" title=\\\"Triple integral\\\"> <math displaystyle=\\\"true\\\"> <mrow> <mo class=\\\"sum-operator-display\\\">∭</mo> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> <button class=\\\"builder-btn integral-btn triple-int-subscript-btn\\\" title=\\\"Triple integral with subscript\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msub> <mo class=\\\"sum-operator-display\\\">∭</mo> <mi class=\\\"sum-limit-display\\\">□</mi> </msub> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> <button class=\\\"builder-btn integral-btn triple-int-lower-btn\\\" title=\\\"Triple integral with lower limit\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munder> <mo class=\\\"sum-operator-display\\\">∭</mo> <mi class=\\\"sum-limit-display\\\">□</mi> </munder> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> <button class=\\\"builder-btn integral-btn triple-int-nolimit-btn\\\" title=\\\"Triple definite integral (Side limits)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mo class=\\\"sum-operator-display\\\">∭</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> <button class=\\\"builder-btn integral-btn triple-int-limit-btn\\\" title=\\\"Triple definite integral (Above/Below limits)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <munderover> <mo class=\\\"sum-operator-display\\\">∭</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </munderover> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn integral-btn contour-int-indefinite-btn\\\" title=\\\"Contour integral\\\"> <math displaystyle=\\\"true\\\"> <mrow> <mo class=\\\"sum-operator-display\\\">∮</mo> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> <button class=\\\"builder-btn integral-btn contour-int-subscript-btn\\\" title=\\\"Contour integral with path\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msub> <mo class=\\\"sum-operator-display\\\">∮</mo> <mi class=\\\"sum-limit-display\\\">□</mi> </msub> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> <button class=\\\"builder-btn integral-btn contour-int-nolimit-btn\\\" title=\\\"Contour integral with bounds\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mo class=\\\"sum-operator-display\\\">∮</mo> <mi class=\\\"sum-limit-display\\\">□</mi> <mi class=\\\"sum-limit-display\\\">□</mi> </msubsup> <mi class=\\\"sum-operand-display\\\">□</mi> <mi class=\\\"derivative-d\\\">d</mi> <mi>□</mi> </mrow> </math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn integral-btn evaluation-bracket-btn\\\" data-evaluation-type=\\\"bar\\\" title=\\\"Evaluation Bracket (Bar)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mrow> <mi class=\\\"sum-operator-display\\\">□</mi> <mo class=\\\"sum-operator-display\\\" stretchy=\\\"true\\\" symmetric=\\\"true\\\">|</mo> </mrow> <mi class=\\\"sum-operator-display\\\">□</mi> <mi class=\\\"sum-operator-display\\\">□</mi> </msubsup> </mrow> </math> </button> <button class=\\\"builder-btn integral-btn evaluation-bracket-btn\\\" data-evaluation-type=\\\"square\\\" title=\\\"Evaluation Bracket (Square)\\\"> <math displaystyle=\\\"true\\\"> <mrow> <msubsup> <mrow> <mo class=\\\"sum-operator-display\\\" stretchy=\\\"true\\\" symmetric=\\\"true\\\">[</mo> <mi class=\\\"sum-operator-display\\\">□</mi> <mo class=\\\"sum-operator-display\\\" stretchy=\\\"true\\\" symmetric=\\\"true\\\">]</mo> </mrow> <mi class=\\\"sum-operator-display\\\">□</mi> <mi class=\\\"sum-operator-display\\\">□</mi> </msubsup> </mrow> </math> </button> </div> </div> <div id=\\\"functions\\\" class=\\\"tab-pane\\\"> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"sin\\\" title=\\\"Sine\\\"> <math><mrow><mo>sin</mo><mi>□</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"cos\\\" title=\\\"Cosine\\\"> <math><mrow><mo>cos</mo><mi>□</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"tan\\\" title=\\\"Tangent\\\"> <math><mrow><mo>tan</mo><mi>□</mi></mrow></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"sec\\\" title=\\\"Secant\\\"> <math><mrow><mo>sec</mo><mi>□</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"csc\\\" title=\\\"Cosecant\\\"> <math><mrow><mo>csc</mo><mi>□</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"cot\\\" title=\\\"Cotangent\\\"> <math><mrow><mo>cot</mo><mi>□</mi></mrow></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"asin\\\" title=\\\"Inverse Sine\\\"> <math><mrow><msup><mo>sin</mo><mo>-1</mo></msup><mi>□</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"acos\\\" title=\\\"Inverse Cosine\\\"> <math><mrow><msup><mo>cos</mo><mo>-1</mo></msup><mi>□</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"atan\\\" title=\\\"Inverse Tangent\\\"> <math><mrow><msup><mo>tan</mo><mo>-1</mo></msup><mi>□</mi></mrow></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"log\\\" title=\\\"Logarithm\\\"> <math><mrow><mo>log</mo><mi>□</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"logn\\\" title=\\\"Base-n Logarithm\\\"> <math><mrow><msub><mo>log</mo><mi>□</mi></msub><mi>□</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"ln\\\" title=\\\"Natural Logarithm\\\"> <math><mrow><mo>ln</mo><mi>□</mi></mrow></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"sinh\\\" title=\\\"Hyperbolic Sine\\\"> <math><mrow><mo>sinh</mo><mi>□</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"cosh\\\" title=\\\"Hyperbolic Cosine\\\"> <math><mrow><mo>cosh</mo><mi>□</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"tanh\\\" title=\\\"Hyperbolic Tangent\\\"> <math><mrow><mo>tanh</mo><mi>□</mi></mrow></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"asinh\\\" title=\\\"Inverse Hyperbolic Sine\\\"> <math><mrow><msup><mo>sinh</mo><mo>-1</mo></msup><mi>□</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"acosh\\\" title=\\\"Inverse Hyperbolic Cosine\\\"> <math><mrow><msup><mo>cosh</mo><mo>-1</mo></msup><mi>□</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"atanh\\\" title=\\\"Inverse Hyperbolic Tangent\\\"> <math><mrow><msup><mo>tanh</mo><mo>-1</mo></msup><mi>□</mi></mrow></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"max\\\" title=\\\"Maximum with constraint\\\"> <math><mrow><munder><mo>max</mo><mi>□</mi></munder><mi>□</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"min\\\" title=\\\"Minimum with constraint\\\"> <math><mrow><munder><mo>min</mo><mi>□</mi></munder><mi>□</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"lim\\\" title=\\\"Limit\\\"> <math><mrow><munder><mo>lim</mo><mi>□</mi></munder><mi>□</mi></mrow></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"argmax\\\" title=\\\"Argument maximum\\\"> <math><mrow><munder><mrow><mo>argmax</mo></mrow><mi>□</mi></munder><mi>□</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"argmin\\\" title=\\\"Argument minimum\\\"> <math><mrow><munder><mrow><mo>argmin</mo></mrow><mi>□</mi></munder><mi>□</mi></mrow></math> </button> </div> <hr class=\\\"horizontal-separator\\\"> <div class=\\\"function-section-title\\\">Custom Functions</div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"function\\\" title=\\\"Custom Function\\\"> <math><mrow><mi>□</mi><mi>▭</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"functionsub\\\" title=\\\"Custom Function with Subscript\\\"> <math><mrow><msub><mi>□</mi><mi>□</mi></msub><mi>▭</mi></mrow></math> </button> <button class=\\\"builder-btn function-btn\\\" data-function=\\\"functionlim\\\" title=\\\"Custom Function with Lower Limit\\\"> <math><mrow><munder><mi>□</mi><mi>□</mi></munder><mi>▭</mi></mrow></math> </button> </div> </div> <div id=\\\"greek-letters\\\" class=\\\"tab-pane\\\"> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\alpha\\\" title=\\\"Alpha\\\">α</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\beta\\\" title=\\\"Beta\\\">β</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\gamma\\\" title=\\\"Gamma\\\">γ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\delta\\\" title=\\\"Delta\\\">δ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\epsilon\\\" title=\\\"Epsilon\\\">ϵ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\varepsilon\\\" title=\\\"Epsilon variant\\\">ε</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\zeta\\\" title=\\\"Zeta\\\">ζ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\eta\\\" title=\\\"Eta\\\">η</button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\theta\\\" title=\\\"Theta\\\">θ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\vartheta\\\" title=\\\"Theta variant\\\">ϑ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\iota\\\" title=\\\"Iota\\\">ι</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\kappa\\\" title=\\\"Kappa\\\">κ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\lambda\\\" title=\\\"Lambda\\\">λ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\mu\\\" title=\\\"Mu\\\">μ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\nu\\\" title=\\\"Nu\\\">ν</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\xi\\\" title=\\\"Xi\\\">ξ</button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\omicron\\\" title=\\\"Omicron\\\">ο</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\pi\\\" title=\\\"Pi\\\">π</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\varpi\\\" title=\\\"Pi variant\\\">ϖ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\rho\\\" title=\\\"Rho\\\">ρ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\varrho\\\" title=\\\"Rho variant\\\">ϱ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\sigma\\\" title=\\\"Sigma\\\">σ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\varsigma\\\" title=\\\"Sigma variant\\\">ς</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\tau\\\" title=\\\"Tau\\\">τ</button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\upsilon\\\" title=\\\"Upsilon\\\">υ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\phi\\\" title=\\\"Phi\\\">ϕ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\varphi\\\" title=\\\"Phi variant\\\">φ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\chi\\\" title=\\\"Chi\\\">χ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\psi\\\" title=\\\"Psi\\\">ψ</button> <button class=\\\"builder-btn greek-letter-btn\\\" data-greek=\\\"\\\\omega\\\" title=\\\"Omega\\\">ω</button> </div> <hr class=\\\"horizontal-separator\\\"> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn greek-letter-capital-btn\\\" data-greek=\\\"\\\\Gamma\\\" title=\\\"Capital Gamma\\\">Γ</button> <button class=\\\"builder-btn greek-letter-capital-btn\\\" data-greek=\\\"\\\\Delta\\\" title=\\\"Capital Delta\\\">Δ</button> <button class=\\\"builder-btn greek-letter-capital-btn\\\" data-greek=\\\"\\\\Theta\\\" title=\\\"Capital Theta\\\">Θ</button> <button class=\\\"builder-btn greek-letter-capital-btn\\\" data-greek=\\\"\\\\Lambda\\\" title=\\\"Capital Lambda\\\">Λ</button> <button class=\\\"builder-btn greek-letter-capital-btn\\\" data-greek=\\\"\\\\Pi\\\" title=\\\"Capital Pi\\\">Π</button> <button class=\\\"builder-btn greek-letter-capital-btn\\\" data-greek=\\\"\\\\Sigma\\\" title=\\\"Capital Sigma\\\">Σ</button> <button class=\\\"builder-btn greek-letter-capital-btn\\\" data-greek=\\\"\\\\Upsilon\\\" title=\\\"Capital Upsilon\\\">Υ</button> <button class=\\\"builder-btn greek-letter-capital-btn\\\" data-greek=\\\"\\\\Phi\\\" title=\\\"Capital Phi\\\">Φ</button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn greek-letter-capital-btn\\\" data-greek=\\\"\\\\Psi\\\" title=\\\"Capital Psi\\\">Ψ</button> <button class=\\\"builder-btn greek-letter-capital-btn\\\" data-greek=\\\"\\\\Omega\\\" title=\\\"Capital Omega\\\">Ω</button> </div> </div> <div id=\\\"symbols\\\" class=\\\"tab-pane\\\"> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\forall\\\" title=\\\"For All\\\"> <math><mo>∀</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\exists\\\" title=\\\"There Exists\\\"> <math><mo>∃</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\nexists\\\" title=\\\"There Does Not Exist\\\"> <math><mo>∄</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\emptyset\\\" title=\\\"Empty Set\\\"> <math><mo>∅</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\in\\\" title=\\\"Element Of\\\"> <math><mo>∈</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\notin\\\" title=\\\"Not Element Of\\\"> <math><mo>∉</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\ni\\\" title=\\\"Contains\\\"> <math><mo>∋</mo></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\cup\\\" title=\\\"Union\\\"> <math><mo>∪</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\cap\\\" title=\\\"Intersection\\\"> <math><mo>∩</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\setminus\\\" title=\\\"Set Minus\\\"> <math><mo>∖</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\subset\\\" title=\\\"Subset\\\"> <math><mo>⊂</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\supset\\\" title=\\\"Superset\\\"> <math><mo>⊃</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\subseteq\\\" title=\\\"Subset Or Equal\\\"> <math><mo>⊆</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\supseteq\\\" title=\\\"Superset Or Equal\\\"> <math><mo>⊇</mo></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\nsubseteq\\\" title=\\\"Not Subset Or Equal\\\"> <math><mo>⊈</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\nsupseteq\\\" title=\\\"Not Superset Or Equal\\\"> <math><mo>⊉</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\subsetneq\\\" title=\\\"Proper Subset\\\"> <math><mo>⊊</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\supsetneq\\\" title=\\\"Proper Superset\\\"> <math><mo>⊋</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\wedge\\\" title=\\\"Logical And\\\"> <math><mo>∧</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\vee\\\" title=\\\"Logical Or\\\"> <math><mo>∨</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\vdash\\\" title=\\\"Proves\\\"> <math><mo>⊢</mo></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\models\\\" title=\\\"Models\\\"> <math><mo>⊨</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\top\\\" title=\\\"Top\\\"> <math><mo>⊤</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\bot\\\" title=\\\"Bottom\\\"> <math><mo>⊥</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\therefore\\\" title=\\\"Therefore\\\"> <math><mo>∴</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\because\\\" title=\\\"Because\\\"> <math><mo>∵</mo></math> </button> </div> <hr class=\\\"horizontal-separator\\\"> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\mathbb{N}\\\" title=\\\"Natural Numbers\\\"> <math><mo>ℕ</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\mathbb{Z}\\\" title=\\\"Integers\\\"> <math><mo>ℤ</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\mathbb{Q}\\\" title=\\\"Rational Numbers\\\"> <math><mo>ℚ</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\mathbb{R}\\\" title=\\\"Real Numbers\\\"> <math><mo>ℝ</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\mathbb{C}\\\" title=\\\"Complex Numbers\\\"> <math><mo>ℂ</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\mathbb{H}\\\" title=\\\"Quaternions\\\"> <math><mo>ℍ</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\mathbb{P}\\\" title=\\\"Primes\\\"> <math><mo>ℙ</mo></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\wp\\\" title=\\\"Weierstrass P\\\"> <math><mo>℘</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\aleph\\\" title=\\\"Aleph\\\"> <math><mo>ℵ</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\beth\\\" title=\\\"Beth\\\"> <math><mo>ℶ</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\gimel\\\" title=\\\"Gimel\\\"> <math><mo>ℷ</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\daleth\\\" title=\\\"Daleth\\\"> <math><mo>ℸ</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\partial\\\" title=\\\"Partial Derivative\\\"> <math><mi>∂</mi></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\nabla\\\" title=\\\"Nabla\\\"> <math><mo>∇</mo></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\infty\\\" title=\\\"Infinity\\\"> <math><mo>∞</mo></math> </button> </div> <hr class=\\\"horizontal-separator\\\"> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\angle\\\" title=\\\"Angle\\\"> <math><mo>∠</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\measuredangle\\\" title=\\\"Measured Angle\\\"> <math><mo>∡</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\sphericalangle\\\" title=\\\"Spherical Angle\\\"> <math><mo>∢</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\degree\\\" title=\\\"Degree\\\"> <math><mo>°</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\parallel\\\" title=\\\"Parallel\\\"> <math><mo>∥</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\nparallel\\\" title=\\\"Not Parallel\\\"> <math><mo>∦</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\perp\\\" title=\\\"Perpendicular\\\"> <math><mo>⊥</mo></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\triangle\\\" title=\\\"Triangle\\\"> <math><mo>△</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\square\\\" title=\\\"Square\\\"> <math><mo>□</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\blacksquare\\\" title=\\\"Black Square\\\"> <math><mo>■</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\lozenge\\\" title=\\\"Lozenge\\\"> <math><mo>◊</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\blacklozenge\\\" title=\\\"Black Lozenge\\\"> <math><mo>⧫</mo></math> </button> <button class=\\\"builder-btn operator-btn\\\" data-operator=\\\"\\\\bigcirc\\\" title=\\\"Large Circle\\\"> <math><mo>○</mo></math> </button> </div> </div> <div id=\\\"matrices\\\" class=\\\"tab-pane\\\"> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn matrix-btn\\\" data-matrix-type=\\\"parentheses\\\" title=\\\"Parentheses Matrix\\\">( )</button> <button class=\\\"builder-btn matrix-btn\\\" data-matrix-type=\\\"brackets\\\" title=\\\"Brackets Matrix\\\">[ ]</button> <button class=\\\"builder-btn matrix-btn\\\" data-matrix-type=\\\"braces\\\" title=\\\"Braces Matrix\\\">{ }</button> <button class=\\\"builder-btn matrix-btn\\\" data-matrix-type=\\\"bars\\\" title=\\\"Bars Matrix\\\">| |</button> <button class=\\\"builder-btn matrix-btn\\\" data-matrix-type=\\\"double-bars\\\" title=\\\"Double Bars Matrix\\\">∥ ∥</button> <button class=\\\"builder-btn matrix-btn\\\" data-matrix-type=\\\"none\\\" title=\\\"Plain Matrix\\\">□</button> </div> <div class=\\\"matrix-size-panel\\\" id=\\\"matrixSizePanel\\\" style=\\\"display:none\\\"> <div class=\\\"matrix-size-header\\\">Select Matrix Size</div> <div class=\\\"matrix-panel-content\\\"> <div class=\\\"matrix-panel-left\\\"> <div class=\\\"matrix-grid-selector\\\" id=\\\"matrixGridSelector\\\"> </div> <div class=\\\"matrix-grid-hint\\\">Quick select (up to 6×6)</div> </div> <div class=\\\"matrix-panel-right\\\"> <div class=\\\"matrix-manual-input\\\"> <div class=\\\"matrix-input-row\\\"> <label for=\\\"matrixRows\\\">Rows:</label> <input type=\\\"number\\\" id=\\\"matrixRows\\\" min=\\\"1\\\" max=\\\"20\\\" value=\\\"2\\\" class=\\\"matrix-size-input\\\"> </div> <div class=\\\"matrix-input-row\\\"> <label for=\\\"matrixCols\\\">Cols:</label> <input type=\\\"number\\\" id=\\\"matrixCols\\\" min=\\\"1\\\" max=\\\"20\\\" value=\\\"2\\\" class=\\\"matrix-size-input\\\"> </div> <div class=\\\"matrix-input-hint\\\">Supports up to 20×20</div> <div class=\\\"matrix-actions\\\"> <button id=\\\"createMatrixBtn\\\" class=\\\"matrix-action-btn matrix-create-btn\\\">Create</button> <button id=\\\"cancelMatrixBtn\\\" class=\\\"matrix-action-btn matrix-cancel-btn\\\">Cancel</button> </div> </div> </div> </div> </div> </div> <div id=\\\"accents\\\" class=\\\"tab-pane\\\"> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"hat\\\" data-position=\\\"over\\\" title=\\\"Hat\\\"> <math><mover><mrow style=\\\"border:1px solid #666;padding:2px 4px\\\"><mi>x</mi></mrow><mo>^</mo></mover></math> </button> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"tilde\\\" data-position=\\\"over\\\" title=\\\"Tilde\\\"> <math><mover><mrow style=\\\"border:1px solid #666;padding:2px 4px\\\"><mi>x</mi></mrow><mo>~</mo></mover></math> </button> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"bar\\\" data-position=\\\"over\\\" title=\\\"Bar\\\"> <math><mover><mrow style=\\\"border:1px solid #666;padding:2px 4px\\\"><mi>x</mi></mrow><mo>‾</mo></mover></math> </button> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"dot\\\" data-position=\\\"over\\\" title=\\\"Dot\\\"> <math><mover><mrow style=\\\"border:1px solid #666;padding:2px 4px\\\"><mi>x</mi></mrow><mo>·</mo></mover></math> </button> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"ddot\\\" data-position=\\\"over\\\" title=\\\"Double Dot\\\"> <math><mover><mrow style=\\\"border:1px solid #666;padding:2px 4px\\\"><mi>x</mi></mrow><mo>¨</mo></mover></math> </button> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"vec\\\" data-position=\\\"over\\\" title=\\\"Vector\\\"> <math><mover><mrow style=\\\"border:1px solid #666;padding:2px 4px\\\"><mi>x</mi></mrow><mo>→</mo></mover></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"widehat\\\" data-position=\\\"over\\\" title=\\\"Wide Hat\\\"> <math><mover><mrow style=\\\"border:1px solid #666;padding:2px 4px;background-color:#f0f0f0\\\"><mi>x</mi><mi>y</mi><mi>z</mi></mrow><mo>^</mo></mover></math> </button> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"widetilde\\\" data-position=\\\"over\\\" title=\\\"Wide Tilde\\\"> <math><mover><mrow style=\\\"border:1px solid #666;padding:2px 4px;background-color:#f0f0f0\\\"><mi>x</mi><mi>y</mi><mi>z</mi></mrow><mo>∼</mo></mover></math> </button> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"widebar\\\" data-position=\\\"over\\\" title=\\\"Wide Bar\\\"> <math><mover><mrow style=\\\"border:1px solid #666;padding:2px 4px;background-color:#f0f0f0\\\"><mi>x</mi><mi>y</mi><mi>z</mi></mrow><mo stretchy=\\\"true\\\">‾</mo></mover></math> </button> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"overrightarrow\\\" data-position=\\\"over\\\" title=\\\"Over Right Arrow\\\"> <math><mover><mrow style=\\\"border:1px solid #666;padding:2px 4px;background-color:#f0f0f0\\\"><mi>x</mi><mi>y</mi><mi>z</mi></mrow><mo stretchy=\\\"true\\\">⟶</mo></mover></math> </button> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"overleftarrow\\\" data-position=\\\"over\\\" title=\\\"Over Left Arrow\\\"> <math><mover><mrow style=\\\"border:1px solid #666;padding:2px 4px;background-color:#f0f0f0\\\"><mi>x</mi><mi>y</mi><mi>z</mi></mrow><mo stretchy=\\\"true\\\">⟵</mo></mover></math> </button> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"overleftrightarrow\\\" data-position=\\\"over\\\" title=\\\"Over Left-Right Arrow\\\"> <math><mover><mrow style=\\\"border:1px solid #666;padding:2px 4px;background-color:#f0f0f0\\\"><mi>x</mi><mi>y</mi><mi>z</mi></mrow><mo stretchy=\\\"true\\\">⟷</mo></mover></math> </button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"overbrace\\\" data-position=\\\"over\\\" title=\\\"Overbrace\\\"> <math><mover><mrow style=\\\"border:1px solid #666;padding:2px 4px;background-color:#f0f0f0\\\"><mi>x</mi><mi>y</mi><mi>z</mi></mrow><mo stretchy=\\\"true\\\">⏞</mo></mover></math> </button> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"underbrace\\\" data-position=\\\"under\\\" title=\\\"Underbrace\\\"> <math><munder><mrow style=\\\"border:1px solid #666;padding:2px 4px;background-color:#f0f0f0\\\"><mi>x</mi><mi>y</mi><mi>z</mi></mrow><mo stretchy=\\\"true\\\">⏟</mo></munder></math> </button> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"labeledoverbrace\\\" data-position=\\\"over\\\" title=\\\"Overbrace with Label\\\"> <math><mover><mover><mrow style=\\\"border:1px solid #666;padding:2px 4px;background-color:#f0f0f0\\\"><mi>x</mi><mi>y</mi><mi>z</mi></mrow><mo stretchy=\\\"true\\\">⏞</mo></mover><mrow style=\\\"border:1px solid #999;padding:1px 2px;font-size:.8em\\\">□</mrow></mover></math> </button> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"labeledunderbrace\\\" data-position=\\\"under\\\" title=\\\"Underbrace with Label\\\"> <math><munder><munder><mrow style=\\\"border:1px solid #666;padding:2px 4px;background-color:#f0f0f0\\\"><mi>x</mi><mi>y</mi><mi>z</mi></mrow><mo stretchy=\\\"true\\\">⏟</mo></munder><mrow style=\\\"border:1px solid #999;padding:1px 2px;font-size:.8em\\\">□</mrow></munder></math> </button> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"overparen\\\" data-position=\\\"over\\\" title=\\\"Over Parenthesis\\\"> <math><mover><mrow style=\\\"border:1px solid #666;padding:2px 4px;background-color:#f0f0f0\\\"><mi>x</mi><mi>y</mi><mi>z</mi></mrow><mo stretchy=\\\"true\\\">⏜</mo></mover></math> </button> <button class=\\\"builder-btn accent-btn\\\" data-accent=\\\"underparen\\\" data-position=\\\"under\\\" title=\\\"Under Parenthesis\\\"> <math><munder><mrow style=\\\"border:1px solid #666;padding:2px 4px;background-color:#f0f0f0\\\"><mi>x</mi><mi>y</mi><mi>z</mi></mrow><mo stretchy=\\\"true\\\">⏝</mo></munder></math> </button> </div> </div> <div id=\\\"arrows\\\" class=\\\"tab-pane\\\"> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\rightarrow\\\" title=\\\"Right Arrow\\\">→</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\leftarrow\\\" title=\\\"Left Arrow\\\">←</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\uparrow\\\" title=\\\"Up Arrow\\\">↑</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\downarrow\\\" title=\\\"Down Arrow\\\">↓</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\leftrightarrow\\\" title=\\\"Left-Right Arrow\\\">↔</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\updownarrow\\\" title=\\\"Up-Down Arrow\\\">↕</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\nearrow\\\" title=\\\"Northeast Arrow\\\">↗</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\searrow\\\" title=\\\"Southeast Arrow\\\">↘</button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\Rightarrow\\\" title=\\\"Double Right Arrow\\\">⇒</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\Leftarrow\\\" title=\\\"Double Left Arrow\\\">⇐</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\Uparrow\\\" title=\\\"Double Up Arrow\\\">⇑</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\Downarrow\\\" title=\\\"Double Down Arrow\\\">⇓</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\Leftrightarrow\\\" title=\\\"Double Left-Right Arrow\\\">⇔</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\Updownarrow\\\" title=\\\"Double Up-Down Arrow\\\">⇕</button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\longrightarrow\\\" title=\\\"Long Right Arrow\\\">⟶</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\longleftarrow\\\" title=\\\"Long Left Arrow\\\">⟵</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\longleftrightarrow\\\" title=\\\"Long Left-Right Arrow\\\">⟷</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\Longrightarrow\\\" title=\\\"Long Double Right Arrow\\\">⟹</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\Longleftarrow\\\" title=\\\"Long Double Left Arrow\\\">⟸</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\Longleftrightarrow\\\" title=\\\"Long Double Left-Right Arrow\\\">⟺</button> </div> <div class=\\\"button-row\\\"> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\circlearrowleft\\\" title=\\\"Circle Arrow Left\\\">↺</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\circlearrowright\\\" title=\\\"Circle Arrow Right\\\">↻</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\curvearrowleft\\\" title=\\\"Curve Arrow Left\\\">↶</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\curvearrowright\\\" title=\\\"Curve Arrow Right\\\">↷</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\hookleftarrow\\\" title=\\\"Hook Left Arrow\\\">↩</button> <button class=\\\"builder-btn arrow-btn\\\" data-arrow=\\\"\\\\hookrightarrow\\\" title=\\\"Hook Right Arrow\\\">↪</button> </div> </div> </div> </div> <div class=\\\"stack-cases-size-panel\\\" id=\\\"stackCasesSizePanel\\\" style=\\\"display:none\\\"> <div class=\\\"stack-cases-size-header\\\" id=\\\"stackCasesHeader\\\">Select Size</div> <div class=\\\"stack-cases-panel-content\\\"> <div class=\\\"stack-cases-input-container\\\"> <div class=\\\"stack-cases-input-row\\\"> <label for=\\\"stackCasesRows\\\">Number of rows:</label> <input type=\\\"number\\\" id=\\\"stackCasesRows\\\" min=\\\"3\\\" max=\\\"10\\\" value=\\\"3\\\" class=\\\"stack-cases-size-input\\\"> </div> <div class=\\\"stack-cases-input-hint\\\">Enter a value between 3 and 10</div> <div class=\\\"stack-cases-actions\\\"> <button id=\\\"createStackCasesBtn\\\" class=\\\"stack-cases-action-btn stack-cases-create-btn\\\">Create</button> <button id=\\\"cancelStackCasesBtn\\\" class=\\\"stack-cases-action-btn stack-cases-cancel-btn\\\">Cancel</button> </div> </div> </div> </div> <div class=\\\"footer\\\"> <div class=\\\"footer-controls\\\"> <button id=\\\"clear-equation-button\\\" class=\\\"ms-Button ms-Button--secondary\\\"> <span class=\\\"ms-Button-label\\\">Clear</span> </button> <button id=\\\"insert-equation-button\\\" class=\\\"ms-Button ms-Button--primary\\\"> <span class=\\\"ms-Button-label\\\">Insert Equation</span> </button> </div> <div id=\\\"status\\\"></div> </div> <div id=\\\"mathjax-renderer\\\"></div> </div> </body> </html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","FUNCTION_CONFIG","structureType","hasBuiltinLatex","FUNCTION_TYPE_MAP","entries","reduce","acc","_ref","_ref2","_slicedToArray","name","config","FUNCTION_NAMES","keys","filter","includes","BUILTIN_FUNCTION_COMMANDS","_ref3","_ref4","map","_ref5","_ref6","concat","SYMBOL_CONFIG","unicode","defaultItalic","isLargeOperator","dataAttribute","needsInlineScaling","LATEX_TO_UNICODE","_ref7","_ref8","latex","info","UNICODE_TO_LATEX","_ref9","_ref0","LARGE_OPERATORS","_ref1","_ref10","_ref11","_ref12","BRACKET_PAIRS","left","right","leftDisplay","rightDisplay","INTEGRAL_COMMANDS","hasMixedBrackets","text","_step","foundBracketTypes","Set","_iterator","_createForOfIteratorHelper","s","n","done","pair","value","add","err","f","size","STRUCTURE_FIELD_LISTS","getStructureNavigationFields","element","baseFields","type","fields","cells","row","rows","col","cols","push","field","superscript","subscript","upperLimit","lowerLimit","Array","isArray","order","functionType","functionConstraint","functionBase","accentLabel","EquationBuilder","_classCallCheck","_defineProperty","clear","key","equation","elementIdCounter","context","position","splice","id","generateElementId","numerator","denominator","displayMode","radicand","index","hasSuper","arguments","hasSub","base","leftSymbol","rightSymbol","leftBracketSymbol","rightBracketSymbol","content","bracketType","operator","limitMode","operand","isLongForm","isPartial","function","variable","integralType","integralStyle","isDefinite","integrand","differentialVariable","matrixType","stackType","casesType","elements","el","found","findElementById","cellKey","startsWith","accentBase","functionArgument","functionName","updateParenthesesScalingRecursive","updateBracketNestingRecursive","measureContainer","createElement","style","visibility","whiteSpace","fontSize","fontFamily","body","appendChild","baselineElement","textContent","baselineHeight","getBoundingClientRect","height","removeChild","contentElement","display","buildContentDOM","parent","forEach","textSpan","fracContainer","flexDirection","alignItems","verticalAlign","line","borderTop","width","scriptContainer","sup","sub","rootContainer","paddingTop","paddingLeft","paddingRight","opContainer","symbol","matrixContainer","Math","max","apply","_toConsumableArray","match","parseInt","minHeight","contentHeight","set","_this","bracketPairMap","openBrackets","closeBrackets","getCloseBrackets","bracketStack","bracketPairs","scaleFactor","has","matchingOpenIndex","opening","open","close","slice","heightRatio","calculateContentHeight","currentDepth","_this2","accentType","label","accentPosition","LatexConverter","command","applyFormatting","bold","italic","equationBuilder","inputHandler","random","toString","substr","group","parseLatexGroup","parseLatexToEquation","endIndex","maxDepth","findMaxNestingDepth","toLatexRecursive","trim","element1","element2","wrappers","checkWrapper","w1","w2","findMaxDepthRecursive","localMax","nestingDepth","Boolean","childArray","inOperatorName","processedElements","groupElements","j","haveSameWrappers","cleanGroupElements","cleanEl","_objectSpread","wrappedContent","wrapperOrder","wrapperType","underline","cancel","color","textMode","isTextMode","groupedText","currentFormatting","hasEqualFormatting","escapeLatexSpecialChars","latexCommand","nextIdx","formattedText","applyFormattingToLatex","num","den","_this$getBracketLatex","getBracketLatexSymbols","latexLeft","latexRight","bracketLatex","superscriptLatex","subscriptLatex","operatorSymbol","convertOperatorToLatex","isIndefiniteIntegral","operatorLatex","finalLatex","wrappedOperand","integrandLatex","variableLatex","integralCommand","useRomanD","hasLowerLimit","hasUpperLimit","hasLimits","hasOnlyLowerLimit","limitLatex","lowerLatex","upperLatex","functionLatex","shouldUsePhysicsPackageForDerivative","dvCommandBase","dvCommand","orderLatex","_step2","functionPart","bracketFound","_iterator2","endsWith","innerContent","console","log","diffSymbol","matrixToLatex","stackToLatex","casesToLatex","accentToLatex","functionToLatex","matrixRows","cellsInRow","cellElements","cellContent","join","matrixContent","matrixLatex","matrixFormatting","stackRows","cellLatex","stackContent","stackLatex","repeat","stackFormatting","casesRows","casesContent","casesLatex","casesFormatting","baseLatex","labelLatex","overbraceLabel","underbraceLabel","argumentLatex","nameLatex","constraintLatex","asin","acos","atan","asinh","acosh","atanh","getDifferentialStyleForLatex","result","_loop","operatorInfo","parseLargeOperator","dvResult","parseDvCommand","integralResult","parseCustomIntegral","tryParseDerivativeCommand","lastDerivativeCommandEndIndex","environmentResult","parseMatrixStackCasesEnvironment","tryParseStyleWrapper","lastStyleWrapperEndIndex","isBuiltinFunctionCommand","functionResult","parseBuiltinFunctionCommand","operatorResult","parseOperatorName","isCustomIntegralCommand","integralInfo","indexStart","indexEnd","bracketCount","indexContent","substring","baseElement","isSuper","pop","lastElement","scriptContent","styleWrapper","extractFromStyleWrapper","hasWrapper","parsedElements","styleType","applyStyleModeToElements","isBracketCommand","bracketInfo","parseBracketCommand","skipped","skipBracketCommand","newIndex","tryParseLatexSymbol","tryParseFormattingCommand","lastFormattingCommandEndIndex","colorGroup","contentGroup","formattedElements","applyWrapperToElements","isDoubleUnderline","wrappedElements","tryParseAccentCommand","lastAccentCommandEndIndex","char","startIndex","braceCount","some","cmd","_i","_bracketCommands","leftCommand","commands","pos","leftBracketInfo","extractBracketSymbol","contentStart","depth","rightBracketInfo","_i2","_bracketCommands2","getLatexBracket","isLeft","formatting","legacyFormattingMatch","getEffectiveItalicFormatting","formattingElement","allFormattings","collectAllFormattings","wrapperEligibleFormattings","_step3","referenceFormatting","_iterator3","totalTextElements","countTextElements","ceil","_step4","formattings","_iterator4","_step5","_iterator5","_step6","count","_iterator6","_step7","_iterator7","uniformFormatting","removeUniformFormattingFromElement","_this3","cleanElement","JSON","parse","stringify","_i3","_childArrays","childProp","child","trimmedText","directMatch","values","find","symbolInfo","isOperatorSymbol","wrapperValue","wrapperGroupId","op","nextCharIndex","forceDisplayMode","_step8","operatorCommand","_iterator8","limitGroup","operandGroup","commandLength","len","min","getLatexCommandLength","_step9","_iterator9","nextChar","forceInlineMode","isDisplayFrac","integrandGroup","variableGroup","commandName","regionGroup","lowerGroup","upperGroup","skipClosingBrace","orderStart","orderEnd","orderContent","parsedOrder","isNaN","firstGroup","functionContent","variableContent","secondGroup","_step0","bracketMatch","_iterator0","bracketStart","grandeGroup","firstGroupContent","finalFunction","finalVariable","numeratorLatex","denominatorLatex","numMatch","denMatch","orderFromNum","orderFromDen","variablePart","_step1","_iterator1","DERIVATIVE_COMMANDS","derivativeInfo","parseLongFormDerivative","parseDerivativeFraction","_i4","_styles","pattern","mode","endPos","skipWhitespace","parsed","fractionInfo","parseFraction","prefix","cleanContent","_step10","_iterator10","_step11","_this4","_iterator11","FORMATTING_COMMANDS","_ret","_loop2","v","_i5","_accentCommands","accentCmd","baseContent","finalAccentType","labelGroup","accentElement","isDisplayStyle","contentEnd","k","trimmed","_this5","applyStyleModeToElementsRecursively","_this6","_step12","_iterator12","_step13","_iterator13","hasSubscript","subscriptElements","subscriptGroup","argumentElements","argEnd","argGroup","isLimitOperator","nameGroup","nameElements","argStart","_this7","environmentType","environmentSubtype","endPattern","currentIndex","_i6","_environmentTypes","end","subtype","colSpecEnd","indexOf","split","cellData","rowIndex","cell","colIndex","numRows","numCols","ContextManager","latexConverter","startPosition","endPosition","contextPath","isActive","activeContextPath","path","cursorPosition","getEquation","array","parts","containerName","elementId","getContext","direction","newPosition","navigateMatrixHorizontal","navigateOutOfContext","currentPart","parentPath","nextIndex","targetIndex","targetElement","fieldName","parentElement","cellMatch","currentRow","currentCol","isUserDefinedFunction","parentContext","elementIndex","findIndex","removeElement","_context$parent","currentContent","getContextText","showMixedBracketsError","createTextElement","insertElement","error","errorDiv","cssText","setTimeout","parentNode","selection","finalContextPath","setSelection","checkPos","temp","clearSelection","extendSelection","newStart","newEnd","hasSelection","deleteCount","extractedElements","formattingCounts","true","false","_element$wrappers","_element$wrappers2","_element$wrappers3","underlineTypes","colorTypes","selectionContextPath","w","sharedWrapperIds","elementsModified","filteredFormatting","applyFormattingToElement","entryFormatting","applyFormattingToStructureContents","structureFormatting","applyStructureUnderline","recursiveFormatting","hasTextElements","hasElements","_element$wrappers4","underlineStyle","_element$wrappers5","elementUnderlineStyle","applyToArray","_typeof","FontMeasurementService","Map","get","Promise","resolve","fontKey","getCurrentFontKey","scaleRatios","cachedRatios","applyScaleRatios","ratios","measurementIndex","measureNext","operators","_this$createMeasureme","createMeasurementElements","nolimitsElement","displaylimitsElement","container","requestAnimationFrame","nolimitsSize","getOperatorSize","displaylimitsSize","ratio","remove","top","pointerEvents","nolimitsWrapper","className","innerHTML","displaylimitsWrapper","querySelector","rect","computedStyle","getComputedStyle","getPropertyValue","operatorName","documentElement","setProperty","ensureScaleCSSRules","styleId","styleElement","getElementById","cssRules","_ref13","_ref14","_ref15","_ref16","head","DisplayRenderer","contextManager","globalFontSize","getActiveContextPath","generateMathML","displayElement","classList","toggle","mathmlContent","visualHTML","createWrapperOverlays","getCursorPosition","getSelection","containerClass","containerClassAttr","elementPath","isSelected","elementToMathML","textToMathML","fractionToMathML","bevelledFractionToMathML","sqrtToMathML","nthRootToMathML","scriptToMathML","bracketToMathML","largeOperatorToMathML","derivativeToMathML","integralToMathML","matrixToMathML","stackToMathML","casesToMathML","accentToMathML","functionToMathML","isOperator","isVariable","isNumber","tag","mathVariantAttr","shouldBeItalic","isFunctionName","classNames","classAttr","dataAttrs","finalStyleAttr","numeratorML","generateMathMLContent","denominatorML","classes","styleAttr","buildStructureStyle","displayStyle","radicandML","indexML","baseML","supML","subML","contentML","leftBracket","rightBracket","bracketContent","operandML","operatorData","getOperatorDataAttribute","operatorML","upperML","lowerML","limitsClasses","wrapperClasses","wrapperClassAttr","getDifferentialStylePreference","differentialSymbol","derivativeLongFormToMathML","functionML","variableML","numeratorContent","denominatorContent","orderML","readOnlyOrderML","fractionContent","integralSymbol","getIntegralSymbol","integrandML","differentialVariableML","integralOperatorML","useAboveBelow","cellPath","wrapMatrixWithBrackets","wrapCasesWithBrace","basePath","styledBaseContent","accentSymbol","getAccentSymbol","isStretchy","isStretchyAccent","stretchyAttr","labelPath","labelContent","overlayContainer","underlineGroups","cancelGroups","findElementsWithWrappers","domElement","wrapperId","createGroupedUnderlineOverlay","createGroupedCancelOverlay","callback","containerRect","leftmost","Infinity","rightmost","lowestBottom","bottom","underline1","underline2","topmost","bottommost","svg","createElementNS","setAttribute","String","argumentContent","constraintContent","nameContent","InputHandler","displayRenderer","preventDefault","handleBackspace","handleDelete","ctrlKey","shiftKey","extendSelectionToStructure","enterAdjacentStructure","focusHiddenInput","scrollCursorIntoView","moveCursor","updateDisplay","selectParentStructure","selectCurrentContext","navigateUpDown","navigateTab","toLowerCase","selectAll","toggleBold","toggleTextMode","selectEntireMatrix","selectStructureAtCursor","input","target","processedChar","isInFunctionName","sanitizedChar","sanitizeInputChar","getDefaultItalicForSymbol","insertElementAtCursor","stopPropagation","clickX","clientX","clientY","clientHeight","clientWidth","contextElement","currentElement","dataset","closest","contains","isDragging","onSelectionChange","enterRootContext","enterContextPath","getClickPosition","setCursorPosition","dragStartPosition","mainContainer","event","tabPanel","isFormattingClick","exitEditingMode","blurHiddenInput","newSize","setGlobalFontSize","unicodeSymbol","convertLatexToUnicode","originalSymbol","fraction","createFractionElement","numeratorPath","getElementContextPath","updateParenthesesScaling","displayFraction","createDisplayFractionElement","bevelledFraction","createBevelledFractionElement","sqrtElement","createSquareRootElement","radicandPath","nthRootElement","createNthRootElement","indexPath","scriptElement","createScriptElement","bracketElement","createBracketElement","updateBracketNesting","contentPath","summationElement","sumSymbol","subscriptPath","largeOperatorElement","createLargeOperatorElement","operandPath","selectedElements","extractSelection","createAccentElement","limitConfig","integralElement","createIntegralElement","differentialStyle","integrandPath","insertIntegral","insertSingleIntegral","hiddenInput","focus","blur","cursor","scrollIntoView","behavior","block","inline","matrixPath","pathParts","currentContext","part","matrixElement","nextPart","currentPath","isMatrixCellPath","getMatrixElementFromCellPath","handleDisplayClick","buttons","currentPosition","allVisibleElements","from","querySelectorAll","sort","a","aRect","bRect","elementRect","elementLeft","elementCenter","getCurrentContext","isSelectionBold","applyFormattingToSelection","isSelectionItalic","isSelectionCancel","removeWrapperFormattingFromSelection","applyWrapperFormattingToSelection","underlineType","isSelectionUnderlined","getSelectionFormatting","deleteSelection","charCode","charCodeAt","isInline","isInlineStyle","updateDifferentialStyleRecursive","targetPath","derivative","createDerivativeElement","createMatrixElement","currentContextPath","stackElement","createStackElement","stackPath","casesElement","createCasesElement","casesPath","functionElement","createFunctionElement","argumentPath","constraintPath","namePath","warn","evaluationElement","createEvaluationBracketElement","TabController","tabNav","tabContent","tabNavContainer","leftScrollBtn","rightScrollBtn","setupEventListeners","updateScrollButtons","addEventListener","button","tabId","tab","activateTab","scrollTabs","startX","pageX","offsetLeft","scrollLeft","walk","btn","pane","tabButton","activePane","activeButton","amount","scrollBy","_this$tabNav","scrollWidth","disabled","t","r","Symbol","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","y","G","d","bind","l","TypeError","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","then","_asyncToGenerator","_next","_throw","_defineProperties","_toPropertyKey","toPrimitive","_toPrimitive","MathJaxService","_renderLatexToSvg","_callee","tempDiv","hasDisplayStyle","mathMode","mjxContainer","svgClone","_context","MathJax","texReset","typesetPromise","cloneNode","_x","viewBox","getAttribute","_viewBox$split$map2","parseFloat","minY","vbWidth","vbHeight","baseline","verticalAlignMatch","fractionBars","rectHeight","rectWidth","rectY","rectX","x","isMain","mainFractionBar","centerY","sortedBars","widthDiff","abs","mainIndex","bar","totalHeight","totalWidth","startup","_waitForMathJaxReady","_callee2","_context2","isMathJaxReady","promise","OfficeService","onEquationLoadedCallback","_insertEquationToWord","svgString","baselineOffsetPt","svgSizeBytes","svgSizeKB","base64Svg","base64SizeKB","_t4","_t5","Blob","toFixed","btoa","encodeURIComponent","p1","fromCharCode","Word","run","prefixedLatex","ooxml","ooxmlSizeKB","pngBase64","pngSizeKB","formats","insertionSucceeded","inlinePicture","widthPt","heightPt","_t","_t2","_t3","createInlineImageWithPositionOoxml","insertOoxml","InsertLocation","sync","convertSvgToPng","insertInlinePictureFromBase64","getRange","font","altTextDescription","insertText","_x6","_x2","_x3","_x4","_x5","Office","addHandlerAsync","EventType","DocumentSelectionChanged","handleSelectionChange","_handleSelectionChange","_callee4","_context4","_callee3","picture","altText","originalLatex","_context3","load","inlinePictures","items","loadEquationFromLatex","_x7","_loadEquationFromLatex","_callee5","parsedEquation","_t7","_context5","parseFromLatex","setEquation","_x8","widthInEmus","round","heightInEmus","imageId","uniqueId","floor","positionHalfPt","_convertSvgToPng","_callee6","_context6","reject","svgBlob","svgUrl","URL","createObjectURL","img","Image","onload","dpr","devicePixelRatio","canvasWidth","canvasHeight","canvas","ctx","imageSmoothingEnabled","imageSmoothingQuality","fillStyle","fillRect","drawImage","toBlob","blob","reader","FileReader","base64","revokeObjectURL","onerror","readAsDataURL","drawError","_x9","_x0","_x1","SvgProcessor","targetPtSize","positionInfo","cleanSvgAttributes","minX","scale","baselineOffsetPx","fixThinRectangles","fixColors","addWhiteBackground","convertUseElementsToPaths","XMLSerializer","serializeToString","removeAttribute","minVisibleHeight","newHeight","newY","allElements","hasActualColors","fill","stroke","findParentWithColor","parentWithColor","currentFill","currentStroke","parentFill","parentStroke","bgRect","insertBefore","firstChild","defs","useElement","referencedId","referencedElement","_useElement$parentNod","newPath","hasAttribute","fillColor","strokeColor","replaceChild","MathAddinApp","setEquationBuilder","mathJaxService","officeService","svgProcessor","fontMeasurementService","_initialize","waitForMathJaxReady","getDOMElements","equationDisplay","setInputHandler","updateFormattingUIBasedOnSelection","tabController","setEquationLoadedCallback","handleEquationLoaded","setupEquationImageHandler","updateColorPreview","currentColor","updateHexColorPreview","hexInput","measureAndSetScaleRatios","insertButton","clearButton","statusDiv","fontSizeInput","fontSizeDropdownBtn","fontSizeDropdown","boldBtn","italicBtn","underlineBtn","underlineDropdownBtn","cancelBtn","colorBtn","colorDropdownBtn","textModeBtn","underlineDropdown","colorPanel","colorPreview","hexColorPreview","colorOkBtn","colorCancelBtn","handleInsertEquation","handleClearEquation","handleKeyPress","handleInput","handleFontSizeChange","handleFontSizeDropdownClick","handleFontSizeOptionClick","toggleItalic","handleUnderlineApply","handleUnderlineDropdownClick","toggleCancel","handleColorApply","handleColorDropdownClick","handleTextModeToggle","handleColorPanelClick","handleColorOk","handleColorCancel","handleHexInputChange","handleUnderlineOptionClick","handleOutsideClick","handleBuilderButtonClick","handleFormatButtonClick","handleDifferentialStyleToggle","displayStyleToggle","handleDisplayStyleToggle","handleMouseDown","handleMouseMove","handleMouseUp","handleDocumentClick","insertDisplayFraction","insertFraction","insertBevelledFraction","insertSymbol","greekLetter","greek","accent","insertAccent","arrow","handleMatrixButtonClick","insertSquareRoot","insertNthRoot","insertScript","insertSuperscriptSubscript","bracket","handlePresetBracketInsertion","handleCustomBracketInsertion","evaluationType","handleEvaluationBracketInsertion","insertLargeOperator","insertDefiniteIntegral","insertDerivative","insertDerivativeLongForm","insertPartialDerivative","insertPartialDerivativeLongForm","insertDoubleIntegral","insertDoubleIntegralSubscript","insertDoubleIntegralLower","insertTripleIntegral","insertTripleIntegralSubscript","insertTripleIntegralLower","insertContourIntegral","insertContourIntegralSubscript","stack","handleStackButtonClick","cases","handleCasesButtonClick","insertFunction","insertCustomBrackets","leftSelect","rightSelect","insertEvaluationBracket","dropdown","isVisible","closeAllDropdowns","currentValue","option","Event","bubbles","dispatchEvent","opt","setUnderlineStyle","updateUnderlineUI","currentUnderlineStyle","optionElement","selectedOption","getTextMode","updateTextModeUI","setTextColor","sq","isValidHexColor","selectColor","borderColor","backgroundColor","rgbToHex","romanBtn","setDifferentialStyle","updateExistingDifferentialStyle","updateDerivativeElementsStyle","hasPhysicsDerivatives","hasCustomDerivatives","detectedStyle","setDifferentialStyleUI","toggleBtn","setInlineStyle","updateExistingEquationStyle","hex","rgb","_handleEquationLoaded","_statusDiv","detectAndSetDifferentialStyle","_handleInsertEquation","svgElement","_this$svgProcessor$pr","errorMessage","getGlobalFontSize","isEmpty","convertToLatex","renderLatexToSvg","extractSvgPositionInfo","prepareSvgForOffice","insertEquationToWord","message","_statusDiv$textConten","currentMatrixType","showMatrixSizePanel","insertStack","promptForStackSize","insertCases","promptForCasesSize","showStackCasesSizePanel","panel","header","rowsInput","pendingStackCasesType","pendingStackCasesCols","typeName","setupStackCasesPanelEventListeners","select","createBtn","_createBtn$parentNode","newCreateBtn","currentRowsInput","_cancelBtn$parentNode","newCancelBtn","_rowsInput$parentNode","newRowsInput","initializeMatrixGridSelector","setupMatrixPanelEventListeners","gridSelector","highlightMatrixGrid","selectMatrixSize","colsInput","createMatrix","onclick","alert","hideMatrixSizePanel","onReady","host","HostType","initialize","catch"],"sourceRoot":""}